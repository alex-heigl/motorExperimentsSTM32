ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32wbxx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  20              		.align	1
  21              		.weak	HAL_ADC_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADC_MspInit:
  27              	.LVL0:
  28              	.LFB1106:
  29              		.file 1 "Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c"
   1:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
   2:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @file    stm32wbxx_hal_adc.c
   4:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          "stm32wbxx_hal_adc_ex.c".
  21:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
  22:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @attention
  23:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
  24:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * Copyright (c) 2019 STMicroelectronics.
  25:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * All rights reserved.
  26:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
  27:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  28:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * in the root directory of this software component.
  29:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 2


  30:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
  31:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
  32:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   @verbatim
  33:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ==============================================================================
  34:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                      ##### ADC peripheral features #####
  35:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ==============================================================================
  36:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   [..]
  37:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  38:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  39:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  40:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       analog watchdog or overrun events.
  41:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  42:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Single and continuous conversion modes.
  43:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  44:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  45:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  46:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  47:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  48:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  49:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  50:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  51:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  52:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  53:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  54:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  55:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  56:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  57:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC calibration
  58:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  59:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC conversion of regular group.
  60:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  61:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  62:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  63:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  64:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       Vdda or to an external voltage reference).
  65:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  66:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  67:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                      ##### How to use this driver #####
  68:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ==============================================================================
  69:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
  70:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  71:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  72:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ============================================================
  73:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
  74:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  75:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Enable the ADC interface
  76:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  77:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  78:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) Two clock settings are mandatory:
  79:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  80:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  81:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  82:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB2 clock
  83:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 (output divider R) or t
  84:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    running up to 64MHz.
  85:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  86:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) Example:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 3


  87:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  88:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    other device clock parameters configuration:
  89:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  90:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  91:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  92:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  93:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  94:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  95:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  96:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  97:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  98:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  99:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) ADC pins configuration
 101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
 102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
 103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
 104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_GPIO_Init()
 105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure the NVIC for ADC
 108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               ADCx_IRQHandler().
 112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_DMA_Init().
 116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Configure the NVIC for DMA
 117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ================================================================
 124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADC_Init().
 129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         monitored, thresholds, ...)
 136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Execution of ADC conversions ***
 139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ====================================
 140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         conversion accuracy
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 4


 144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         transfer by DMA.
 148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC conversion by polling:
 150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Start()
 152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Retrieve conversion results
 155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Stop()
 158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC conversion by interruption:
 160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 (this function must be implemented in user program)
 165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Retrieve conversion results
 166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 (these functions must be implemented in user program)
 176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 destination variable address.
 178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      *** Deinitialization of ADC ***
 190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ============================================================
 191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Disable the ADC interface
 194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         (++) ADC clock disable
 198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              (+++) Example:
 200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 5


 201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    other device clock parameters configuration:
 202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) ADC pins configuration
 207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Disable the NVIC for ADC
 212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Deinitialize the DMA
 216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_DMA_Init().
 217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (++) Disable the NVIC for DMA
 218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     *** Callback registration ***
 223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     =============================================
 224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      to register an interrupt callback.
 230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      and a pointer to the user callback function.
 246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      weak function.
 250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      and the Callback ID.
 254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      This function allows to reset following callbacks:
 255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 6


 258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
 285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      or HAL_ADC_Init() function.
 289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      [..]
 290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      are set to the corresponding weak functions.
 294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   @endverbatim
 296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ******************************************************************************
 297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #include "stm32wbxx_hal.h"
 301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @addtogroup STM32WBxx_HAL_Driver
 303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC ADC
 307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief ADC HAL module driver
 308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 7


 315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                                                         when no regular conversion 
 325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   disable settling time, ...).                                             */
 328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   maximum prescalers.                                                      */
 330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | ADC_CHS
 346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
 350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
 351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
 365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
 366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
 367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
 369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]  This section provides functions allowing to:
 370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Initialize and configure the ADC.
 371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) De-initialize the ADC.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 8


 372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
 373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
 374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
 377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         in header of this file).
 382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         before HAL_ADC_Init().
 389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         "ADC_InitTypeDef".
 392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
 396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
 397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR = 0UL;
 402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check ADC handle */
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc == NULL)
 413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     return HAL_ERROR;
 415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 9


 429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
 435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Init the ADC Callback settings */
 470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif  /* !ADC_SUPPORT_2_5_MSPS */
 478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 10


 486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Init the low level hardware */
 488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Init the low level hardware */
 491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC error code to none */
 495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Initialize Lock */
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* - Exit from deep power-down mode and ADC voltage regulator enable        */
 502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Feature "deep power-down" not available on ADC peripheral of this STM32WB device */
 504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC deep power down mode */
 508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       wait_loop_index--;
 528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
 537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 11


 543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
 563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Clock configuration                                                 */
 567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - ADC resolution                                                      */
 568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* parameters):                                                         */
 578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of ADC resolution                                      */
 582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR1_RES        ,
 584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  hadc->Init.Resolution );
 585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of ADC:                                                */
 587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - clock                                                             */
 588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling enable                                               */
 589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling ratio                                                */
 590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling shift                                                */
 591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - oversampling discontinuous mode (triggered mode)                  */
 592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - trigger frequency mode                                            */
 593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR2 |= ( (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                     hadc->Init.TriggerFrequencyMode
 595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                     );
 596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR2_LFTRIG     ,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 12


 600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  tmpCFGR2              );
 601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* with selectable prescaler.                                           */
 604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(ADC1_COMMON->CCR                         ,
 609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CCR_PRESC                            ,
 610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC );
 611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - overrun                                                             */
 620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger polarity                                           */
 622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - data alignment                                                      */
 623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - resolution                                                          */
 624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - scan direction                                                      */
 625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - DMA continuous request                                              */
 626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmpCFGR |= (ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_OVERRUN(hadc->Init.Overrun)                            |
 630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                            |
 631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                      |
 632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update setting of discontinuous mode only if continuous mode is disabled */
 635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Enable the selected ADC group regular discontinuous mode */
 640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmpCFGR |= ADC_CFGR1_DISCEN;
 641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
 643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* cannot be enabled simultaneously.                                  */
 647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
 648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update ADC state machine to error */
 649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
 651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
 652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 13


 657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* start.                                                                 */
 658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       software start.                                                  */
 661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR |= ( (hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC configuration register with previous settings */
 668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR1,
 669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_DISCEN    |
 670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_AUTOFF    |
 671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_CHSELRMOD |
 672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_WAIT      |
 673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_CONT      |
 674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_OVRMOD    |
 675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_EXTSEL    |
 676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_EXTEN     |
 677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_ALIGN     |
 678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_SCANDIR   |
 679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                ADC_CFGR1_DMACFG,
 680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                tmpCFGR);
 681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Channel sampling time configuration */
 683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else if(hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC group regular sequencer:                                   */
 706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - Set ADC group regular sequencer to value memorized              */
 707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*    in HAL ADC handle                                               */
 708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*    Note: This value maybe be initialized at a unknown value,       */
 709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*          therefore after the first call of "HAL_ADC_Init()",       */
 710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*          each rank corresponding to parameter "NbrOfConversion"    */
 711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*          must be set using "HAL_ADC_ConfigChannel()".              */
 712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*    and do not modify other ranks value.                            */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 14


 714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CHSELR,
 715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   ADC_CHSELR_SQ_ALL,
 716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   ((ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RAN
 717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    (hadc->ADCGroupRegularSequencerRanks))
 718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 );
 719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check through register CFGR1 (excluding analog watchdog configuration: */
 724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* set into separate dedicated function, and bits of ADC resolution set   */
 725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* out of temporary variable 'tmpCFGR').                                  */
 726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CF
 727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          == tmpCFGR)
 728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to none */
 730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set the ADC state */
 733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
 738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
 740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - clock configuration                                                 */
 756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*                                                                      */
 762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*                                                                      */
 766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* parameters):                                                         */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 15


 771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmpCFGR |= (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* start.                                                                 */
 803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       software start.                                                  */
 806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  );
 811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update Configuration Register CFGR */
 814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 16


 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Right bit shift                                                 */
 844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Triggered mode                                                  */
 845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   );
 857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
 859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
 881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 17


 885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Initialize the ADC state */
 886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
 891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
 893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
 899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
 900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
 903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         the core clock reset all ADC instances).
 910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         common group is still running.
 914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
 918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
 919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
 920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check ADC handle */
 925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc == NULL)
 926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     return HAL_ERROR;
 928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC state */
 934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Stop potential conversion on going */
 937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 18


 942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
 946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* injected sequence.                                                       */
 952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable the ADC peripheral */
 959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Change ADC state */
 965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register IER */
 978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY   ) );
 982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register ISR */
 984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY   ) );
 988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CR */
 990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
 993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR1 */
 994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH  | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CFGR1_D
 995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT    | ADC_CFGR1_O
 996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN   | ADC_CFGR1_R
 997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN   |
 998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                              ADC_CFGR1_CHSELRMOD);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 19


 999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR2 */
1001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
1002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       already done above.                                              */
1003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
1004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SMPR */
1006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
1007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR */
1009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->TR &= ~(ADC_TR_HT | ADC_TR_LT);
1010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CHSELR */
1012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
1013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register DR */
1015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
1016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register IER */
1019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (
1020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
1022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOCAL | ADC_IT_CCRDY |
1023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
1025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC | ADC_IT_JQOVF |
1026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  | ADC_IT_OVR   |
1028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
1029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register ISR */
1031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (
1032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
1034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOCAL | ADC_FLAG_CCRDY |
1035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
1037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC | ADC_FLAG_JQOVF |
1038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  | ADC_FLAG_OVR  |
1040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
1041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CR */
1043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
1044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
1045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      no direct reset applicable.
1046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      Update CR register to reset value where doable by software */
1047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
1048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
1049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR */
1051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
1052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
1053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CFGR2 */
1055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 20


1056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
1057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SMPR1 */
1059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
1060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SMPR2 */
1062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
1063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
1064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
1065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR1 */
1067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
1068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR2 */
1070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
1071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register TR3 */
1073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
1074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR1 */
1076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
1077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
1078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR2 */
1080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
1081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
1082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR3 */
1084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
1085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
1086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register SQR4 */
1088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
1089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
1091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register DR */
1093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
1094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR1 */
1096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
1097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR2 */
1098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
1099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR3 */
1100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
1101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR4 */
1102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
1103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
1105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
1106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register AWD2CR */
1108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
1109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register AWD3CR */
1111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
1112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 21


1113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register DIFSEL */
1114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
1115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register CALFACT */
1117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
1122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
1124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ADCs are disabled.   */
1125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
1126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
1128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
1129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
1130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
1131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
1132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
1133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     */
1134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
1135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DeInit the low level hardware.
1138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      For example:
1140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
1141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
1142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
1143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
1145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     the clock will reset all ADCs.
1146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
1150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
1152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
1155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
1156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
1158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
1159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC error code to none */
1162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
1163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset HAL ADC handle variable */
1166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
1167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset injected channel configuration parameters */
1169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 22


1170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
1171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC state */
1174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
1175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
1177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
1181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
1185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
1187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
1189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
  30              		.loc 1 1189 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
1190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
  35              		.loc 1 1191 3 view .LVU1
1192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
1195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****    */
1196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
  36              		.loc 1 1196 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE1106:
  41              		.section	.text.HAL_ADC_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_ADC_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_ADC_Init:
  49              	.LVL1:
  50              	.LFB1104:
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  51              		.loc 1 399 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 8
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  55              		.loc 1 399 1 is_stmt 0 view .LVU4
  56 0000 30B5     		push	{r4, r5, lr}
  57              		.cfi_def_cfa_offset 12
  58              		.cfi_offset 4, -12
  59              		.cfi_offset 5, -8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 23


  60              		.cfi_offset 14, -4
  61 0002 83B0     		sub	sp, sp, #12
  62              		.cfi_def_cfa_offset 24
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR = 0UL;
  63              		.loc 1 400 3 is_stmt 1 view .LVU5
  64              	.LVL2:
 401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
  65              		.loc 1 401 3 view .LVU6
 402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  66              		.loc 1 402 3 view .LVU7
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
  67              		.loc 1 403 3 view .LVU8
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
  68              		.loc 1 403 17 is_stmt 0 view .LVU9
  69 0004 0023     		movs	r3, #0
  70 0006 0193     		str	r3, [sp, #4]
 407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
  71              		.loc 1 407 3 is_stmt 1 view .LVU10
 408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
  72              		.loc 1 408 3 view .LVU11
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  73              		.loc 1 412 3 view .LVU12
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  74              		.loc 1 412 6 is_stmt 0 view .LVU13
  75 0008 0028     		cmp	r0, #0
  76 000a 00F0DA80 		beq	.L21
  77 000e 0446     		mov	r4, r0
 418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  78              		.loc 1 418 3 is_stmt 1 view .LVU14
 419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  79              		.loc 1 419 3 view .LVU15
 420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
  80              		.loc 1 420 3 view .LVU16
 421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  81              		.loc 1 421 3 view .LVU17
 422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  82              		.loc 1 422 3 view .LVU18
 423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  83              		.loc 1 423 3 view .LVU19
 424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
  84              		.loc 1 424 3 view .LVU20
 425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  85              		.loc 1 425 3 view .LVU21
 426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  86              		.loc 1 426 3 view .LVU22
 427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  87              		.loc 1 427 3 view .LVU23
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  88              		.loc 1 428 3 view .LVU24
 429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
  89              		.loc 1 429 3 view .LVU25
 447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
  90              		.loc 1 447 3 view .LVU26
 449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  91              		.loc 1 449 3 view .LVU27
 456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
  92              		.loc 1 456 7 view .LVU28
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 24


 461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
  93              		.loc 1 461 3 view .LVU29
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  94              		.loc 1 466 3 view .LVU30
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  95              		.loc 1 466 11 is_stmt 0 view .LVU31
  96 0010 436D     		ldr	r3, [r0, #84]
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
  97              		.loc 1 466 6 view .LVU32
  98 0012 13B3     		cbz	r3, .L24
  99              	.LVL3:
 100              	.L4:
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 101              		.loc 1 505 3 is_stmt 1 view .LVU33
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 102              		.loc 1 505 41 is_stmt 0 view .LVU34
 103 0014 2368     		ldr	r3, [r4]
 104              	.LVL4:
 105              	.LBB316:
 106              	.LBI316:
 107              		.file 2 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h"
   1:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
   2:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @file    stm32wbxx_ll_adc.h
   4:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
   9:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
  12:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
  16:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  18:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  19:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #ifndef STM32WBxx_LL_ADC_H
  21:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define STM32WBxx_LL_ADC_H
  22:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  23:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** extern "C" {
  25:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
  26:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  27:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #include "stm32wbxx.h"
  29:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  30:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @addtogroup STM32WBxx_LL_Driver
  31:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  32:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  33:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  34:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  36:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL ADC
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 25


  37:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  38:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  39:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  40:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  43:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  46:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  47:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  48:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  53:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
  56:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* No register ADC_SQRx on this ADC peripheral version */
  57:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
  58:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  59:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  60:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  61:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  62:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  63:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  64:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  65:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
  66:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  67:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  68:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  69:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  70:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
  71:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ1" 
  72:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ2" 
  73:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ3" 
  74:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ4" 
  75:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ5" 
  76:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ6" 
  77:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ7" 
  78:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ8" 
  79:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
  80:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  81:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  82:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  83:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  84:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  85:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  86:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  87:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  88:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  89:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  90:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  91:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  92:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  93:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 26


  94:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  95:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  96:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
  97:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  98:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  99:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - data register offset                                                     */
 103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
 110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - regular trigger source                                                   */
 128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - regular trigger edge                                                     */
 129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 27


 151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - injected trigger source                                                  */
 156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - injected trigger edge                                                    */
 157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel identifier defined by number                                     */
 187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 28


 208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 29


 265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
 311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* the relevant bits for:                                                     */
 314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   common sampling time available.                                          */
 319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 30


 322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* the relevant bits for:                                                     */
 328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   selection on groups.                                                     */
 347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 31


 379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC registers bits positions */
 391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Value equivalent to bitfield "ADC_CFGR1_RES" p
 393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR1_AWDSGL
 394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16UL) /* Value equivalent to bitfield "ADC_TR_HT" posit
 395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Value equivalent to bitfield "ADC_SMPR_SMP1" p
 415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Value equivalent to bitfield "ADC_SMPR_SMP2" p
 416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Value equivalent to bitfield "ADC_SMPR_SMPSEL0
 417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ADC_CFGR1_RES_BITOFFSET_POS
 418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWDSGL_BITOFFSET_POS      ADC_CFGR1_AWDSGL_BITOFFSET_POS
 419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC registers bits groups */
 429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 32


 436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC internal channels related definitions */
 437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3600UL)                     /* Analog voltage reference
 440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Temperature sensor */
 441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a register from a register basis from which an offset
 461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is applied.
 462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Pointer to register address
 465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and multimode
 483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sharing the same ADC common instance):
 487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         disabled.
 489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 33


 493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, this parameter has some cl
 528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              
 531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              For more details, refer to description of this functio
 533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 34


 550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions with prefix "REG").
 558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              data preserved or overwritten.
 606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 35


 607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions with prefix "INJ").
 621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 36


 664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
 695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 37


 721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* DMA transfer.                                                              */
 732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* !ADC_SUPPORT_2_5_MSPS */
 746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 38


 778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 39


 835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
 836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** * @{
 838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** */
 839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* !ADC_SUPPORT_2_5_MSPS */
 874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 40


 892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 41


 949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
1001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** * @{
1002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** */
1003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to full
1004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to not 
1005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 42


1006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
1015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
1016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
1017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
1018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
1019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
1020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
1021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
1022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
1029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
1045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
1046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 series, parame
1049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 series, parame
1050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
1061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 43


1063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 44


1120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 45


1177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
1192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
1193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
1194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
1195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
1196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
1197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
1198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
1199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (0x00000000UL)                                    /*!< A
1218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC analog watchdog 2 and 3" not available on ADC peripheral of this STM32WB device */
1233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 46


1234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
1247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
1248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
1249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
1250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
1251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
1252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
1253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
1254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
1255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
1256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
1257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
1258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
1259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
1260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
1261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
1262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
1263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
1264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
1265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
1266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
1267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
1268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
1269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 47


1291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 48


1348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )   /*!< ADC analog watchdog thres
1350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)   /*!< ADC analog watchdog thres
1351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)   /*!< ADC analog watchdog both 
1352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
1367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
1384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 49


1405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not timeout values.
1426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         above each literal definition.
1428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       not timeout values.                                                  */
1433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       STM32 series:                                                         */
1438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         cycles                                                             */
1445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         configuration.                                                     */
1447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       ( 12UL)  /*!< Delay for internal voltage reference stabi
1460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 50


1462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tSTART").                                                       */
1464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
1467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
1470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Write a value in ADC register
1497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register to be written
1499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
1501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Read a value in ADC register
1506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register to be read
1508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Register value
1509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 51


1519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Example:
1523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will return decimal number "4".
1525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number is returned, either defined with number
1527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (                                                                                     \
1559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      )                                                                                     \
1561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                       \
1562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (                                                                                       \
1563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    )                                                                                       \
1565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from number in decimal format.
1570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Example:
1571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 52


1576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (                                                                            \
1607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (                                                                                             
1614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      )                                                                                             
1618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (                                                                                               
1620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    )                                                                                               
1624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC internal channel:
1632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 53


1633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned from ADC registers,
1641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because internal and external channels share the same channel
1642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         parameters definitions of driver.
1644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a value defined from parameter definition of
1686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC registers.
1689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 54


1690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 55


1747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or a value from functions where a channel number is
1748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned from ADC registers,
1749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because internal and external channels share the same channel
1750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         parameters definitions of driver.
1752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (                                                                            \
1762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
1774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 56


1804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
1831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
1832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
1833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
1835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
1845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 57


1861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
1885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
1886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
1888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
1889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
1891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
1892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
1894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
1895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
1897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
1898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
1900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
1901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
1903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
1904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
1906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ         (1)
1907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
1909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
1910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
1912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
1913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
1915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
1916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 58


1918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
1919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
1921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
1922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
1924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
1925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
1927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
1928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
1930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
1931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
1933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
1934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
1936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
1937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
1939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
1940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
1942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
1943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
1944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
1947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
1948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
1949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
1950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
1951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
1952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
1954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
1955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         different of 12 bits.
1971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 59


1975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            (< ADCx param >,
1977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            );
1979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         different of 12 bits.
1994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            );
2001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 60


2032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential ended to 0x2A:
2033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1,
2035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC common register instance
2052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC123_COMMON)
2056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC12_COMMON)
2059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC1_COMMON)
2062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC common instance are disabled.
2067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are disabled.
2078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled.
2080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 61


2089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (refer to reference manual).
2101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a resolution to another resolution.
2114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__DATA__)                                                                 \
2133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                       (unit: digital value).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 62


2146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       __ADC_DATA__,\
2155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         reference VrefInt.
2164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         stored in system memory for each device during production.
2166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         connected to pin Vref+.
2168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal voltage reference VrefInt.
2174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       (__ADC_RESOLUTION__),                    \
2190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       LL_ADC_RESOLUTION_12B))
2191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         stored in system memory for each device during production.
2197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calculation formula:
2198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 63


2203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  parameters are correct (address and data).
2210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  less accurate than calibrated values),
2213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor.
2223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                 sensor voltage has been measured.
2230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
2243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (refer to device datasheet).
2256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calculation formula:
2257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 64


2260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   (unit: digital value)
2261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  of the current device has characteristics in line with
2267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  datasheet typical values.
2268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                       On STM32WB, refer to device datasheet parameter "Avg_Slop
2282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                       On STM32WB, refer to device datasheet parameter "V30" (co
2284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((( (                                                                        \
2302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                  * 1000UL)                                                     \
2305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        -                                                                       \
2306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                  * 1000UL)                                                     \
2308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       )                                                                        \
2309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 65


2317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These ADC registers are data registers:
2339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
2344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
2354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC register address
2358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
2360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(Register);
2363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve address of register DR */
2365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
2366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 66


2374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC clock source and prescaler must be selected in function of system clock to not exce
2379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: STM32WB55xx ADC maximum frequency is 64MHz (corresponding to 4.27Msmp/s maximu
2380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: STM32WB50xx ADC maximum frequency is 32MHz (corresponding to 2.13Msmp/s maximu
2381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC maximum frequency, refer to datasheet of the selected device.
2382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must be respected.
2385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual.
2386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (*)
2398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2 (*)
2399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4 (*)
2400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (*) Value available on all STM32 devices except: STM32W10xxx, STM32W15xxx.
2414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
2420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 67


2431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (*)
2433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2 (*)
2434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4 (*)
2435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (*) Value available on all STM32 devices except: STM32W10xxx, STM32W15xxx.
2449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
2451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The values not selected are removed from configuration.
2467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor stabilization time.
2471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC conversion of internal channels,
2476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a sampling time minimum value is required.
2477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 68


2488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Add paths to the current configuration.
2505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor stabilization time.
2512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC conversion of internal channels,
2517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a sampling time minimum value is required.
2518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 69


2545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Remove paths to the current configuration.
2546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
2590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 70


2602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled.
2608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         
2616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             cycle).
2623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Refer to reference manual.
2624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         
2641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
2642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             cycle).
2648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Refer to reference manual.
2649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
2651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 71


2659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without having to perform a new calibration using
2662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
2669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         both calibration factors must be concatenated.
2672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         To perform this processing, use helper macro
2673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on group regular.
2678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              CalibrationFactor);
2689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without having to perform a new calibration using
2696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
2703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         both calibration factors must be concatenated.
2706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         To perform this processing, use helper macro
2707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on group regular.
2712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 72


2716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED     (1)
2718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED (1)
2719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
2721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx)
2747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
2768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "SingleDiff".                                                            */
2771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 73


2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC resolution.
2778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC resolution.
2804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
2815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 74


2830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
2858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           in order to reduce power consumption.
2872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           has been retrieved by user software.
2876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           other conversion.
2878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           applications.
2882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           How to use this low power mode:
2883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 75


2887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC conversion start.
2894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of delay during which ADC was idle.
2903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
2906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF          (1)
2916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF (1)
2917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter available only on devices: STM32WB10xx, STM32WB15xx, S
2919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           in order to reduce power consumption.
2936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           has been retrieved by user software.
2940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           other conversion.
2942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 76


2944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           applications.
2946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           How to use this low power mode:
2947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC conversion start.
2958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of delay during which ADC was idle.
2967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
2970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF          (1)
2976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF (1)
2977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter available only on devices: STM32WB10xx, STM32WB15xx, S
2979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
2981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
2990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
3000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 77


3001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
3002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
3003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
3008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
3010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
3011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
3012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
3015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
3017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
3021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
3022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
3025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
3026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
3028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
3030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
3034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
3036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
3037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
3038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Sampling time common to all channels, independently
3039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channels mapped on ADC group regular or injected.
3040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
3041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
3043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
3046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
3048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
3050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
3051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
3052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
3053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
3054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
3057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 78


3058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
3063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
3064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
3069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
3070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
3071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
3072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
3073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
3074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
3075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
3076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
3077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
3080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
3083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
3084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
3088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
3089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
3090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Sampling time common to all channels, independently
3091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channels mapped on ADC group regular or injected.
3092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
3093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
3095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
3096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
3097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
3098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
3099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
3100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
3101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
3107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
3108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
3109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
3110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
3111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
3112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
3113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
3114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 79


3115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
3116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
3118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
3119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC offset" not available on ADC peripheral of this STM32WB device */
3125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or group injected)
3132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           converted data).
3134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are set to 0.
3137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
3146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 80


3172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
3190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or group injected)
3208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
3216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
3218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
3220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 81


3229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
3252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
3256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
3258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted data).
3272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are set to 0.
3275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 82


3286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         force offset state disable or enable
3297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without modifying offset channel or offset value.
3298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              OffsetState);
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset state disabled or enabled.
3332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 83


3343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
3347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
3357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
3361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
3367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         also set trigger polarity to rising edge
3369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx, STM32WB1Mxx: ADC trigger frequency mode must be se
3374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
3375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function
3376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "LL_ADC_SetTriggerFrequencyMode()".
3377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
3379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO  (1)
3389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1   (1)
3391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2   (1)
3392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3   (1)
3393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4   (2)
3394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3   (2)
3397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4   (2)
3398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 84


3400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB series, parameter available only devices: STM32WB10xx, STM32WB15xx, STM3
3402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
3408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
3417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or external, without detail
3419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (equivalent to
3421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
3425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO  (1)
3431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1   (1)
3433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2   (1)
3434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3   (1)
3435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4   (2)
3436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3   (2)
3439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4   (2)
3440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB series, parameter available only devices: STM32WB10xx, STM32WB15xx, STM3
3444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
3446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
3449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
3452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
3453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
3455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 85


3457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
3458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
3459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
3460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
3470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
3473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or external.
3479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
3488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
3491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 86


3514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
3515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
3531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
3534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
3540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
3542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
3544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available:
3545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
3546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank
3547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           affectation to a channel are configurable.
3548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
3550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
3551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are fixed by channel HW number.
3553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
3555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
3560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
3562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
3563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
3564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
3567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
3569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 87


3571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
3573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
3575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available:
3576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
3577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank
3578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           affectation to a channel are configurable.
3579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
3581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
3582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are fixed by channel HW number.
3584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
3586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
3587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
3590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
3591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
3593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
3595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are configurable.
3605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function performs configuration of:
3606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are defined by channel number.
3615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function performs configuration of:
3616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             highest channel number).
3623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           To set scan direction differently, refer to function
3626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           "LL_ADC_REG_SetSequencerScanDirection()".
3627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx, STM32WB1Mxx: after calling functions
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 88


3628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
3630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using "LL_ADC_IsActiveFlag_CCRDY()".
3632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
3633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
3634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for more details.
3635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
3642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
3643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
3644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
3645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
3646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
3647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
3648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
3649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (1)
3660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (1)
3661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (1)
3662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (1)
3663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (1)
3664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (1)
3665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (1)
3666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (1)
3667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
3675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 89


3685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are configurable.
3687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function retrieves:
3688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are defined by channel number.
3697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function retrieves:
3698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             highest channel number).
3705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *          To set scan direction differently, refer to function
3708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *          "LL_ADC_REG_SetSequencerScanDirection()".
3709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
3712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
3713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
3714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
3715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
3716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
3717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
3718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
3719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (1)
3730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (1)
3731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (1)
3732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (1)
3733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (1)
3734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (1)
3735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (1)
3736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (1)
3737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
3741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 90


3742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t ChannelsRanks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
3744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
3745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t RankIndex;
3746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
3747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
3748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   for(RankIndex = 0UL; RankIndex < (32U - 4U); RankIndex+=4U)
3749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
3750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if((ChannelsRanks & (ADC_CHSELR_SQ2 << RankIndex)) == (ADC_CHSELR_SQ2 << RankIndex))
3751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
3752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       SequencerLength = (ADC_CHSELR_SQ2 << RankIndex);
3753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       break;
3754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
3755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
3756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
3757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return SequencerLength;
3758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
3766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
3767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to mode not fully configurable,
3768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
3770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the default scan direction is forward.
3771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
3776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
3778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
3783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
3785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
3789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
3790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the default scan direction is forward.
3791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
3792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
3798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 91


3799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
3800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
3807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS (1)
3822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS (1)
3823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS (1)
3824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS (1)
3825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS (1)
3826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS (1)
3827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS (1)
3828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
3836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
3845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS (1)
3852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS (1)
3853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS (1)
3854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS (1)
3855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS (1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 92


3856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS (1)
3857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS (1)
3858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
3862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
3865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         scan sequence rank.
3873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs configuration of:
3874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         affectation to a channel are configurable.
3879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
3885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx, STM32WB1Mxx: after calling functions
3887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
3889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using "LL_ADC_IsActiveFlag_CCRDY()".
3891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
3892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
3893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for more details.
3894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 93


3913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9  (1)
3925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10 (1)
3926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11 (1)
3927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12 (1)
3928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13 (1)
3929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14 (1)
3930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15 (1)
3931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16 (1)
3932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
3959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 94


3970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
3972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         scan sequence rank.
3988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         affectation to a channel are configurable.
3991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
4002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
4003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
4004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 95


4027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9  (1)
4032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10 (1)
4033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11 (1)
4034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12 (1)
4035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13 (1)
4036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14 (1)
4037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15 (1)
4038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16 (1)
4039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
4041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
4062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) ((READ_BIT(ADCx->CHSELR,
4075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
4076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                       >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
4077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     );
4079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 96


4084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
4086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
4090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
4092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
4098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
4121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
4122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
4123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
4124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
4125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
4126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
4127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
4128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
4129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
4130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
4131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
4132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
4133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
4134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
4135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
4136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
4137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
4138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
4139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 97


4141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
4169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
4177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
4183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 98


4198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
4206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
4207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
4208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
4209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
4210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
4211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
4212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
4213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
4214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
4215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
4216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
4217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
4218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
4219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
4220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
4221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
4222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
4223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
4224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
4254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 99


4255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
4262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
4268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
4291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
4292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
4293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
4294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
4295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
4296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
4297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
4298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
4299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
4300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
4301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
4302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
4303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
4304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
4305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
4306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
4307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
4308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
4309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 100


4312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
4339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
4347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
4350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 101


4369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be retrieved.
4372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
4374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
4375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
4376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
4377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
4378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
4379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
4380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
4381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
4382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
4383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
4384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
4385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
4386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
4387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
4388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
4389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
4390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
4391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
4392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
4394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
4421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
4423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
4425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 102


4426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
4427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
4428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
4429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
4430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
4431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
4432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
4433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
4434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
4435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
4436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
4437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
4438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
4439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
4440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
4441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
4442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
4443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
4444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - single mode: one conversion per trigger
4450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           conversions launched successively automatically.
4452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
4469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - single mode: one conversion per trigger
4478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           conversions launched successively automatically.
4480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 103


4483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
4487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
4490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode:
4500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           when number of DMA data transfers (number of
4502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions) is reached.
4503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions).
4507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode non-circular:
4510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
4519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
4532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 104


4540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode:
4542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           when number of DMA data transfers (number of
4544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions) is reached.
4545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions).
4549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode non-circular:
4552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
4566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
4569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         data preserved or overwritten.
4578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         other devices without this feature have a behavior
4580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         equivalent to data overwritten.
4581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         overrun should be set to data overwritten.
4584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 105


4597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
4599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         data preserved or overwritten.
4607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
4614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
4617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
4624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
4628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
4631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
4637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         also set trigger polarity to rising edge
4639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
4645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 106


4654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
4671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or external, without detail
4673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (equivalent to
4675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
4679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
4692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
4702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
4705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             or external
4710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 107


4711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
4754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs configuration of:
4761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 108


4768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function retrieves:
4787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
4801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
4809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 109


4825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
4827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence rank.
4841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 110


4882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence rank.
4905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
4908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
4915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
4916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
4917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 111


4939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
4949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
4964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent or from ADC group regular.
4969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC group injected.
4975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent trigger.
4978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC group regular.
4983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
4989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 112


4996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent or from ADC group regular.
5004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - group injected trigger
5019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer length
5020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer ranks
5021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         If contexts queue is disabled:
5022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - only 1 sequence can be configured
5023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           and is active perpetually.
5024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         If contexts queue is enabled:
5025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - up to 2 contexts can be queued
5026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           into the queue).
5036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 113


5053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         contexts queue.
5079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - group injected trigger
5081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer length
5082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer ranks
5083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         cannot be used):
5087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
5096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
5098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
5099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
5103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 114


5110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 115


5167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 116


5224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t TriggerSource,
5239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JL,
5261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SequencerNbRanks
5268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
5273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
5278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 117


5281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
5288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
5291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
5293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
5302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
5303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 118


5338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
5354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
5355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
5356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
5363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
5364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
5365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
5375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
5378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
5380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
5389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
5390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 119


5395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 120


5452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
5457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
5458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
5468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
5475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 121


5509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
5534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
5535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
5539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
5541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
5542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
5543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
5544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
5546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
5547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
5548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 122


5566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
5621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 123


5623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
5624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
5625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
5626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
5628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
5629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
5630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
5637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC channel differential mode" not available on ADC peripheral of this STM32WB device *
5643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
5647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC group regular or injected.
5649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available in differential mode.
5655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not available in differential mode.
5657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB, channels 16, 17, 18 of ADC1
5660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
5667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
5668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 124


5680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
5705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available in differential mode.
5713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not available in differential mode.
5715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB, channels 16, 17, 18 of ADC1
5718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 125


5737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
5743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
5750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
5754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled.
5762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
5767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
5772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
5777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
5780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
5786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 126


5794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
5805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
5806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
5808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
5809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
5811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
5812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
5814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
5815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
5817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
5818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
5820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
5821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
5823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
5824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
5826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ          (1)
5827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
5829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
5830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
5832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
5833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
5835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
5836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
5838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
5839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
5841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
5842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
5844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
5845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
5847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
5848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
5850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 127


5851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
5853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
5854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
5856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
5857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
5859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
5860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
5862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
5863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
5867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
5870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
5874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
5875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
5881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
5882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
5884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (LL_ADC_AWD1 & ADC_AWD_CR_ALL_CHANNEL_MASK),
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDChannelGroup & LL_ADC_AWD1);
5886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
5895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDChannelGroup & AWDy);
5897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
5903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 128


5908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
5910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
5911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
5912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           one channel.
5915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
5917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
5922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
5927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
5930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
5936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)(2)
5950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)(2)
5951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             by bitfield.
5957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
5958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
5962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
5963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 129


5965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
5966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
5968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
5969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
5971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
5972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
5974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
5975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
5977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
5978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
5980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
5981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
5983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ         (1)
5984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
5986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
5987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
5989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
5990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
5992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
5993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
5995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
5996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
5998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
5999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
6000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
6001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
6002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
6003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
6004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
6005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
6006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
6007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
6008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
6009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
6010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
6011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
6012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
6013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
6014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
6015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
6016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
6017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
6018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
6019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
6020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 130


6022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
6025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(ADCx->CFGR1, LL_ADC_AWD1) & LL_ADC_AWD1 & ADC_AWD_CR_A
6031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
6032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
6033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* or a single channel.                                                     */
6036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   if(AnalogWDMonitChannels != 0UL)
6037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
6038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if((AnalogWDMonitChannels & ADC_CFGR1_AWD1SGL) == 0UL)
6039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       /* AWD monitoring a group of channels */
6041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       AnalogWDMonitChannels = (AnalogWDMonitChannels
6042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                & (~(ADC_CFGR1_AWD1CH))
6043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               );
6044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     else
6046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       /* AWD monitoring a single channel */
6048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       AnalogWDMonitChannels = (AnalogWDMonitChannels
6049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                | (0x01UL << (AnalogWDMonitChannels >> ADC_CFGR1_AWD1CH_Pos))
6050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               );
6051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
6053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
6054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return AnalogWDMonitChannels;
6055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
6057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
6058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
6060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
6062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* or a single channel.                                                     */
6065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
6066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
6067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
6068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
6070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
6073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
6074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  )
6075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
6076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 131


6079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a single channel */
6081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
6082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
6083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     else
6087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
6092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       else
6096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a single channel */
6098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
6100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
6102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
6106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return AnalogWDMonitChannels;
6108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         high and low.
6114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
6121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
6126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
6131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
6134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 132


6136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
6140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note For devices STM32WB15xx and STM32WB10xx, register ADC_TR is equivalent to ADC_TR1 (generi
6155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "AWDy".                                                                  */
6172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
6179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
6180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
6181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
6183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
6185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         high or low.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 133


6193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
6200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
6205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
6210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
6213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
6219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either ADC groups regular or injected.
6227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note For devices STM32WB15xx and STM32WB10xx, register ADC_TR is equivalent to ADC_TR1 (generi
6234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32, STM32WB1
6241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 134


6250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
6256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
6260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdsHighLow,
6261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
6264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
6266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdsHighLow,
6267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         concatenated.
6275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using helper macro:
6278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note For devices STM32WB15xx and STM32WB10xx, register ADC_TR is equivalent to ADC_TR1 (generi
6289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx, uint32_t AWDy, uint3
6303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
6305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 135


6307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
6309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
6310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
6312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) 
6314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
6319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC oversampling" not available on ADC peripheral of this STM32WB device */
6328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (oversampler buffer reset).
6342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED (1)
6354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED        (1)
6355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED (1)
6356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 136


6364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (oversampler buffer reset).
6378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED (1)
6386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED        (1)
6387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED (1)
6388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
6392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
6395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on the selected ADC group.
6403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are done from 1 trigger)
6406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           needs a trigger)
6408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
6412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 137


6421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
6426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on the selected ADC group.
6434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are done from 1 trigger)
6437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           needs a trigger)
6439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
6446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
6449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling
6456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ratio
6459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - shift
6460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 138


6478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
6509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
6530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 139


6535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC deep power down" not available on ADC peripheral of this STM32WB device */
6545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_DEEPPWD);
6567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 140


6592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
 108              		.loc 2 6596 26 is_stmt 1 view .LVU35
 109              	.LBB317:
6597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 110              		.loc 2 6598 3 view .LVU36
 111              		.loc 2 6598 12 is_stmt 0 view .LVU37
 112 0016 9A68     		ldr	r2, [r3, #8]
 113              		.loc 2 6598 74 view .LVU38
 114 0018 12F0005F 		tst	r2, #536870912
 115 001c 05D0     		beq	.L5
 116              	.LVL5:
 117              		.loc 2 6598 74 view .LVU39
 118              	.LBE317:
 119              	.LBE316:
 508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 120              		.loc 1 508 5 is_stmt 1 view .LVU40
 121              	.LBB318:
 122              	.LBI318:
6582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 123              		.loc 2 6582 22 view .LVU41
 124              	.LBB319:
6587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 125              		.loc 2 6587 3 view .LVU42
 126 001e 9A68     		ldr	r2, [r3, #8]
 127 0020 22F02042 		bic	r2, r2, #-1610612736
 128 0024 22F03F02 		bic	r2, r2, #63
 129 0028 9A60     		str	r2, [r3, #8]
 130              	.LVL6:
 131              	.L5:
6587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 132              		.loc 2 6587 3 is_stmt 0 view .LVU43
 133              	.LBE319:
 134              	.LBE318:
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 135              		.loc 1 516 3 is_stmt 1 view .LVU44
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 136              		.loc 1 516 45 is_stmt 0 view .LVU45
 137 002a 2268     		ldr	r2, [r4]
 138              	.LVL7:
 139              	.LBB320:
 140              	.LBI320:
6599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 141


6610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADVREGEN);
6624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
 141              		.loc 2 6646 26 is_stmt 1 view .LVU46
 142              	.LBB321:
6647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 143              		.loc 2 6648 3 view .LVU47
 144              		.loc 2 6648 12 is_stmt 0 view .LVU48
 145 002c 9368     		ldr	r3, [r2, #8]
 146              		.loc 2 6648 76 view .LVU49
 147 002e 13F0805F 		tst	r3, #268435456
 148 0032 1FD1     		bne	.L6
 149              	.LVL8:
 150              		.loc 2 6648 76 view .LVU50
 151              	.LBE321:
 152              	.LBE320:
 519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 153              		.loc 1 519 5 is_stmt 1 view .LVU51
 154              	.LBB322:
 155              	.LBI322:
6616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 156              		.loc 2 6616 22 view .LVU52
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 142


 157              	.LBB323:
6621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 158              		.loc 2 6621 3 view .LVU53
 159 0034 9368     		ldr	r3, [r2, #8]
 160 0036 23F01043 		bic	r3, r3, #-1879048192
 161 003a 23F03F03 		bic	r3, r3, #63
 162 003e 43F08053 		orr	r3, r3, #268435456
 163 0042 9360     		str	r3, [r2, #8]
 164              	.LVL9:
6621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 165              		.loc 2 6621 3 is_stmt 0 view .LVU54
 166              	.LBE323:
 167              	.LBE322:
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 168              		.loc 1 524 5 is_stmt 1 view .LVU55
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 169              		.loc 1 524 89 is_stmt 0 view .LVU56
 170 0044 604B     		ldr	r3, .L28
 171 0046 1B68     		ldr	r3, [r3]
 172 0048 9B09     		lsrs	r3, r3, #6
 173 004a 604A     		ldr	r2, .L28+4
 174 004c A2FB0323 		umull	r2, r3, r2, r3
 175 0050 9B09     		lsrs	r3, r3, #6
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 176              		.loc 1 524 109 view .LVU57
 177 0052 0133     		adds	r3, r3, #1
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 178              		.loc 1 524 69 view .LVU58
 179 0054 5B00     		lsls	r3, r3, #1
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 180              		.loc 1 524 21 view .LVU59
 181 0056 0193     		str	r3, [sp, #4]
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 182              		.loc 1 525 5 is_stmt 1 view .LVU60
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 183              		.loc 1 525 11 is_stmt 0 view .LVU61
 184 0058 09E0     		b	.L7
 185              	.LVL10:
 186              	.L24:
 491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 187              		.loc 1 491 5 is_stmt 1 view .LVU62
 188 005a FFF7FEFF 		bl	HAL_ADC_MspInit
 189              	.LVL11:
 495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 190              		.loc 1 495 5 view .LVU63
 191 005e 0023     		movs	r3, #0
 192 0060 A365     		str	r3, [r4, #88]
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 193              		.loc 1 498 5 view .LVU64
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 194              		.loc 1 498 16 is_stmt 0 view .LVU65
 195 0062 84F85030 		strb	r3, [r4, #80]
 196 0066 D5E7     		b	.L4
 197              	.L8:
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 198              		.loc 1 527 7 is_stmt 1 view .LVU66
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 143


 199              		.loc 1 527 22 is_stmt 0 view .LVU67
 200 0068 019B     		ldr	r3, [sp, #4]
 201 006a 013B     		subs	r3, r3, #1
 202 006c 0193     		str	r3, [sp, #4]
 203              	.L7:
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 204              		.loc 1 525 28 is_stmt 1 view .LVU68
 205 006e 019B     		ldr	r3, [sp, #4]
 206 0070 002B     		cmp	r3, #0
 207 0072 F9D1     		bne	.L8
 208              	.L6:
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 209              		.loc 1 534 3 view .LVU69
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 210              		.loc 1 534 45 is_stmt 0 view .LVU70
 211 0074 2268     		ldr	r2, [r4]
 212              	.LVL12:
 213              	.LBB324:
 214              	.LBI324:
6646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 215              		.loc 2 6646 26 is_stmt 1 view .LVU71
 216              	.LBB325:
 217              		.loc 2 6648 3 view .LVU72
 218              		.loc 2 6648 12 is_stmt 0 view .LVU73
 219 0076 9368     		ldr	r3, [r2, #8]
 220              		.loc 2 6648 76 view .LVU74
 221 0078 13F0805F 		tst	r3, #268435456
 222 007c 78D1     		bne	.L22
 223              	.LVL13:
 224              		.loc 2 6648 76 view .LVU75
 225              	.LBE325:
 226              	.LBE324:
 537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 227              		.loc 1 537 5 is_stmt 1 view .LVU76
 228 007e 636D     		ldr	r3, [r4, #84]
 229 0080 43F01003 		orr	r3, r3, #16
 230 0084 6365     		str	r3, [r4, #84]
 540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 231              		.loc 1 540 5 view .LVU77
 232 0086 A36D     		ldr	r3, [r4, #88]
 233 0088 43F00103 		orr	r3, r3, #1
 234 008c A365     		str	r3, [r4, #88]
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 235              		.loc 1 542 5 view .LVU78
 236              	.LVL14:
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 237              		.loc 1 542 20 is_stmt 0 view .LVU79
 238 008e 0120     		movs	r0, #1
 239              	.LVL15:
 240              	.L9:
 549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 241              		.loc 1 549 3 is_stmt 1 view .LVU80
 242              	.LBB326:
 243              	.LBI326:
6649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 144


6652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start.
6656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADEN);
6675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADDIS);
6695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
6707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 145


6709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
6718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
6730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
6731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
6732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration run must be performed for each of these
6733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
6735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
6739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This mode must be disabled during calibration
6740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
6741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
6747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCAL);
6754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
6763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
6764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
6765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration run must be performed for each of these
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 146


6766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
6768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration state.
6792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
6797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           starts immediately.
6815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           following the ADC start conversion command.
6818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 147


6823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADSTART);
6835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADSTP);
6855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 244              		.loc 2 6863 26 view .LVU81
 245              	.LBB327:
6864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 246              		.loc 2 6865 3 view .LVU82
 247              		.loc 2 6865 12 is_stmt 0 view .LVU83
 248 0090 9368     		ldr	r3, [r2, #8]
 249              		.loc 2 6865 74 view .LVU84
 250 0092 13F00403 		ands	r3, r3, #4
 251 0096 00D0     		beq	.L10
 252 0098 0123     		movs	r3, #1
 253              	.L10:
 254              	.LVL16:
 255              		.loc 2 6865 74 view .LVU85
 256              	.LBE327:
 257              	.LBE326:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 148


 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 258              		.loc 1 551 3 is_stmt 1 view .LVU86
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 259              		.loc 1 551 13 is_stmt 0 view .LVU87
 260 009a 616D     		ldr	r1, [r4, #84]
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 261              		.loc 1 551 6 view .LVU88
 262 009c 11F0100F 		tst	r1, #16
 263 00a0 40F08880 		bne	.L11
 552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 264              		.loc 1 552 7 view .LVU89
 265 00a4 002B     		cmp	r3, #0
 266 00a6 40F08580 		bne	.L11
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 267              		.loc 1 556 5 is_stmt 1 view .LVU90
 268 00aa 636D     		ldr	r3, [r4, #84]
 269              	.LVL17:
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 270              		.loc 1 556 5 is_stmt 0 view .LVU91
 271 00ac 23F48173 		bic	r3, r3, #258
 272 00b0 43F00203 		orr	r3, r3, #2
 273 00b4 6365     		str	r3, [r4, #84]
 756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 274              		.loc 1 756 5 is_stmt 1 view .LVU92
 275              	.LVL18:
 276              	.LBB328:
 277              	.LBI328:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 278              		.loc 2 6706 26 view .LVU93
 279              	.LBB329:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 280              		.loc 2 6708 3 view .LVU94
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 281              		.loc 2 6708 12 is_stmt 0 view .LVU95
 282 00b6 9368     		ldr	r3, [r2, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 283              		.loc 2 6708 68 view .LVU96
 284 00b8 13F0010F 		tst	r3, #1
 285 00bc 0BD1     		bne	.L12
 286              	.LVL19:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 287              		.loc 2 6708 68 view .LVU97
 288              	.LBE329:
 289              	.LBE328:
 758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 290              		.loc 1 758 7 is_stmt 1 view .LVU98
 291              	.LBB330:
 292              	.LBI330:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 293              		.loc 2 6706 26 view .LVU99
 294              	.LBB331:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 295              		.loc 2 6708 3 view .LVU100
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 296              		.loc 2 6708 12 is_stmt 0 view .LVU101
 297 00be 444B     		ldr	r3, .L28+8
 298 00c0 9B68     		ldr	r3, [r3, #8]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 149


6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 299              		.loc 2 6708 68 view .LVU102
 300 00c2 13F0010F 		tst	r3, #1
 301 00c6 06D1     		bne	.L12
 302              	.LVL20:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 303              		.loc 2 6708 68 view .LVU103
 304              	.LBE331:
 305              	.LBE330:
 777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 306              		.loc 1 777 9 is_stmt 1 view .LVU104
 307 00c8 6368     		ldr	r3, [r4, #4]
 308              	.LVL21:
 309              	.LBB332:
 310              	.LBI332:
2416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 311              		.loc 2 2416 22 view .LVU105
 312              	.LBB333:
2421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 313              		.loc 2 2421 3 view .LVU106
 314 00ca 4249     		ldr	r1, .L28+12
 315 00cc 8A68     		ldr	r2, [r1, #8]
 316 00ce 22F47C12 		bic	r2, r2, #4128768
 317 00d2 1343     		orrs	r3, r3, r2
 318              	.LVL22:
2421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 319              		.loc 2 2421 3 is_stmt 0 view .LVU107
 320 00d4 8B60     		str	r3, [r1, #8]
 321              	.LVL23:
 322              	.L12:
2421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 323              		.loc 2 2421 3 view .LVU108
 324              	.LBE333:
 325              	.LBE332:
 790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 326              		.loc 1 790 5 is_stmt 1 view .LVU109
 790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 327              		.loc 1 790 17 is_stmt 0 view .LVU110
 328 00d6 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 329              		.loc 1 791 27 view .LVU111
 330 00d8 636B     		ldr	r3, [r4, #52]
 790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 331              		.loc 1 790 88 view .LVU112
 332 00da 43EA4233 		orr	r3, r3, r2, lsl #13
 792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 333              		.loc 1 792 27 view .LVU113
 334 00de E268     		ldr	r2, [r4, #12]
 791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 335              		.loc 1 791 88 view .LVU114
 336 00e0 1343     		orrs	r3, r3, r2
 793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 337              		.loc 1 793 27 view .LVU115
 338 00e2 A268     		ldr	r2, [r4, #8]
 792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 339              		.loc 1 792 88 view .LVU116
 340 00e4 1343     		orrs	r3, r3, r2
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 150


 794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 341              		.loc 1 794 17 view .LVU117
 342 00e6 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 343              		.loc 1 793 88 view .LVU118
 344 00ea 43EA0243 		orr	r3, r3, r2, lsl #16
 345              	.LVL24:
 796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 346              		.loc 1 796 5 is_stmt 1 view .LVU119
 796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 347              		.loc 1 796 8 is_stmt 0 view .LVU120
 348 00ee 012A     		cmp	r2, #1
 349 00f0 40D0     		beq	.L25
 350              	.L13:
 806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 351              		.loc 1 806 5 is_stmt 1 view .LVU121
 806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 352              		.loc 1 806 19 is_stmt 0 view .LVU122
 353 00f2 A26A     		ldr	r2, [r4, #40]
 806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 354              		.loc 1 806 8 view .LVU123
 355 00f4 22B1     		cbz	r2, .L14
 808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 356              		.loc 1 808 7 is_stmt 1 view .LVU124
 808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 357              		.loc 1 808 48 is_stmt 0 view .LVU125
 358 00f6 02F47072 		and	r2, r2, #960
 809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  );
 359              		.loc 1 809 31 view .LVU126
 360 00fa E16A     		ldr	r1, [r4, #44]
 809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  );
 361              		.loc 1 809 19 view .LVU127
 362 00fc 0A43     		orrs	r2, r2, r1
 808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 363              		.loc 1 808 15 view .LVU128
 364 00fe 1343     		orrs	r3, r3, r2
 365              	.LVL25:
 366              	.L14:
 814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 367              		.loc 1 814 5 is_stmt 1 view .LVU129
 368 0100 2168     		ldr	r1, [r4]
 369 0102 CD68     		ldr	r5, [r1, #12]
 370 0104 344A     		ldr	r2, .L28+16
 371 0106 2A40     		ands	r2, r2, r5
 372 0108 1A43     		orrs	r2, r2, r3
 373 010a CA60     		str	r2, [r1, #12]
 822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 374              		.loc 1 822 5 view .LVU130
 822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 375              		.loc 1 822 81 is_stmt 0 view .LVU131
 376 010c 2168     		ldr	r1, [r4]
 377              	.LVL26:
 378              	.LBB334:
 379              	.LBI334:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 380              		.loc 2 6863 26 is_stmt 1 view .LVU132
 381              	.LBB335:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 151


 382              		.loc 2 6865 3 view .LVU133
 383              		.loc 2 6865 12 is_stmt 0 view .LVU134
 384 010e 8B68     		ldr	r3, [r1, #8]
 385              	.LVL27:
 386              		.loc 2 6865 74 view .LVU135
 387 0110 13F00403 		ands	r3, r3, #4
 388 0114 00D0     		beq	.L15
 389 0116 0123     		movs	r3, #1
 390              	.L15:
 391              	.LVL28:
 392              		.loc 2 6865 74 view .LVU136
 393              	.LBE335:
 394              	.LBE334:
 823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 395              		.loc 1 823 5 is_stmt 1 view .LVU137
 396              	.LBB336:
 397              	.LBI336:
6866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
6875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all oversampling increased data width (for devices
6883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with feature oversampling).
6884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
6889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 12 bits.
6896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
6904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 152


6906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 10 bits.
6911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
6919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 8 bits.
6926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
6934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 6 bits.
6941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
6949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
6959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 153


6963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           starts immediately.
6970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           following the ADC start conversion command.
6973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_JADSTART);
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_JADSTP);
7010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
 398              		.loc 2 7018 26 view .LVU138
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 154


 399              	.LBB337:
7019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 400              		.loc 2 7020 3 view .LVU139
 401              		.loc 2 7020 12 is_stmt 0 view .LVU140
 402 0118 8A68     		ldr	r2, [r1, #8]
 403              		.loc 2 7020 76 view .LVU141
 404 011a 12F00802 		ands	r2, r2, #8
 405 011e 00D0     		beq	.L16
 406 0120 0122     		movs	r2, #1
 407              	.L16:
 408              	.LVL29:
 409              		.loc 2 7020 76 view .LVU142
 410              	.LBE337:
 411              	.LBE336:
 824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 412              		.loc 1 824 5 is_stmt 1 view .LVU143
 824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 413              		.loc 1 824 8 is_stmt 0 view .LVU144
 414 0122 B3B9     		cbnz	r3, .L17
 825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 415              		.loc 1 825 9 view .LVU145
 416 0124 AAB9     		cbnz	r2, .L17
 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 417              		.loc 1 828 7 is_stmt 1 view .LVU146
 829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 418              		.loc 1 829 18 is_stmt 0 view .LVU147
 419 0126 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 420              	.LVL30:
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 421              		.loc 1 830 18 view .LVU148
 422 0128 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 423              	.LVL31:
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 424              		.loc 1 830 18 view .LVU149
 425 012c 5200     		lsls	r2, r2, #1
 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 426              		.loc 1 828 15 view .LVU150
 427 012e 42EA8332 		orr	r2, r2, r3, lsl #14
 428              	.LVL32:
 832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 429              		.loc 1 832 7 is_stmt 1 view .LVU151
 430 0132 CB68     		ldr	r3, [r1, #12]
 431 0134 23F48043 		bic	r3, r3, #16384
 432 0138 23F00203 		bic	r3, r3, #2
 433 013c 1343     		orrs	r3, r3, r2
 434 013e CB60     		str	r3, [r1, #12]
 834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 435              		.loc 1 834 7 view .LVU152
 834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 436              		.loc 1 834 21 is_stmt 0 view .LVU153
 437 0140 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 438              		.loc 1 834 10 view .LVU154
 439 0144 012B     		cmp	r3, #1
 440 0146 1AD0     		beq	.L26
 861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 155


 441              		.loc 1 861 9 is_stmt 1 view .LVU155
 442 0148 2268     		ldr	r2, [r4]
 443              	.LVL33:
 861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 444              		.loc 1 861 9 is_stmt 0 view .LVU156
 445 014a 1369     		ldr	r3, [r2, #16]
 446 014c 23F00103 		bic	r3, r3, #1
 447 0150 1361     		str	r3, [r2, #16]
 448              	.L17:
 875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 449              		.loc 1 875 5 is_stmt 1 view .LVU157
 875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 450              		.loc 1 875 19 is_stmt 0 view .LVU158
 451 0152 2369     		ldr	r3, [r4, #16]
 875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 452              		.loc 1 875 8 view .LVU159
 453 0154 012B     		cmp	r3, #1
 454 0156 24D0     		beq	.L27
 882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 455              		.loc 1 882 7 is_stmt 1 view .LVU160
 456 0158 2268     		ldr	r2, [r4]
 457 015a 136B     		ldr	r3, [r2, #48]
 458 015c 23F00F03 		bic	r3, r3, #15
 459 0160 1363     		str	r3, [r2, #48]
 460              	.L20:
 887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 461              		.loc 1 887 5 view .LVU161
 462 0162 636D     		ldr	r3, [r4, #84]
 463 0164 23F00303 		bic	r3, r3, #3
 464 0168 43F00103 		orr	r3, r3, #1
 465 016c 6365     		str	r3, [r4, #84]
 466 016e 26E0     		b	.L3
 467              	.LVL34:
 468              	.L22:
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpCFGR = 0UL;
 469              		.loc 1 400 21 is_stmt 0 view .LVU162
 470 0170 0020     		movs	r0, #0
 471 0172 8DE7     		b	.L9
 472              	.LVL35:
 473              	.L25:
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 474              		.loc 1 798 7 is_stmt 1 view .LVU163
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 475              		.loc 1 798 18 is_stmt 0 view .LVU164
 476 0174 626A     		ldr	r2, [r4, #36]
 477 0176 013A     		subs	r2, r2, #1
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 478              		.loc 1 798 15 view .LVU165
 479 0178 43EA4243 		orr	r3, r3, r2, lsl #17
 480              	.LVL36:
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 481              		.loc 1 798 15 view .LVU166
 482 017c B9E7     		b	.L13
 483              	.LVL37:
 484              	.L26:
 836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 485              		.loc 1 836 9 is_stmt 1 view .LVU167
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 156


 837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 486              		.loc 1 837 9 view .LVU168
 838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 487              		.loc 1 838 9 view .LVU169
 839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 488              		.loc 1 839 9 view .LVU170
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 489              		.loc 1 846 9 view .LVU171
 490 017e 2168     		ldr	r1, [r4]
 491 0180 0B69     		ldr	r3, [r1, #16]
 492 0182 23F4FF63 		bic	r3, r3, #2040
 493 0186 23F00403 		bic	r3, r3, #4
 494 018a E26B     		ldr	r2, [r4, #60]
 495              	.LVL38:
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 496              		.loc 1 846 9 is_stmt 0 view .LVU172
 497 018c 256C     		ldr	r5, [r4, #64]
 498 018e 2A43     		orrs	r2, r2, r5
 499 0190 656C     		ldr	r5, [r4, #68]
 500 0192 2A43     		orrs	r2, r2, r5
 501 0194 A56C     		ldr	r5, [r4, #72]
 502 0196 2A43     		orrs	r2, r2, r5
 503 0198 1343     		orrs	r3, r3, r2
 504 019a 43F00103 		orr	r3, r3, #1
 505 019e 0B61     		str	r3, [r1, #16]
 506 01a0 D7E7     		b	.L17
 507              	.L27:
 878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 508              		.loc 1 878 7 is_stmt 1 view .LVU173
 509 01a2 2168     		ldr	r1, [r4]
 510 01a4 0B6B     		ldr	r3, [r1, #48]
 511 01a6 23F00F03 		bic	r3, r3, #15
 512 01aa E269     		ldr	r2, [r4, #28]
 513 01ac 013A     		subs	r2, r2, #1
 514 01ae 1343     		orrs	r3, r3, r2
 515 01b0 0B63     		str	r3, [r1, #48]
 516 01b2 D6E7     		b	.L20
 517              	.LVL39:
 518              	.L11:
 893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 519              		.loc 1 893 5 view .LVU174
 520 01b4 636D     		ldr	r3, [r4, #84]
 521              	.LVL40:
 893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 522              		.loc 1 893 5 is_stmt 0 view .LVU175
 523 01b6 43F01003 		orr	r3, r3, #16
 524 01ba 6365     		str	r3, [r4, #84]
 895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 525              		.loc 1 895 5 is_stmt 1 view .LVU176
 526              	.LVL41:
 895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 527              		.loc 1 895 20 is_stmt 0 view .LVU177
 528 01bc 0120     		movs	r0, #1
 529              	.LVL42:
 530              	.L3:
 900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 531              		.loc 1 900 1 view .LVU178
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 157


 532 01be 03B0     		add	sp, sp, #12
 533              		.cfi_remember_state
 534              		.cfi_def_cfa_offset 12
 535              		@ sp needed
 536 01c0 30BD     		pop	{r4, r5, pc}
 537              	.LVL43:
 538              	.L21:
 539              		.cfi_restore_state
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 540              		.loc 1 414 12 view .LVU179
 541 01c2 0120     		movs	r0, #1
 542              	.LVL44:
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 543              		.loc 1 414 12 view .LVU180
 544 01c4 FBE7     		b	.L3
 545              	.L29:
 546 01c6 00BF     		.align	2
 547              	.L28:
 548 01c8 00000000 		.word	SystemCoreClock
 549 01cc 632D3E05 		.word	87960931
 550 01d0 00000450 		.word	1342439424
 551 01d4 00030450 		.word	1342440192
 552 01d8 07C0F0FF 		.word	-999417
 553              		.cfi_endproc
 554              	.LFE1104:
 556              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 557              		.align	1
 558              		.weak	HAL_ADC_MspDeInit
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	HAL_ADC_MspDeInit:
 564              	.LVL45:
 565              	.LFB1107:
1197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
1200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
1202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         the core clock reset all ADC instances).
1203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
1204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
1206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 566              		.loc 1 1206 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
1207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
 571              		.loc 1 1208 3 view .LVU182
1209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
1212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****    */
1213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 158


 572              		.loc 1 1213 1 is_stmt 0 view .LVU183
 573 0000 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE1107:
 577              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 578              		.align	1
 579              		.global	HAL_ADC_PollForConversion
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 584              	HAL_ADC_PollForConversion:
 585              	.LVL46:
 586              	.LFB1110:
1214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Register a User ADC Callback
1218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         To be used instead of the weak predefined callback
1219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *                the configuration information for the specified ADC.
1221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
1222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This parameter can be one of the following values:
1223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
1237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
1240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (pCallback == NULL)
1244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update the error code */
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     return HAL_ERROR;
1249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
1257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 159


1258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
1261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
1265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status = HAL_ERROR;
1305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 160


1315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status = HAL_ERROR;
1326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update the error code */
1332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Return error status */
1335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     status =  HAL_ERROR;
1336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return status;
1339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *                the configuration information for the specified ADC.
1346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This parameter can be one of the following values:
1348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 161


1372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status =  HAL_ERROR;
1425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 162


1429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (CallbackID)
1431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default :
1441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update the error code */
1442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Return error status */
1445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         status =  HAL_ERROR;
1446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
1447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update the error code */
1452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Return error status */
1455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     status =  HAL_ERROR;
1456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return status;
1459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
1465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief    ADC IO operation functions
1469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
1470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
1471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
1472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                       ##### IO operation functions #####
1473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
1474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]  This section provides functions allowing to:
1475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Start conversion of regular group.
1476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Stop conversion of regular group.
1477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Poll for conversion event.
1479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Get result of regular channel conversion.
1480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Handle ADC interrupt request
1483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 163


1486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
1487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Process locked */
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_LOCK(hadc);
1507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable the ADC peripheral */
1509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state                                                        */
1515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code */
1522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Reset all ADC error code fields */
1524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
1533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset all ADC error code fields */
1535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 164


1543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
1544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* trigger event.                                                       */
1552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Start ADC group regular conversion */
1553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
1556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
1558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
1568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
1578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
1588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
1592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 165


1600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
1620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
1624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
1625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 587              		.loc 1 1645 1 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		.loc 1 1645 1 is_stmt 0 view .LVU185
 592 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 593              		.cfi_def_cfa_offset 24
 594              		.cfi_offset 3, -24
 595              		.cfi_offset 4, -20
 596              		.cfi_offset 5, -16
 597              		.cfi_offset 6, -12
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 166


 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 0446     		mov	r4, r0
 601 0004 0E46     		mov	r6, r1
1646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 602              		.loc 1 1646 3 is_stmt 1 view .LVU186
1647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_Flag_End;
 603              		.loc 1 1647 3 view .LVU187
1648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 604              		.loc 1 1650 3 view .LVU188
1651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 605              		.loc 1 1653 3 view .LVU189
 606              		.loc 1 1653 17 is_stmt 0 view .LVU190
 607 0006 4569     		ldr	r5, [r0, #20]
 608              		.loc 1 1653 6 view .LVU191
 609 0008 082D     		cmp	r5, #8
 610 000a 05D0     		beq	.L32
1654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* each conversion:                                                       */
1662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN) != 0UL)
1668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 611              		.loc 1 1669 5 is_stmt 1 view .LVU192
 612              		.loc 1 1669 8 is_stmt 0 view .LVU193
 613 000c 0368     		ldr	r3, [r0]
 614 000e DB68     		ldr	r3, [r3, #12]
 615              		.loc 1 1669 7 view .LVU194
 616 0010 13F0010F 		tst	r3, #1
 617 0014 1ED1     		bne	.L43
1670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
1673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       return HAL_ERROR;
1676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
1678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
 618              		.loc 1 1679 20 view .LVU195
 619 0016 0425     		movs	r5, #4
 620              	.L32:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 167


 621              	.LVL47:
1680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Get tick count */
1684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tickstart = HAL_GetTick();
 622              		.loc 1 1684 3 is_stmt 1 view .LVU196
 623              		.loc 1 1684 15 is_stmt 0 view .LVU197
 624 0018 FFF7FEFF 		bl	HAL_GetTick
 625              	.LVL48:
 626              		.loc 1 1684 15 view .LVU198
 627 001c 0746     		mov	r7, r0
 628              	.LVL49:
1685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 629              		.loc 1 1687 3 is_stmt 1 view .LVU199
 630              	.L35:
 631              		.loc 1 1687 47 view .LVU200
 632              		.loc 1 1687 15 is_stmt 0 view .LVU201
 633 001e 2368     		ldr	r3, [r4]
 634              		.loc 1 1687 25 view .LVU202
 635 0020 1A68     		ldr	r2, [r3]
 636              		.loc 1 1687 47 view .LVU203
 637 0022 2A42     		tst	r2, r5
 638 0024 1CD1     		bne	.L44
1688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 639              		.loc 1 1690 5 is_stmt 1 view .LVU204
 640              		.loc 1 1690 8 is_stmt 0 view .LVU205
 641 0026 B6F1FF3F 		cmp	r6, #-1
 642 002a F8D0     		beq	.L35
1691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 643              		.loc 1 1692 7 is_stmt 1 view .LVU206
 644              		.loc 1 1692 13 is_stmt 0 view .LVU207
 645 002c FFF7FEFF 		bl	HAL_GetTick
 646              	.LVL50:
 647              		.loc 1 1692 27 view .LVU208
 648 0030 C31B     		subs	r3, r0, r7
 649              		.loc 1 1692 10 view .LVU209
 650 0032 B342     		cmp	r3, r6
 651 0034 01D8     		bhi	.L36
 652              		.loc 1 1692 51 discriminator 1 view .LVU210
 653 0036 002E     		cmp	r6, #0
 654 0038 F1D1     		bne	.L35
 655              	.L36:
1693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 656              		.loc 1 1695 9 is_stmt 1 view .LVU211
 657              		.loc 1 1695 18 is_stmt 0 view .LVU212
 658 003a 2368     		ldr	r3, [r4]
 659              		.loc 1 1695 28 view .LVU213
 660 003c 1B68     		ldr	r3, [r3]
 661              		.loc 1 1695 12 view .LVU214
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 168


 662 003e 2B42     		tst	r3, r5
 663 0040 EDD1     		bne	.L35
1696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
1697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 664              		.loc 1 1698 11 is_stmt 1 view .LVU215
 665 0042 636D     		ldr	r3, [r4, #84]
 666 0044 43F00403 		orr	r3, r3, #4
 667 0048 6365     		str	r3, [r4, #84]
1699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Process unlocked */
1701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 668              		.loc 1 1701 11 view .LVU216
 669              		.loc 1 1701 11 view .LVU217
 670 004a 0023     		movs	r3, #0
 671 004c 84F85030 		strb	r3, [r4, #80]
 672              		.loc 1 1701 11 view .LVU218
1702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_TIMEOUT;
 673              		.loc 1 1703 11 view .LVU219
 674              		.loc 1 1703 18 is_stmt 0 view .LVU220
 675 0050 0320     		movs	r0, #3
 676 0052 04E0     		b	.L33
 677              	.LVL51:
 678              	.L43:
1673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 679              		.loc 1 1673 7 is_stmt 1 view .LVU221
 680 0054 436D     		ldr	r3, [r0, #84]
 681 0056 43F02003 		orr	r3, r3, #32
 682 005a 4365     		str	r3, [r0, #84]
1675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 683              		.loc 1 1675 7 view .LVU222
1675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 684              		.loc 1 1675 14 is_stmt 0 view .LVU223
 685 005c 0120     		movs	r0, #1
 686              	.LVL52:
 687              	.L33:
1704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
1705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Update ADC state machine */
1710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
1717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check whether end of sequence is reached */
1719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 169


1724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
1725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Clear polled flag */
1732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
1733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
1737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_WAIT) == 0UL)
1743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_AUTDLY) == 0UL)
1745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
1753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 688              		.loc 1 1753 1 view .LVU224
 689 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 690              	.LVL53:
 691              	.L44:
1710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 692              		.loc 1 1710 3 is_stmt 1 view .LVU225
 693 0060 626D     		ldr	r2, [r4, #84]
 694 0062 42F40072 		orr	r2, r2, #512
 695 0066 6265     		str	r2, [r4, #84]
1714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 696              		.loc 1 1714 3 view .LVU226
 697              	.LVL54:
 698              	.LBB338:
 699              	.LBI338:
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 700              		.loc 2 3487 26 view .LVU227
 701              	.LBB339:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 702              		.loc 2 3492 3 view .LVU228
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 703              		.loc 2 3492 12 is_stmt 0 view .LVU229
 704 0068 DA68     		ldr	r2, [r3, #12]
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 705              		.loc 2 3492 103 view .LVU230
 706 006a 12F4406F 		tst	r2, #3072
 707 006e 11D1     		bne	.L38
 708              	.LVL55:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 170


3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 709              		.loc 2 3492 103 view .LVU231
 710              	.LBE339:
 711              	.LBE338:
1715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 712              		.loc 1 1715 21 view .LVU232
 713 0070 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
1715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 714              		.loc 1 1715 7 view .LVU233
 715 0072 7AB9     		cbnz	r2, .L38
1719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 716              		.loc 1 1719 5 is_stmt 1 view .LVU234
1719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 717              		.loc 1 1719 9 is_stmt 0 view .LVU235
 718 0074 1A68     		ldr	r2, [r3]
1719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 719              		.loc 1 1719 8 view .LVU236
 720 0076 12F0080F 		tst	r2, #8
 721 007a 0BD0     		beq	.L38
1722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 722              		.loc 1 1722 7 is_stmt 1 view .LVU237
 723 007c 626D     		ldr	r2, [r4, #84]
 724 007e 22F48072 		bic	r2, r2, #256
 725 0082 6265     		str	r2, [r4, #84]
1724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 726              		.loc 1 1724 7 view .LVU238
1724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 727              		.loc 1 1724 16 is_stmt 0 view .LVU239
 728 0084 626D     		ldr	r2, [r4, #84]
1724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 729              		.loc 1 1724 10 view .LVU240
 730 0086 12F4805F 		tst	r2, #4096
 731 008a 03D1     		bne	.L38
1726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 732              		.loc 1 1726 9 is_stmt 1 view .LVU241
 733 008c 626D     		ldr	r2, [r4, #84]
 734 008e 42F00102 		orr	r2, r2, #1
 735 0092 6265     		str	r2, [r4, #84]
 736              	.L38:
1732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 737              		.loc 1 1732 3 view .LVU242
1732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 738              		.loc 1 1732 6 is_stmt 0 view .LVU243
 739 0094 082D     		cmp	r5, #8
 740 0096 07D0     		beq	.L45
1744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 741              		.loc 1 1744 5 is_stmt 1 view .LVU244
1744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 742              		.loc 1 1744 9 is_stmt 0 view .LVU245
 743 0098 DA68     		ldr	r2, [r3, #12]
1744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 744              		.loc 1 1744 8 view .LVU246
 745 009a 12F4804F 		tst	r2, #16384
 746 009e 07D1     		bne	.L41
1747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 747              		.loc 1 1747 7 is_stmt 1 view .LVU247
 748 00a0 0C22     		movs	r2, #12
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 171


 749 00a2 1A60     		str	r2, [r3]
1752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 750              		.loc 1 1752 10 is_stmt 0 view .LVU248
 751 00a4 0020     		movs	r0, #0
 752 00a6 DAE7     		b	.L33
 753              	.L45:
1734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 754              		.loc 1 1734 5 is_stmt 1 view .LVU249
 755 00a8 0822     		movs	r2, #8
 756 00aa 1A60     		str	r2, [r3]
1752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 757              		.loc 1 1752 10 is_stmt 0 view .LVU250
 758 00ac 0020     		movs	r0, #0
 759 00ae D6E7     		b	.L33
 760              	.L41:
 761 00b0 0020     		movs	r0, #0
 762 00b2 D4E7     		b	.L33
 763              		.cfi_endproc
 764              	.LFE1110:
 766              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 767              		.align	1
 768              		.global	HAL_ADC_PollForEvent
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	HAL_ADC_PollForEvent:
 774              	.LVL56:
 775              	.LFB1111:
1754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Poll for ADC event.
1757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param EventType the ADC event type.
1759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          This parameter can be one of the following values:
1760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event (1)
1766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
1767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
1768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 776              		.loc 1 1778 1 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 172


 780              		.loc 1 1778 1 is_stmt 0 view .LVU252
 781 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 782              		.cfi_def_cfa_offset 24
 783              		.cfi_offset 4, -24
 784              		.cfi_offset 5, -20
 785              		.cfi_offset 6, -16
 786              		.cfi_offset 7, -12
 787              		.cfi_offset 8, -8
 788              		.cfi_offset 14, -4
 789 0004 0646     		mov	r6, r0
 790 0006 0D46     		mov	r5, r1
 791 0008 1746     		mov	r7, r2
1779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 792              		.loc 1 1779 3 is_stmt 1 view .LVU253
1780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 793              		.loc 1 1782 3 view .LVU254
1783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 794              		.loc 1 1783 3 view .LVU255
1784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Get tick count */
1786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tickstart = HAL_GetTick();
 795              		.loc 1 1786 3 view .LVU256
 796              		.loc 1 1786 15 is_stmt 0 view .LVU257
 797 000a FFF7FEFF 		bl	HAL_GetTick
 798              	.LVL57:
 799              		.loc 1 1786 15 view .LVU258
 800 000e 8046     		mov	r8, r0
 801              	.LVL58:
1787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check selected event flag */
1789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 802              		.loc 1 1789 3 is_stmt 1 view .LVU259
 803              	.L48:
 804              		.loc 1 1789 46 view .LVU260
 805              		.loc 1 1789 10 is_stmt 0 view .LVU261
 806 0010 3468     		ldr	r4, [r6]
 807 0012 2368     		ldr	r3, [r4]
 808              		.loc 1 1789 46 view .LVU262
 809 0014 35EA0303 		bics	r3, r5, r3
 810 0018 18D0     		beq	.L61
1790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 811              		.loc 1 1792 5 is_stmt 1 view .LVU263
 812              		.loc 1 1792 8 is_stmt 0 view .LVU264
 813 001a B7F1FF3F 		cmp	r7, #-1
 814 001e F7D0     		beq	.L48
1793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 815              		.loc 1 1794 7 is_stmt 1 view .LVU265
 816              		.loc 1 1794 13 is_stmt 0 view .LVU266
 817 0020 FFF7FEFF 		bl	HAL_GetTick
 818              	.LVL59:
 819              		.loc 1 1794 27 view .LVU267
 820 0024 A0EB0800 		sub	r0, r0, r8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 173


 821              		.loc 1 1794 10 view .LVU268
 822 0028 B842     		cmp	r0, r7
 823 002a 01D8     		bhi	.L49
 824              		.loc 1 1794 51 discriminator 1 view .LVU269
 825 002c 002F     		cmp	r7, #0
 826 002e EFD1     		bne	.L48
 827              	.L49:
1795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 828              		.loc 1 1797 9 is_stmt 1 view .LVU270
 829              		.loc 1 1797 13 is_stmt 0 view .LVU271
 830 0030 3368     		ldr	r3, [r6]
 831 0032 1B68     		ldr	r3, [r3]
 832              		.loc 1 1797 12 view .LVU272
 833 0034 35EA0303 		bics	r3, r5, r3
 834 0038 EAD0     		beq	.L48
1798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
1799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 835              		.loc 1 1800 11 is_stmt 1 view .LVU273
 836 003a 736D     		ldr	r3, [r6, #84]
 837 003c 43F00403 		orr	r3, r3, #4
 838 0040 7365     		str	r3, [r6, #84]
1801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Process unlocked */
1803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 839              		.loc 1 1803 11 view .LVU274
 840              		.loc 1 1803 11 view .LVU275
 841 0042 0023     		movs	r3, #0
 842 0044 86F85030 		strb	r3, [r6, #80]
 843              		.loc 1 1803 11 view .LVU276
1804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_TIMEOUT;
 844              		.loc 1 1805 11 view .LVU277
 845              		.loc 1 1805 18 is_stmt 0 view .LVU278
 846 0048 0320     		movs	r0, #3
 847 004a 29E0     		b	.L50
 848              	.L61:
1806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
1807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
1809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   switch (EventType)
 849              		.loc 1 1811 3 is_stmt 1 view .LVU279
 850 004c B5F5807F 		cmp	r5, #256
 851 0050 28D0     		beq	.L52
 852 0052 0BD8     		bhi	.L53
 853 0054 022D     		cmp	r5, #2
 854 0056 1CD0     		beq	.L54
 855 0058 802D     		cmp	r5, #128
 856 005a 35D1     		bne	.L56
1812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* End Of Sampling event */
1814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 174


1816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* For example:                                                             */
1828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_AWD_EVENT:
1834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 857              		.loc 1 1835 7 view .LVU280
 858 005c 736D     		ldr	r3, [r6, #84]
 859 005e 43F48033 		orr	r3, r3, #65536
 860 0062 7365     		str	r3, [r6, #84]
1836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 861              		.loc 1 1838 7 view .LVU281
 862 0064 8023     		movs	r3, #128
 863 0066 2360     		str	r3, [r4]
1839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
 864              		.loc 1 1840 7 view .LVU282
1841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_AWD2_EVENT:
1844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_AWD3_EVENT:
1854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 175


1865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Injected context queue overflow event */
1866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
1868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Overrun event */
1880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* considered as an error.                                                */
1883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* overrun ")                                                             */
1885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC state */
1888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC error code to overrun */
1891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
1894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            as OVR is cleared. */
1898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       break;
1901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
1902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
1904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
 865              		.loc 1 1904 10 is_stmt 0 view .LVU283
 866 0068 0020     		movs	r0, #0
1840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 867              		.loc 1 1840 7 view .LVU284
 868 006a 19E0     		b	.L50
 869              	.L53:
1811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 870              		.loc 1 1811 3 view .LVU285
 871 006c B5F5007F 		cmp	r5, #512
 872 0070 21D0     		beq	.L57
 873 0072 B5F5806F 		cmp	r5, #1024
 874 0076 27D1     		bne	.L56
1868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 875              		.loc 1 1868 7 is_stmt 1 view .LVU286
 876 0078 736D     		ldr	r3, [r6, #84]
 877 007a 43F48043 		orr	r3, r3, #16384
 878 007e 7365     		str	r3, [r6, #84]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 176


1871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 879              		.loc 1 1871 7 view .LVU287
 880 0080 B36D     		ldr	r3, [r6, #88]
 881 0082 43F00803 		orr	r3, r3, #8
 882 0086 B365     		str	r3, [r6, #88]
1874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 883              		.loc 1 1874 7 view .LVU288
 884 0088 4FF48063 		mov	r3, #1024
 885 008c 2360     		str	r3, [r4]
1876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 886              		.loc 1 1876 7 view .LVU289
 887              		.loc 1 1904 10 is_stmt 0 view .LVU290
 888 008e 0020     		movs	r0, #0
1876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 889              		.loc 1 1876 7 view .LVU291
 890 0090 06E0     		b	.L50
 891              	.L54:
1816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 892              		.loc 1 1816 7 is_stmt 1 view .LVU292
 893 0092 736D     		ldr	r3, [r6, #84]
 894 0094 43F40063 		orr	r3, r3, #2048
 895 0098 7365     		str	r3, [r6, #84]
1819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 896              		.loc 1 1819 7 view .LVU293
 897 009a 0223     		movs	r3, #2
 898 009c 2360     		str	r3, [r4]
1821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 899              		.loc 1 1821 7 view .LVU294
 900              		.loc 1 1904 10 is_stmt 0 view .LVU295
 901 009e 0020     		movs	r0, #0
 902              	.L50:
1905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 903              		.loc 1 1905 1 view .LVU296
 904 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 905              	.LVL60:
 906              	.L52:
1845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 907              		.loc 1 1845 7 is_stmt 1 view .LVU297
 908 00a4 736D     		ldr	r3, [r6, #84]
 909 00a6 43F40033 		orr	r3, r3, #131072
 910 00aa 7365     		str	r3, [r6, #84]
1848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 911              		.loc 1 1848 7 view .LVU298
 912 00ac 4FF48073 		mov	r3, #256
 913 00b0 2360     		str	r3, [r4]
1850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 914              		.loc 1 1850 7 view .LVU299
1904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 915              		.loc 1 1904 10 is_stmt 0 view .LVU300
 916 00b2 0020     		movs	r0, #0
1850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 917              		.loc 1 1850 7 view .LVU301
 918 00b4 F4E7     		b	.L50
 919              	.L57:
1855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 920              		.loc 1 1855 7 is_stmt 1 view .LVU302
 921 00b6 736D     		ldr	r3, [r6, #84]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 177


 922 00b8 43F48023 		orr	r3, r3, #262144
 923 00bc 7365     		str	r3, [r6, #84]
1858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 924              		.loc 1 1858 7 view .LVU303
 925 00be 4FF40073 		mov	r3, #512
 926 00c2 2360     		str	r3, [r4]
1860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 927              		.loc 1 1860 7 view .LVU304
1904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 928              		.loc 1 1904 10 is_stmt 0 view .LVU305
 929 00c4 0020     		movs	r0, #0
1860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 930              		.loc 1 1860 7 view .LVU306
 931 00c6 EBE7     		b	.L50
 932              	.L56:
1885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 933              		.loc 1 1885 7 is_stmt 1 view .LVU307
1885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 934              		.loc 1 1885 21 is_stmt 0 view .LVU308
 935 00c8 736B     		ldr	r3, [r6, #52]
1885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 936              		.loc 1 1885 10 view .LVU309
 937 00ca 4BB9     		cbnz	r3, .L59
1888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 938              		.loc 1 1888 9 is_stmt 1 view .LVU310
 939 00cc 736D     		ldr	r3, [r6, #84]
 940 00ce 43F48063 		orr	r3, r3, #1024
 941 00d2 7365     		str	r3, [r6, #84]
1891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 942              		.loc 1 1891 9 view .LVU311
 943 00d4 B36D     		ldr	r3, [r6, #88]
 944 00d6 43F00203 		orr	r3, r3, #2
 945 00da B365     		str	r3, [r6, #88]
1904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 946              		.loc 1 1904 10 is_stmt 0 view .LVU312
 947 00dc 0020     		movs	r0, #0
 948 00de DFE7     		b	.L50
 949              	.L59:
1898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 950              		.loc 1 1898 9 is_stmt 1 view .LVU313
 951 00e0 1023     		movs	r3, #16
 952 00e2 2360     		str	r3, [r4]
1904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 953              		.loc 1 1904 10 is_stmt 0 view .LVU314
 954 00e4 0020     		movs	r0, #0
 955 00e6 DBE7     		b	.L50
 956              		.cfi_endproc
 957              	.LFE1111:
 959              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 960              		.align	1
 961              		.global	HAL_ADC_GetValue
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 966              	HAL_ADC_GetValue:
 967              	.LVL61:
 968              	.LFB1116:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 178


1906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
1908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         OVR overrun.
1912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         mode), the user must:
1919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
1923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
1924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
1925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
1927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
1930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
1935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Process locked */
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_LOCK(hadc);
1937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable the ADC peripheral */
1939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
1944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state                                                        */
1945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code */
1952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Reset all ADC error code fields */
1954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
1956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 179


1963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset all ADC error code fields */
1965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
1974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
1987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         default:
1989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
1991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
1992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
1993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
1999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
2003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
2004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
2005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* trigger event.                                                       */
2006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Start ADC group regular conversion */
2007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
2008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Process unlocked */
2012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 180


2020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
2028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
2029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
2031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
2033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
2043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
2044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
2045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
2047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
2054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
2059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
2065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
2067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 181


2077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
2085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Interruptions enabled in this function:
2086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
2087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
2088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param pData Destination Buffer address.
2090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
2092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Process locked */
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_LOCK(hadc);
2105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Enable the ADC peripheral */
2107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC state                                                        */
2113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
2120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset all ADC error code fields */
2121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
2122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
2130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Reset all ADC error code fields */
2132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 182


2134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the DMA error callback */
2143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* operations)                                                        */
2152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Process unlocked */
2155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Enable ADC DMA mode */
2165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
2166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
2167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Start the DMA channel */
2172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* trigger event.                                                       */
2178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Start ADC group regular conversion */
2179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
2182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Process unlocked */
2184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 183


2191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         ADC peripheral.
2200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
2205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
2218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
2219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
2228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
2229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update ADC state machine to error */
2243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 184


2248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (void)ADC_Disable(hadc);
2260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
2267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
2269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
2283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
2284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            to flag EOC.
2295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         To clear this flag, either use function:
2299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval ADC group regular conversion data
2304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 185


2305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** uint32_t HAL_ADC_GetValue(const ADC_HandleTypeDef *hadc)
2306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 969              		.loc 1 2306 1 is_stmt 1 view -0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
2307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 974              		.loc 1 2308 3 view .LVU316
2309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return ADC converted value */
2314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return hadc->Instance->DR;
 975              		.loc 1 2314 3 view .LVU317
 976              		.loc 1 2314 14 is_stmt 0 view .LVU318
 977 0000 0368     		ldr	r3, [r0]
 978              		.loc 1 2314 24 view .LVU319
 979 0002 186C     		ldr	r0, [r3, #64]
 980              	.LVL62:
2315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 981              		.loc 1 2315 1 view .LVU320
 982 0004 7047     		bx	lr
 983              		.cfi_endproc
 984              	.LFE1116:
 986              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 987              		.align	1
 988              		.weak	HAL_ADC_ConvCpltCallback
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 993              	HAL_ADC_ConvCpltCallback:
 994              	.LVL63:
 995              	.LFB1118:
2316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
2328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_cfgr;
2331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif  /* !ADC_SUPPORT_2_5_MSPS */
2332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 186


2337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* End Of Sampling callback */
2348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear regular group conversion flag */
2355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* to disable interruption.                                               */
2372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
2376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (READ_BIT (hadc->Instance->CFGR1, ADC_CFGR1_CONT) != ADC_CFGR1_CONT)
2377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (READ_BIT (hadc->Instance->CFGR, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 187


2394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Set ADC state */
2395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
2399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
2401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else
2403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Change ADC state to error state */
2405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Conversion complete callback */
2415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       possibility to use:                                              */
2418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear regular group conversion flag */
2426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
2434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
2435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC state */
2444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Retrieve ADC configuration */
2448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 188


2451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM) == 0UL)
2473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
2478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Set ADC state */
2482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
2486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
2488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
2489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             else
2490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
2491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Update ADC state machine to error */
2492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
2497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Injected Conversion complete callback */
2503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               sequence.    */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 189


2508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear injected group conversion flag */
2515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
2523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Level out of window 1 callback */
2526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
2540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Level out of window 2 callback */
2543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
2557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Level out of window 3 callback */
2560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 190


2565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* overrun ")                                                             */
2577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* error.                                                                 */
2579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       overrun_error = 1UL;
2582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Check DMA configuration */
2586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         overrun_error = 1UL;
2589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (overrun_error == 1UL)
2593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Change ADC state to error state */
2595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to overrun */
2598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Error callback */
2601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear ADC overrun flag */
2613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
2617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
2618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 191


2622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Change ADC state to overrun state */
2623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Injected context queue overflow callback */
2632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 996              		.loc 1 2648 1 is_stmt 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
2649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
 1001              		.loc 1 2650 3 view .LVU322
2651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****    */
2655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1002              		.loc 1 2655 1 is_stmt 0 view .LVU323
 1003 0000 7047     		bx	lr
 1004              		.cfi_endproc
 1005              	.LFE1118:
 1007              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1008              		.align	1
 1009              		.weak	HAL_ADC_ConvHalfCpltCallback
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1014              	HAL_ADC_ConvHalfCpltCallback:
 1015              	.LVL64:
 1016              	.LFB1119:
2656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 192


2660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1017              		.loc 1 2663 1 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
2664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
 1022              		.loc 1 2665 3 view .LVU325
2666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1023              		.loc 1 2670 1 is_stmt 0 view .LVU326
 1024 0000 7047     		bx	lr
 1025              		.cfi_endproc
 1026              	.LFE1119:
 1028              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1029              		.align	1
 1030              		.global	ADC_DMAHalfConvCplt
 1031              		.syntax unified
 1032              		.thumb
 1033              		.thumb_func
 1035              	ADC_DMAHalfConvCplt:
 1036              	.LVL65:
 1037              	.LFB1130:
2671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
2676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
2681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 193


2698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(hadc);
2703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
2708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
2711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief    Peripheral Control functions
2715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
2716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
2717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
2718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****              ##### Peripheral Control functions #####
2719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
2720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]  This section provides functions allowing to:
2721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Configure channels on regular group
2722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Configure the analog watchdog
2723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
2725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
2726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
2729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         These internal paths can be disabled using function
2733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         HAL_ADC_DeInit().
2734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         without resetting the ADC.
2739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
2742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
2744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
2745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, const ADC_ChannelConfTypeDef *sCon
2746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
2747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
2748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 194


2755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(sConfig->SamplingTime));
2756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)          ||
2758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)   )
2759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(sConfig->Rank));
2761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
2766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel number                                                        */
2776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* ADC sequencer.                                                         */
2782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* channel.                                                               */
2787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(sConfig->Rank != ADC_RANK_NONE)
2788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Regular sequence configuration */
2790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)         ||
2796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
2797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, sConfig->Channel);
2801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
2803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
2810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel) << (sConfig->Rank & 0x1FUL));
2811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 195


2812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */        
2816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(((sConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
2822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
2825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_
2838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
2841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Wait loop initialization and execution */
2843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           while(wait_loop_index != 0UL)
2848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
2849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             wait_loop_index--;
2850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
2851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_P
2853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_AD
2857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
2861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* nothing to do */
2863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
2867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Regular sequencer configuration */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 196


2869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       another channel.                                               */
2872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)         ||
2874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
2875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, sConfig->Channel);
2879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
2881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* paths.                                                                 */
2884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
2888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VBAT)
2893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
2897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
2901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
2902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* nothing to do */
2903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
2904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
2906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* parameters.                                                              */
2911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
2914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
2916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
2920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
2922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 197


2926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
2928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* !ADC_SUPPORT_2_5_MSPS */
2931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
2933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      ignored (considered as reset) */
2942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification of channel number */
2945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
2950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
2953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
2956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel number                                                        */
2961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Channel rank                                                          */
2962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
2964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Channel offset                                                        */
2972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
2973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
2975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
2980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
2981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
2982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 198


2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC selected offset number */
2994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
2996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
2997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
2998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
2999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
3000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
3002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
3004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
3006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
3008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
3010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
3012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
3014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
3016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
3021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
3022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Single or differential mode                                           */
3023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
3024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
3027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
3028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of differential mode */
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
3031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
3033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
3036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
3037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 199


3040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
3041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* paths.                                                                 */
3042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using           */
3043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* HAL_ADC_DeInit().                                                      */
3044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
3046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configuration of common ADC parameters                                 */
3048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
3050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Software is allowed to change common parameters only when all ADCs   */
3052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* of the common group are disabled.                                    */
3053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0U
3054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* If the requested internal measurement path has already been enabled, */
3056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* bypass the configuration processing.                                 */
3057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_AD
3058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
3060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
3061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Delay for temperature sensor stabilization time */
3064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Wait loop initialization and execution */
3065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /* Note: Variable divided by 2 to compensate partially              */
3066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /*       CPU processing cycles, scaling in us split to not          */
3067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               /*       exceed 32 bits register capacity and handle low frequency. */
3068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (10
3069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
3070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
3071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                 wait_loop_index--;
3072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
3073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
3074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC
3076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
3078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
3079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
3081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_
3083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             if (ADC_VREFINT_INSTANCE(hadc))
3085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
3086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
3088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else
3090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             /* nothing to do */
3092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* If the requested internal measurement path has already been          */
3095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* enabled and other ADC of the common group are enabled, internal      */
3096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* measurement paths cannot be enabled.                                 */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 200


3097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           tmp_hal_status = HAL_ERROR;
3103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
3109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
3110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* parameters.                                                              */
3111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
3112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
3114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
3120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
3124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
3125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Configure the analog watchdog.
3129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
3130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
3131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
3132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
3133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         the ADC.
3134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
3135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
3136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
3137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
3138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         while ADC conversion is on going.
3139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
3141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status
3142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, const ADC_AnalogWDGConfTypeDef *
3144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
3147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
3148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
3149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* !ADC_SUPPORT_2_5_MSPS */
3152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 201


3154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
3156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
3157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
3158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
3160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if(AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
3161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
3168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verify thresholds range */
3171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verify if thresholds are within the selected ADC resolution */
3173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
3177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
3179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
3180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
3181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
3182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
3183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
3185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
3187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
3191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process locked */
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_LOCK(hadc);
3194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
3201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
3202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
3208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Analog watchdog configuration */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 202


3211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
3225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
3243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* are set to 0                                                         */
3261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
3262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 203


3268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
3282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Feature "ADC analog watchdog 2 and 3" not available on ADC peripheral of this STM32WB device
3288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
3296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* !ADC_SUPPORT_2_5_MSPS */
3299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           else
3306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
3313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* !ADC_SUPPORT_2_5_MSPS */
3316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
3317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 204


3325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
3326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
3330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       else
3359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 205


3382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else
3386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Update ADC state machine to error */
3388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Process unlocked */
3393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return function status */
3396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return tmp_hal_status;
3397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
3402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
3407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @verbatim
3408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
3409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****  ===============================================================================
3411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     [..]
3412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     peripheral.
3414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Check the ADC state
3415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (+) Check the ADC error code
3416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** @endverbatim
3418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
3419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Return the ADC handle state.
3423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         compared with states bits.
3425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         For example:
3426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** uint32_t HAL_ADC_GetState(const ADC_HandleTypeDef *hadc)
3432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return ADC handle state */
3437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return hadc->State;
3438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 206


3439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Return the ADC error code.
3442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** uint32_t HAL_ADC_GetError(const ADC_HandleTypeDef *hadc)
3446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return hadc->ErrorCode;
3451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
3455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @}
3459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @{
3463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Stop ADC conversion.
3467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *          This parameter can be one of the following values:
3470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP               ADC regular conversion type.
3471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP         (1)  ADC injected conversion type.
3472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP (1)  ADC regular and injected conversion type.
3473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *
3474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
3476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   UNUSED(ConversionGroup);
3481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
3482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
3484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   
3487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
3488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* this function if not needed.                                             */
3489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
3492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Stop ADC group regular conversion */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 207


3496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
3497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Get tick count */
3501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tickstart = HAL_GetTick();
3502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
3504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Update ADC state machine to error */
3508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
3510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
3513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         return HAL_ERROR;
3514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
3527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
3537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* auto-delay mode.                                                       */
3540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* (see reference manual).                                                */
3544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
3548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Use stop of regular group */
3550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 208


3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Clear JEOS */
3569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Stop ADC group regular conversion */
3581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Stop ADC group injected conversion */
3595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     switch (conversion_group_reassigned)
3602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
3606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
3609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 209


3610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       default:
3611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
3613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tickstart = HAL_GetTick();
3617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return HAL status */
3640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Enable the selected ADC.
3647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
3651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
3656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
3666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 210


3667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
3671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       return HAL_ERROR;
3677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Enable the ADC peripheral */
3680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INTE
3683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
3685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Wait loop initialization and execution */
3686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
3687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
3688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
3689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL) * ((SystemCoreClock / (100
3690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
3691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         wait_loop_index--;
3693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
3697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
3698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
3699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
3700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /*ADC_SUPPORT_2_5_MSPS */
3701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Wait for ADC effectively enabled */
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tickstart = HAL_GetTick();
3704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit 
3708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the 
3709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             calibration logic.
3710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
3711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             4 ADC clock cycle duration */
3713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
3714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
3715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if(LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
3718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         
3720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 211


3724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return HAL status */
3735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
3736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  Disable the selected ADC.
3740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   *         stopped.
3742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hadc ADC handle
3743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval HAL status.
3744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
3748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /*       disabled.                                                          */
3753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
3756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Disable the ADC peripheral */
3765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Update ADC state machine to error */
3771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       return HAL_ERROR;
3777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Get tick count */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 212


3781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tickstart = HAL_GetTick();
3782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Update ADC state machine to error */
3791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           return HAL_ERROR;
3797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Return HAL status */
3803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   return HAL_OK;
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
3810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
3813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Set ADC state */
3820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* to disable interruption.                                               */
3825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if(   (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
3829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       )
3830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
3832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
3833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
3835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
3836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
3837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 213


3838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
3839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
3840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
3841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
3842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
3843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC state */
3845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
3846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
3847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                             HAL_ADC_STATE_READY);
3848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         else
3850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Change ADC state to error state */
3852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
3854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     
3860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Are conversions software-triggered ? */
3864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* Is CONT bit set ? */
3867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
3873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
3875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
3884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
3888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
3890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
3891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
3893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     /* Conversion complete callback */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 214


3895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     else
3913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
3914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       /* Call ADC DMA error callback */
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
3917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
3918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
3919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
3924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1038              		.loc 1 3926 1 is_stmt 1 view -0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              		.loc 1 3926 1 is_stmt 0 view .LVU328
 1043 0000 08B5     		push	{r3, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 3, -8
 1046              		.cfi_offset 14, -4
3927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1047              		.loc 1 3928 3 is_stmt 1 view .LVU329
 1048              	.LVL66:
3929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Half conversion callback */
3931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1049              		.loc 1 3934 3 view .LVU330
 1050 0002 806A     		ldr	r0, [r0, #40]
 1051              	.LVL67:
 1052              		.loc 1 3934 3 is_stmt 0 view .LVU331
 1053 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1054              	.LVL68:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 215


3935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1055              		.loc 1 3936 1 view .LVU332
 1056 0008 08BD     		pop	{r3, pc}
 1057              		.cfi_endproc
 1058              	.LFE1130:
 1060              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1061              		.align	1
 1062              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1063              		.syntax unified
 1064              		.thumb
 1065              		.thumb_func
 1067              	HAL_ADC_LevelOutOfWindowCallback:
 1068              	.LVL69:
 1069              	.LFB1120:
2678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1070              		.loc 1 2678 1 is_stmt 1 view -0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
2680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1075              		.loc 1 2680 3 view .LVU334
2685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1076              		.loc 1 2685 1 is_stmt 0 view .LVU335
 1077 0000 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE1120:
 1081              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1082              		.align	1
 1083              		.weak	HAL_ADC_ErrorCallback
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1088              	HAL_ADC_ErrorCallback:
 1089              	.LVL70:
 1090              	.LFB1121:
2700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1091              		.loc 1 2700 1 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
2702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1096              		.loc 1 2702 3 view .LVU337
2707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1097              		.loc 1 2707 1 is_stmt 0 view .LVU338
 1098 0000 7047     		bx	lr
 1099              		.cfi_endproc
 1100              	.LFE1121:
 1102              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1103              		.align	1
 1104              		.global	HAL_ADC_IRQHandler
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1109              	HAL_ADC_IRQHandler:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 216


 1110              	.LVL71:
 1111              	.LFB1117:
2323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1112              		.loc 1 2323 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
2323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1116              		.loc 1 2323 1 is_stmt 0 view .LVU340
 1117 0000 70B5     		push	{r4, r5, r6, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 4, -16
 1120              		.cfi_offset 5, -12
 1121              		.cfi_offset 6, -8
 1122              		.cfi_offset 14, -4
 1123 0002 0446     		mov	r4, r0
2324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1124              		.loc 1 2324 3 is_stmt 1 view .LVU341
 1125              	.LVL72:
2325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1126              		.loc 1 2325 3 view .LVU342
2325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1127              		.loc 1 2325 26 is_stmt 0 view .LVU343
 1128 0004 0368     		ldr	r3, [r0]
2325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1129              		.loc 1 2325 12 view .LVU344
 1130 0006 1E68     		ldr	r6, [r3]
 1131              	.LVL73:
2326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 1132              		.loc 1 2326 3 is_stmt 1 view .LVU345
2326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 1133              		.loc 1 2326 12 is_stmt 0 view .LVU346
 1134 0008 5D68     		ldr	r5, [r3, #4]
 1135              	.LVL74:
2328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1136              		.loc 1 2328 3 is_stmt 1 view .LVU347
2329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_cfgr;
 1137              		.loc 1 2329 3 view .LVU348
2330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif  /* !ADC_SUPPORT_2_5_MSPS */
 1138              		.loc 1 2330 3 view .LVU349
2334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1139              		.loc 1 2334 3 view .LVU350
2335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1140              		.loc 1 2335 3 view .LVU351
2338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1141              		.loc 1 2338 3 view .LVU352
2338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1142              		.loc 1 2338 6 is_stmt 0 view .LVU353
 1143 000a 16F0020F 		tst	r6, #2
 1144 000e 10D0     		beq	.L70
2338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1145              		.loc 1 2338 54 discriminator 1 view .LVU354
 1146 0010 15F0020F 		tst	r5, #2
 1147 0014 0DD0     		beq	.L70
2341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1148              		.loc 1 2341 5 is_stmt 1 view .LVU355
2341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 217


 1149              		.loc 1 2341 14 is_stmt 0 view .LVU356
 1150 0016 436D     		ldr	r3, [r0, #84]
2341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1151              		.loc 1 2341 8 view .LVU357
 1152 0018 13F0100F 		tst	r3, #16
 1153 001c 03D1     		bne	.L71
2344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1154              		.loc 1 2344 7 is_stmt 1 view .LVU358
 1155 001e 436D     		ldr	r3, [r0, #84]
 1156 0020 43F40063 		orr	r3, r3, #2048
 1157 0024 4365     		str	r3, [r0, #84]
 1158              	.L71:
2351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1159              		.loc 1 2351 5 view .LVU359
 1160 0026 2046     		mov	r0, r4
 1161              	.LVL75:
2351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1162              		.loc 1 2351 5 is_stmt 0 view .LVU360
 1163 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1164              	.LVL76:
2355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1165              		.loc 1 2355 5 is_stmt 1 view .LVU361
 1166 002c 2368     		ldr	r3, [r4]
 1167 002e 0222     		movs	r2, #2
 1168 0030 1A60     		str	r2, [r3]
 1169              	.L70:
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1170              		.loc 1 2359 3 view .LVU362
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1171              		.loc 1 2359 6 is_stmt 0 view .LVU363
 1172 0032 16F0040F 		tst	r6, #4
 1173 0036 02D0     		beq	.L72
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1174              		.loc 1 2359 51 discriminator 1 view .LVU364
 1175 0038 15F0040F 		tst	r5, #4
 1176 003c 05D1     		bne	.L73
 1177              	.L72:
2359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1178              		.loc 1 2359 94 discriminator 3 view .LVU365
 1179 003e 16F0080F 		tst	r6, #8
 1180 0042 3AD0     		beq	.L74
2360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1181              		.loc 1 2360 51 view .LVU366
 1182 0044 15F0080F 		tst	r5, #8
 1183 0048 37D0     		beq	.L74
 1184              	.L73:
2363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1185              		.loc 1 2363 5 is_stmt 1 view .LVU367
2363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1186              		.loc 1 2363 14 is_stmt 0 view .LVU368
 1187 004a 636D     		ldr	r3, [r4, #84]
2363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1188              		.loc 1 2363 8 view .LVU369
 1189 004c 13F0100F 		tst	r3, #16
 1190 0050 03D1     		bne	.L75
2366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1191              		.loc 1 2366 7 is_stmt 1 view .LVU370
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 218


 1192 0052 636D     		ldr	r3, [r4, #84]
 1193 0054 43F40073 		orr	r3, r3, #512
 1194 0058 6365     		str	r3, [r4, #84]
 1195              	.L75:
2372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1196              		.loc 1 2372 5 view .LVU371
2372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1197              		.loc 1 2372 47 is_stmt 0 view .LVU372
 1198 005a 2368     		ldr	r3, [r4]
 1199              	.LVL77:
 1200              	.LBB340:
 1201              	.LBI340:
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1202              		.loc 2 3487 26 is_stmt 1 view .LVU373
 1203              	.LBB341:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1204              		.loc 2 3492 3 view .LVU374
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1205              		.loc 2 3492 12 is_stmt 0 view .LVU375
 1206 005c DA68     		ldr	r2, [r3, #12]
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1207              		.loc 2 3492 103 view .LVU376
 1208 005e 12F4406F 		tst	r2, #3072
 1209 0062 24D1     		bne	.L76
 1210              	.LVL78:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1211              		.loc 2 3492 103 view .LVU377
 1212              	.LBE341:
 1213              	.LBE340:
2378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1214              		.loc 1 2378 7 is_stmt 1 view .LVU378
2378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1215              		.loc 1 2378 11 is_stmt 0 view .LVU379
 1216 0064 DA68     		ldr	r2, [r3, #12]
2378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1217              		.loc 1 2378 10 view .LVU380
 1218 0066 12F4005F 		tst	r2, #8192
 1219 006a 20D1     		bne	.L76
2382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1220              		.loc 1 2382 9 is_stmt 1 view .LVU381
2382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1221              		.loc 1 2382 13 is_stmt 0 view .LVU382
 1222 006c 1A68     		ldr	r2, [r3]
2382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1223              		.loc 1 2382 12 view .LVU383
 1224 006e 12F0080F 		tst	r2, #8
 1225 0072 1CD0     		beq	.L76
2386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1226              		.loc 1 2386 11 is_stmt 1 view .LVU384
 1227              	.LVL79:
 1228              	.LBB342:
 1229              	.LBI342:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1230              		.loc 2 6863 26 view .LVU385
 1231              	.LBB343:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1232              		.loc 2 6865 3 view .LVU386
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 219


6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1233              		.loc 2 6865 12 is_stmt 0 view .LVU387
 1234 0074 9A68     		ldr	r2, [r3, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1235              		.loc 2 6865 74 view .LVU388
 1236 0076 12F0040F 		tst	r2, #4
 1237 007a 10D1     		bne	.L77
 1238              	.LVL80:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1239              		.loc 2 6865 74 view .LVU389
 1240              	.LBE343:
 1241              	.LBE342:
2392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1242              		.loc 1 2392 13 is_stmt 1 view .LVU390
 1243 007c 5A68     		ldr	r2, [r3, #4]
 1244 007e 22F00C02 		bic	r2, r2, #12
 1245 0082 5A60     		str	r2, [r3, #4]
2395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1246              		.loc 1 2395 13 view .LVU391
 1247 0084 636D     		ldr	r3, [r4, #84]
 1248 0086 23F48073 		bic	r3, r3, #256
 1249 008a 6365     		str	r3, [r4, #84]
2397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1250              		.loc 1 2397 13 view .LVU392
2397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1251              		.loc 1 2397 22 is_stmt 0 view .LVU393
 1252 008c 636D     		ldr	r3, [r4, #84]
2397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1253              		.loc 1 2397 16 view .LVU394
 1254 008e 13F4805F 		tst	r3, #4096
 1255 0092 0CD1     		bne	.L76
2399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 1256              		.loc 1 2399 15 is_stmt 1 view .LVU395
 1257 0094 636D     		ldr	r3, [r4, #84]
 1258 0096 43F00103 		orr	r3, r3, #1
 1259 009a 6365     		str	r3, [r4, #84]
 1260 009c 07E0     		b	.L76
 1261              	.LVL81:
 1262              	.L77:
2405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1263              		.loc 1 2405 13 view .LVU396
 1264 009e 636D     		ldr	r3, [r4, #84]
 1265 00a0 43F01003 		orr	r3, r3, #16
 1266 00a4 6365     		str	r3, [r4, #84]
2408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 1267              		.loc 1 2408 13 view .LVU397
 1268 00a6 A36D     		ldr	r3, [r4, #88]
 1269 00a8 43F00103 		orr	r3, r3, #1
 1270 00ac A365     		str	r3, [r4, #88]
 1271              	.L76:
2422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1272              		.loc 1 2422 5 view .LVU398
 1273 00ae 2046     		mov	r0, r4
 1274 00b0 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1275              	.LVL82:
2430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1276              		.loc 1 2430 5 view .LVU399
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 220


 1277 00b4 2368     		ldr	r3, [r4]
 1278 00b6 0C22     		movs	r2, #12
 1279 00b8 1A60     		str	r2, [r3]
 1280              	.L74:
2437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1281              		.loc 1 2437 3 view .LVU400
2437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1282              		.loc 1 2437 6 is_stmt 0 view .LVU401
 1283 00ba 16F0200F 		tst	r6, #32
 1284 00be 02D0     		beq	.L79
2437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1285              		.loc 1 2437 53 discriminator 1 view .LVU402
 1286 00c0 15F0200F 		tst	r5, #32
 1287 00c4 05D1     		bne	.L80
 1288              	.L79:
2437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1289              		.loc 1 2437 98 discriminator 3 view .LVU403
 1290 00c6 16F0400F 		tst	r6, #64
 1291 00ca 4DD0     		beq	.L81
2438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1292              		.loc 1 2438 53 view .LVU404
 1293 00cc 15F0400F 		tst	r5, #64
 1294 00d0 4AD0     		beq	.L81
 1295              	.L80:
2441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1296              		.loc 1 2441 5 is_stmt 1 view .LVU405
2441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1297              		.loc 1 2441 14 is_stmt 0 view .LVU406
 1298 00d2 636D     		ldr	r3, [r4, #84]
2441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1299              		.loc 1 2441 8 view .LVU407
 1300 00d4 13F0100F 		tst	r3, #16
 1301 00d8 03D1     		bne	.L82
2444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1302              		.loc 1 2444 7 is_stmt 1 view .LVU408
 1303 00da 636D     		ldr	r3, [r4, #84]
 1304 00dc 43F40053 		orr	r3, r3, #8192
 1305 00e0 6365     		str	r3, [r4, #84]
 1306              	.L82:
2448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1307              		.loc 1 2448 5 view .LVU409
2448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1308              		.loc 1 2448 84 is_stmt 0 view .LVU410
 1309 00e2 2368     		ldr	r3, [r4]
 1310              	.LVL83:
 1311              	.LBB344:
 1312              	.LBI344:
4718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1313              		.loc 2 4718 26 is_stmt 1 view .LVU411
 1314              	.LBB345:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1315              		.loc 2 4720 3 view .LVU412
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1316              		.loc 2 4720 12 is_stmt 0 view .LVU413
 1317 00e4 DA6C     		ldr	r2, [r3, #76]
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1318              		.loc 2 4720 105 view .LVU414
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 221


 1319 00e6 12F0C00F 		tst	r2, #192
 1320 00ea 2BD1     		bne	.L96
 1321 00ec 0121     		movs	r1, #1
 1322              	.L83:
 1323              	.LVL84:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1324              		.loc 2 4720 105 view .LVU415
 1325              	.LBE345:
 1326              	.LBE344:
2449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 1327              		.loc 1 2449 5 is_stmt 1 view .LVU416
 1328              	.LBB347:
 1329              	.LBI347:
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1330              		.loc 2 3487 26 view .LVU417
 1331              	.LBB348:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1332              		.loc 2 3492 3 view .LVU418
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1333              		.loc 2 3492 12 is_stmt 0 view .LVU419
 1334 00ee DA68     		ldr	r2, [r3, #12]
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1335              		.loc 2 3492 103 view .LVU420
 1336 00f0 12F4406F 		tst	r2, #3072
 1337 00f4 28D1     		bne	.L97
 1338 00f6 0120     		movs	r0, #1
 1339              	.L84:
 1340              	.LVL85:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1341              		.loc 2 3492 103 view .LVU421
 1342              	.LBE348:
 1343              	.LBE347:
2450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1344              		.loc 1 2450 5 is_stmt 1 view .LVU422
2450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1345              		.loc 1 2450 14 is_stmt 0 view .LVU423
 1346 00f8 DA68     		ldr	r2, [r3, #12]
 1347              	.LVL86:
2457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1348              		.loc 1 2457 5 is_stmt 1 view .LVU424
2457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1349              		.loc 1 2457 8 is_stmt 0 view .LVU425
 1350 00fa 79B3     		cbz	r1, .L85
2459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1351              		.loc 1 2459 7 is_stmt 1 view .LVU426
2459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1352              		.loc 1 2459 10 is_stmt 0 view .LVU427
 1353 00fc 12F0007F 		tst	r2, #33554432
 1354 0100 03D0     		beq	.L86
2459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1355              		.loc 1 2459 55 discriminator 1 view .LVU428
 1356 0102 58B3     		cbz	r0, .L85
2460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1357              		.loc 1 2460 60 view .LVU429
 1358 0104 12F4005F 		tst	r2, #8192
 1359 0108 28D1     		bne	.L85
 1360              	.L86:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 222


2464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1361              		.loc 1 2464 9 is_stmt 1 view .LVU430
2464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1362              		.loc 1 2464 13 is_stmt 0 view .LVU431
 1363 010a 1A68     		ldr	r2, [r3]
 1364              	.LVL87:
2464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1365              		.loc 1 2464 12 view .LVU432
 1366 010c 12F0400F 		tst	r2, #64
 1367 0110 24D0     		beq	.L85
2472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1368              		.loc 1 2472 11 is_stmt 1 view .LVU433
2472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1369              		.loc 1 2472 15 is_stmt 0 view .LVU434
 1370 0112 DA68     		ldr	r2, [r3, #12]
2472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1371              		.loc 1 2472 14 view .LVU435
 1372 0114 12F4001F 		tst	r2, #2097152
 1373 0118 20D1     		bne	.L85
2476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 1374              		.loc 1 2476 13 is_stmt 1 view .LVU436
 1375              	.LVL88:
 1376              	.LBB350:
 1377              	.LBI350:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1378              		.loc 2 7018 26 view .LVU437
 1379              	.LBB351:
 1380              		.loc 2 7020 3 view .LVU438
 1381              		.loc 2 7020 12 is_stmt 0 view .LVU439
 1382 011a 9A68     		ldr	r2, [r3, #8]
 1383              		.loc 2 7020 76 view .LVU440
 1384 011c 12F0080F 		tst	r2, #8
 1385 0120 14D1     		bne	.L87
 1386              	.LVL89:
 1387              		.loc 2 7020 76 view .LVU441
 1388              	.LBE351:
 1389              	.LBE350:
2479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1390              		.loc 1 2479 15 is_stmt 1 view .LVU442
 1391 0122 5A68     		ldr	r2, [r3, #4]
 1392 0124 22F06002 		bic	r2, r2, #96
 1393 0128 5A60     		str	r2, [r3, #4]
2482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1394              		.loc 1 2482 15 view .LVU443
 1395 012a 636D     		ldr	r3, [r4, #84]
 1396 012c 23F48053 		bic	r3, r3, #4096
 1397 0130 6365     		str	r3, [r4, #84]
2484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 1398              		.loc 1 2484 15 view .LVU444
2484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 1399              		.loc 1 2484 24 is_stmt 0 view .LVU445
 1400 0132 636D     		ldr	r3, [r4, #84]
2484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 1401              		.loc 1 2484 18 view .LVU446
 1402 0134 13F4807F 		tst	r3, #256
 1403 0138 10D1     		bne	.L85
2486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 223


 1404              		.loc 1 2486 17 is_stmt 1 view .LVU447
 1405 013a 636D     		ldr	r3, [r4, #84]
 1406 013c 43F00103 		orr	r3, r3, #1
 1407 0140 6365     		str	r3, [r4, #84]
 1408 0142 0BE0     		b	.L85
 1409              	.LVL90:
 1410              	.L96:
 1411              	.LBB352:
 1412              	.LBB346:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1413              		.loc 2 4720 105 is_stmt 0 view .LVU448
 1414 0144 0021     		movs	r1, #0
 1415 0146 D2E7     		b	.L83
 1416              	.LVL91:
 1417              	.L97:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1418              		.loc 2 4720 105 view .LVU449
 1419              	.LBE346:
 1420              	.LBE352:
 1421              	.LBB353:
 1422              	.LBB349:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1423              		.loc 2 3492 103 view .LVU450
 1424 0148 0020     		movs	r0, #0
 1425 014a D5E7     		b	.L84
 1426              	.LVL92:
 1427              	.L87:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1428              		.loc 2 3492 103 view .LVU451
 1429              	.LBE349:
 1430              	.LBE353:
2492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1431              		.loc 1 2492 15 is_stmt 1 view .LVU452
 1432 014c 636D     		ldr	r3, [r4, #84]
 1433 014e 43F01003 		orr	r3, r3, #16
 1434 0152 6365     		str	r3, [r4, #84]
2495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 1435              		.loc 1 2495 15 view .LVU453
 1436 0154 A36D     		ldr	r3, [r4, #88]
 1437 0156 43F00103 		orr	r3, r3, #1
 1438 015a A365     		str	r3, [r4, #88]
 1439              	.L85:
2511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1440              		.loc 1 2511 5 view .LVU454
 1441 015c 2046     		mov	r0, r4
 1442              	.LVL93:
2511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1443              		.loc 1 2511 5 is_stmt 0 view .LVU455
 1444 015e FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1445              	.LVL94:
2515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1446              		.loc 1 2515 5 is_stmt 1 view .LVU456
 1447 0162 2368     		ldr	r3, [r4]
 1448 0164 6022     		movs	r2, #96
 1449 0166 1A60     		str	r2, [r3]
 1450              	.L81:
2520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 224


 1451              		.loc 1 2520 3 view .LVU457
2520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1452              		.loc 1 2520 6 is_stmt 0 view .LVU458
 1453 0168 16F0800F 		tst	r6, #128
 1454 016c 02D0     		beq	.L89
2520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1455              		.loc 1 2520 52 discriminator 1 view .LVU459
 1456 016e 15F0800F 		tst	r5, #128
 1457 0172 2DD1     		bne	.L99
 1458              	.L89:
2537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1459              		.loc 1 2537 3 is_stmt 1 view .LVU460
2537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1460              		.loc 1 2537 6 is_stmt 0 view .LVU461
 1461 0174 16F4807F 		tst	r6, #256
 1462 0178 02D0     		beq	.L90
2537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1463              		.loc 1 2537 52 discriminator 1 view .LVU462
 1464 017a 15F4807F 		tst	r5, #256
 1465 017e 32D1     		bne	.L100
 1466              	.L90:
2554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1467              		.loc 1 2554 3 is_stmt 1 view .LVU463
2554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1468              		.loc 1 2554 6 is_stmt 0 view .LVU464
 1469 0180 16F4007F 		tst	r6, #512
 1470 0184 02D0     		beq	.L91
2554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1471              		.loc 1 2554 52 discriminator 1 view .LVU465
 1472 0186 15F4007F 		tst	r5, #512
 1473 018a 38D1     		bne	.L101
 1474              	.L91:
2571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1475              		.loc 1 2571 3 is_stmt 1 view .LVU466
2571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1476              		.loc 1 2571 6 is_stmt 0 view .LVU467
 1477 018c 16F0100F 		tst	r6, #16
 1478 0190 17D0     		beq	.L92
2571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1479              		.loc 1 2571 50 discriminator 1 view .LVU468
 1480 0192 15F0100F 		tst	r5, #16
 1481 0196 14D0     		beq	.L92
2579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1482              		.loc 1 2579 5 is_stmt 1 view .LVU469
2579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1483              		.loc 1 2579 19 is_stmt 0 view .LVU470
 1484 0198 636B     		ldr	r3, [r4, #52]
2579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1485              		.loc 1 2579 8 view .LVU471
 1486 019a 23B1     		cbz	r3, .L93
2586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1487              		.loc 1 2586 7 is_stmt 1 view .LVU472
2586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1488              		.loc 1 2586 41 is_stmt 0 view .LVU473
 1489 019c 2368     		ldr	r3, [r4]
 1490              	.LVL95:
 1491              	.LBB354:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 225


 1492              	.LBI354:
4565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1493              		.loc 2 4565 26 is_stmt 1 view .LVU474
 1494              	.LBB355:
4570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1495              		.loc 2 4570 3 view .LVU475
4570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1496              		.loc 2 4570 21 is_stmt 0 view .LVU476
 1497 019e DB68     		ldr	r3, [r3, #12]
 1498              	.LVL96:
4570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1499              		.loc 2 4570 21 view .LVU477
 1500              	.LBE355:
 1501              	.LBE354:
2586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1502              		.loc 1 2586 10 view .LVU478
 1503 01a0 13F0030F 		tst	r3, #3
 1504 01a4 0AD0     		beq	.L94
 1505              	.L93:
 1506              	.LVL97:
2595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1507              		.loc 1 2595 7 is_stmt 1 view .LVU479
 1508 01a6 636D     		ldr	r3, [r4, #84]
 1509 01a8 43F48063 		orr	r3, r3, #1024
 1510 01ac 6365     		str	r3, [r4, #84]
2598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1511              		.loc 1 2598 7 view .LVU480
 1512 01ae A36D     		ldr	r3, [r4, #88]
 1513 01b0 43F00203 		orr	r3, r3, #2
 1514 01b4 A365     		str	r3, [r4, #88]
2608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1515              		.loc 1 2608 7 view .LVU481
 1516 01b6 2046     		mov	r0, r4
 1517 01b8 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1518              	.LVL98:
 1519              	.L94:
2613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1520              		.loc 1 2613 5 view .LVU482
 1521 01bc 2368     		ldr	r3, [r4]
 1522 01be 1022     		movs	r2, #16
 1523 01c0 1A60     		str	r2, [r3]
 1524              	.L92:
2620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1525              		.loc 1 2620 3 view .LVU483
2620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1526              		.loc 1 2620 6 is_stmt 0 view .LVU484
 1527 01c2 16F4806F 		tst	r6, #1024
 1528 01c6 02D0     		beq	.L69
2620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1529              		.loc 1 2620 54 discriminator 1 view .LVU485
 1530 01c8 15F4806F 		tst	r5, #1024
 1531 01cc 23D1     		bne	.L102
 1532              	.L69:
2640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1533              		.loc 1 2640 1 view .LVU486
 1534 01ce 70BD     		pop	{r4, r5, r6, pc}
 1535              	.LVL99:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 226


 1536              	.L99:
2523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1537              		.loc 1 2523 5 is_stmt 1 view .LVU487
 1538 01d0 636D     		ldr	r3, [r4, #84]
 1539 01d2 43F48033 		orr	r3, r3, #65536
 1540 01d6 6365     		str	r3, [r4, #84]
2529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1541              		.loc 1 2529 5 view .LVU488
 1542 01d8 2046     		mov	r0, r4
 1543 01da FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1544              	.LVL100:
2533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1545              		.loc 1 2533 5 view .LVU489
 1546 01de 2368     		ldr	r3, [r4]
 1547 01e0 8022     		movs	r2, #128
 1548 01e2 1A60     		str	r2, [r3]
 1549 01e4 C6E7     		b	.L89
 1550              	.L100:
2540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1551              		.loc 1 2540 5 view .LVU490
 1552 01e6 636D     		ldr	r3, [r4, #84]
 1553 01e8 43F40033 		orr	r3, r3, #131072
 1554 01ec 6365     		str	r3, [r4, #84]
2546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1555              		.loc 1 2546 5 view .LVU491
 1556 01ee 2046     		mov	r0, r4
 1557 01f0 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1558              	.LVL101:
2550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1559              		.loc 1 2550 5 view .LVU492
 1560 01f4 2368     		ldr	r3, [r4]
 1561 01f6 4FF48072 		mov	r2, #256
 1562 01fa 1A60     		str	r2, [r3]
 1563 01fc C0E7     		b	.L90
 1564              	.L101:
2557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1565              		.loc 1 2557 5 view .LVU493
 1566 01fe 636D     		ldr	r3, [r4, #84]
 1567 0200 43F48023 		orr	r3, r3, #262144
 1568 0204 6365     		str	r3, [r4, #84]
2563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1569              		.loc 1 2563 5 view .LVU494
 1570 0206 2046     		mov	r0, r4
 1571 0208 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1572              	.LVL102:
2567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1573              		.loc 1 2567 5 view .LVU495
 1574 020c 2368     		ldr	r3, [r4]
 1575 020e 4FF40072 		mov	r2, #512
 1576 0212 1A60     		str	r2, [r3]
 1577 0214 BAE7     		b	.L91
 1578              	.LVL103:
 1579              	.L102:
2623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1580              		.loc 1 2623 5 view .LVU496
 1581 0216 636D     		ldr	r3, [r4, #84]
 1582 0218 43F48043 		orr	r3, r3, #16384
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 227


 1583 021c 6365     		str	r3, [r4, #84]
2626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1584              		.loc 1 2626 5 view .LVU497
 1585 021e A36D     		ldr	r3, [r4, #88]
 1586 0220 43F00803 		orr	r3, r3, #8
 1587 0224 A365     		str	r3, [r4, #88]
2629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1588              		.loc 1 2629 5 view .LVU498
 1589 0226 2368     		ldr	r3, [r4]
 1590 0228 4FF48062 		mov	r2, #1024
 1591 022c 1A60     		str	r2, [r3]
2635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1592              		.loc 1 2635 5 view .LVU499
 1593 022e 2046     		mov	r0, r4
 1594 0230 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1595              	.LVL104:
2640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1596              		.loc 1 2640 1 is_stmt 0 view .LVU500
 1597 0234 CBE7     		b	.L69
 1598              		.cfi_endproc
 1599              	.LFE1117:
 1601              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1602              		.align	1
 1603              		.global	ADC_DMAConvCplt
 1604              		.syntax unified
 1605              		.thumb
 1606              		.thumb_func
 1608              	ADC_DMAConvCplt:
 1609              	.LVL105:
 1610              	.LFB1129:
3812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1611              		.loc 1 3812 1 is_stmt 1 view -0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
3812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1615              		.loc 1 3812 1 is_stmt 0 view .LVU502
 1616 0000 08B5     		push	{r3, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 3, -8
 1619              		.cfi_offset 14, -4
 1620 0002 0346     		mov	r3, r0
3814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1621              		.loc 1 3814 3 is_stmt 1 view .LVU503
3814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1622              		.loc 1 3814 22 is_stmt 0 view .LVU504
 1623 0004 806A     		ldr	r0, [r0, #40]
 1624              	.LVL106:
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1625              		.loc 1 3817 3 is_stmt 1 view .LVU505
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1626              		.loc 1 3817 12 is_stmt 0 view .LVU506
 1627 0006 426D     		ldr	r2, [r0, #84]
3817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1628              		.loc 1 3817 6 view .LVU507
 1629 0008 12F0500F 		tst	r2, #80
 1630 000c 30D1     		bne	.L104
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 228


3820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1631              		.loc 1 3820 5 is_stmt 1 view .LVU508
 1632 000e 436D     		ldr	r3, [r0, #84]
 1633              	.LVL107:
3820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1634              		.loc 1 3820 5 is_stmt 0 view .LVU509
 1635 0010 43F40073 		orr	r3, r3, #512
 1636 0014 4365     		str	r3, [r0, #84]
3861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1637              		.loc 1 3861 5 is_stmt 1 view .LVU510
3861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1638              		.loc 1 3861 14 is_stmt 0 view .LVU511
 1639 0016 0368     		ldr	r3, [r0]
3861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1640              		.loc 1 3861 24 view .LVU512
 1641 0018 1A68     		ldr	r2, [r3]
3861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1642              		.loc 1 3861 8 view .LVU513
 1643 001a 12F0080F 		tst	r2, #8
 1644 001e 14D0     		beq	.L105
3864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1645              		.loc 1 3864 7 is_stmt 1 view .LVU514
 1646              	.LVL108:
 1647              	.LBB356:
 1648              	.LBI356:
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1649              		.loc 2 3487 26 view .LVU515
 1650              	.LBB357:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1651              		.loc 2 3492 3 view .LVU516
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1652              		.loc 2 3492 12 is_stmt 0 view .LVU517
 1653 0020 DA68     		ldr	r2, [r3, #12]
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1654              		.loc 2 3492 103 view .LVU518
 1655 0022 12F4406F 		tst	r2, #3072
 1656 0026 20D1     		bne	.L106
 1657              	.LVL109:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1658              		.loc 2 3492 103 view .LVU519
 1659              	.LBE357:
 1660              	.LBE356:
3867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1661              		.loc 1 3867 9 is_stmt 1 view .LVU520
3867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1662              		.loc 1 3867 13 is_stmt 0 view .LVU521
 1663 0028 DB68     		ldr	r3, [r3, #12]
3867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1664              		.loc 1 3867 12 view .LVU522
 1665 002a 13F4005F 		tst	r3, #8192
 1666 002e 1CD1     		bne	.L106
3870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1667              		.loc 1 3870 11 is_stmt 1 view .LVU523
 1668 0030 436D     		ldr	r3, [r0, #84]
 1669 0032 23F48073 		bic	r3, r3, #256
 1670 0036 4365     		str	r3, [r0, #84]
3871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 229


 1671              		.loc 1 3871 11 view .LVU524
3871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1672              		.loc 1 3871 20 is_stmt 0 view .LVU525
 1673 0038 436D     		ldr	r3, [r0, #84]
3871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 1674              		.loc 1 3871 14 view .LVU526
 1675 003a 13F4805F 		tst	r3, #4096
 1676 003e 14D1     		bne	.L106
3873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 1677              		.loc 1 3873 13 is_stmt 1 view .LVU527
 1678 0040 436D     		ldr	r3, [r0, #84]
 1679 0042 43F00103 		orr	r3, r3, #1
 1680 0046 4365     		str	r3, [r0, #84]
 1681 0048 0FE0     		b	.L106
 1682              	.L105:
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1683              		.loc 1 3882 7 view .LVU528
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1684              		.loc 1 3882 11 is_stmt 0 view .LVU529
 1685 004a DB68     		ldr	r3, [r3, #12]
3882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 1686              		.loc 1 3882 10 view .LVU530
 1687 004c 13F0020F 		tst	r3, #2
 1688 0050 0BD1     		bne	.L106
3885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1689              		.loc 1 3885 9 is_stmt 1 view .LVU531
 1690 0052 436D     		ldr	r3, [r0, #84]
 1691 0054 23F48073 		bic	r3, r3, #256
 1692 0058 4365     		str	r3, [r0, #84]
3886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1693              		.loc 1 3886 9 view .LVU532
3886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1694              		.loc 1 3886 18 is_stmt 0 view .LVU533
 1695 005a 436D     		ldr	r3, [r0, #84]
3886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 1696              		.loc 1 3886 12 view .LVU534
 1697 005c 13F4805F 		tst	r3, #4096
 1698 0060 03D1     		bne	.L106
3888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 1699              		.loc 1 3888 11 is_stmt 1 view .LVU535
 1700 0062 436D     		ldr	r3, [r0, #84]
 1701 0064 43F00103 		orr	r3, r3, #1
 1702 0068 4365     		str	r3, [r0, #84]
 1703              	.L106:
3898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1704              		.loc 1 3898 5 view .LVU536
 1705 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1706              	.LVL110:
 1707              	.L103:
3918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1708              		.loc 1 3918 1 is_stmt 0 view .LVU537
 1709 006e 08BD     		pop	{r3, pc}
 1710              	.LVL111:
 1711              	.L104:
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1712              		.loc 1 3903 5 is_stmt 1 view .LVU538
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 230


 1713              		.loc 1 3903 14 is_stmt 0 view .LVU539
 1714 0070 426D     		ldr	r2, [r0, #84]
3903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1715              		.loc 1 3903 8 view .LVU540
 1716 0072 12F0100F 		tst	r2, #16
 1717 0076 04D1     		bne	.L110
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1718              		.loc 1 3915 7 is_stmt 1 view .LVU541
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1719              		.loc 1 3915 11 is_stmt 0 view .LVU542
 1720 0078 C26C     		ldr	r2, [r0, #76]
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1721              		.loc 1 3915 23 view .LVU543
 1722 007a 526B     		ldr	r2, [r2, #52]
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1723              		.loc 1 3915 7 view .LVU544
 1724 007c 1846     		mov	r0, r3
 1725              	.LVL112:
3915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 1726              		.loc 1 3915 7 view .LVU545
 1727 007e 9047     		blx	r2
 1728              	.LVL113:
3918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1729              		.loc 1 3918 1 view .LVU546
 1730 0080 F5E7     		b	.L103
 1731              	.LVL114:
 1732              	.L110:
3909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1733              		.loc 1 3909 7 is_stmt 1 view .LVU547
 1734 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1735              	.LVL115:
3909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1736              		.loc 1 3909 7 is_stmt 0 view .LVU548
 1737 0086 F2E7     		b	.L103
 1738              		.cfi_endproc
 1739              	.LFE1129:
 1741              		.section	.text.ADC_DMAError,"ax",%progbits
 1742              		.align	1
 1743              		.global	ADC_DMAError
 1744              		.syntax unified
 1745              		.thumb
 1746              		.thumb_func
 1748              	ADC_DMAError:
 1749              	.LVL116:
 1750              	.LFB1131:
3937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** /**
3939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @brief  DMA error callback.
3940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   * @retval None
3942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   */
3943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** {
 1751              		.loc 1 3944 1 is_stmt 1 view -0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 0
 1754              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 231


 1755              		.loc 1 3944 1 is_stmt 0 view .LVU550
 1756 0000 08B5     		push	{r3, lr}
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 3, -8
 1759              		.cfi_offset 14, -4
3945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1760              		.loc 1 3946 3 is_stmt 1 view .LVU551
 1761              		.loc 1 3946 22 is_stmt 0 view .LVU552
 1762 0002 806A     		ldr	r0, [r0, #40]
 1763              	.LVL117:
3947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC state */
3949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1764              		.loc 1 3949 3 is_stmt 1 view .LVU553
 1765 0004 436D     		ldr	r3, [r0, #84]
 1766 0006 43F04003 		orr	r3, r3, #64
 1767 000a 4365     		str	r3, [r0, #84]
3950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Set ADC error code to DMA error */
3952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1768              		.loc 1 3952 3 view .LVU554
 1769 000c 836D     		ldr	r3, [r0, #88]
 1770 000e 43F00403 		orr	r3, r3, #4
 1771 0012 8365     		str	r3, [r0, #88]
3953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
3954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Error callback */
3955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #else
3958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1772              		.loc 1 3958 3 view .LVU555
 1773 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1774              	.LVL118:
3959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1775              		.loc 1 3960 1 is_stmt 0 view .LVU556
 1776 0018 08BD     		pop	{r3, pc}
 1777              		.cfi_endproc
 1778              	.LFE1131:
 1780              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1781              		.align	1
 1782              		.global	HAL_ADC_ConfigChannel
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1787              	HAL_ADC_ConfigChannel:
 1788              	.LVL119:
 1789              	.LFB1122:
2746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 1790              		.loc 1 2746 1 is_stmt 1 view -0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 8
 1793              		@ frame_needed = 0, uses_anonymous_args = 0
2746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 1794              		.loc 1 2746 1 is_stmt 0 view .LVU558
 1795 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 232


 1796              		.cfi_def_cfa_offset 20
 1797              		.cfi_offset 4, -20
 1798              		.cfi_offset 5, -16
 1799              		.cfi_offset 6, -12
 1800              		.cfi_offset 7, -8
 1801              		.cfi_offset 14, -4
 1802 0002 83B0     		sub	sp, sp, #12
 1803              		.cfi_def_cfa_offset 32
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1804              		.loc 1 2923 3 is_stmt 1 view .LVU559
 1805              	.LVL120:
2924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1806              		.loc 1 2924 3 view .LVU560
2925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 1807              		.loc 1 2925 3 view .LVU561
2926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 1808              		.loc 1 2926 3 view .LVU562
2926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 1809              		.loc 1 2926 17 is_stmt 0 view .LVU563
 1810 0004 0022     		movs	r2, #0
 1811 0006 0192     		str	r2, [sp, #4]
2928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1812              		.loc 1 2928 3 is_stmt 1 view .LVU564
2929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* !ADC_SUPPORT_2_5_MSPS */
 1813              		.loc 1 2929 3 view .LVU565
2933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 1814              		.loc 1 2933 3 view .LVU566
2934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 1815              		.loc 1 2934 3 view .LVU567
2935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 1816              		.loc 1 2935 3 view .LVU568
2936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 1817              		.loc 1 2936 3 view .LVU569
2937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 1818              		.loc 1 2937 3 view .LVU570
2938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1819              		.loc 1 2938 3 view .LVU571
2942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1820              		.loc 1 2942 3 view .LVU572
2945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1821              		.loc 1 2945 3 view .LVU573
2951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1822              		.loc 1 2951 5 view .LVU574
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1823              		.loc 1 2955 3 view .LVU575
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1824              		.loc 1 2955 3 view .LVU576
 1825 0008 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 1826 000c 012A     		cmp	r2, #1
 1827 000e 00F03782 		beq	.L166
 1828 0012 0346     		mov	r3, r0
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1829              		.loc 1 2955 3 discriminator 2 view .LVU577
 1830 0014 0122     		movs	r2, #1
 1831 0016 80F85020 		strb	r2, [r0, #80]
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1832              		.loc 1 2955 3 discriminator 2 view .LVU578
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 233


2962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1833              		.loc 1 2962 3 discriminator 2 view .LVU579
2962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 1834              		.loc 1 2962 42 is_stmt 0 discriminator 2 view .LVU580
 1835 001a 0568     		ldr	r5, [r0]
 1836              	.LVL121:
 1837              	.LBB454:
 1838              	.LBI454:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1839              		.loc 2 6863 26 is_stmt 1 discriminator 2 view .LVU581
 1840              	.LBB455:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1841              		.loc 2 6865 3 discriminator 2 view .LVU582
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1842              		.loc 2 6865 12 is_stmt 0 discriminator 2 view .LVU583
 1843 001c A868     		ldr	r0, [r5, #8]
 1844              	.LVL122:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1845              		.loc 2 6865 74 discriminator 2 view .LVU584
 1846 001e 10F0040F 		tst	r0, #4
 1847 0022 09D0     		beq	.L115
 1848              	.LVL123:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1849              		.loc 2 6865 74 discriminator 2 view .LVU585
 1850              	.LBE455:
 1851              	.LBE454:
3114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1852              		.loc 1 3114 5 is_stmt 1 view .LVU586
 1853 0024 5A6D     		ldr	r2, [r3, #84]
 1854 0026 42F02002 		orr	r2, r2, #32
 1855 002a 5A65     		str	r2, [r3, #84]
3116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1856              		.loc 1 3116 5 view .LVU587
 1857              	.LVL124:
3116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 1858              		.loc 1 3116 20 is_stmt 0 view .LVU588
 1859 002c 0120     		movs	r0, #1
 1860              	.LVL125:
 1861              	.L116:
3120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1862              		.loc 1 3120 3 is_stmt 1 view .LVU589
3120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1863              		.loc 1 3120 3 view .LVU590
 1864 002e 0022     		movs	r2, #0
 1865 0030 83F85020 		strb	r2, [r3, #80]
3120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 1866              		.loc 1 3120 3 view .LVU591
3124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 1867              		.loc 1 3124 3 view .LVU592
 1868              	.LVL126:
 1869              	.L114:
3125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1870              		.loc 1 3125 1 is_stmt 0 view .LVU593
 1871 0034 03B0     		add	sp, sp, #12
 1872              		.cfi_remember_state
 1873              		.cfi_def_cfa_offset 20
 1874              		@ sp needed
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 234


 1875 0036 F0BD     		pop	{r4, r5, r6, r7, pc}
 1876              	.LVL127:
 1877              	.L115:
 1878              		.cfi_restore_state
2965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1879              		.loc 1 2965 5 is_stmt 1 view .LVU594
2965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1880              		.loc 1 2965 57 is_stmt 0 view .LVU595
 1881 0038 4C68     		ldr	r4, [r1, #4]
 1882              	.LVL128:
 1883              	.LBB456:
 1884              	.LBI456:
3962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1885              		.loc 2 3962 22 is_stmt 1 view .LVU596
 1886              	.LBB457:
3977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1887              		.loc 2 3977 3 view .LVU597
3977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1888              		.loc 2 3977 25 is_stmt 0 view .LVU598
 1889 003a 3035     		adds	r5, r5, #48
 1890              	.LVL129:
3977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1891              		.loc 2 3977 25 view .LVU599
 1892 003c 220A     		lsrs	r2, r4, #8
 1893 003e 9200     		lsls	r2, r2, #2
 1894 0040 02F00C02 		and	r2, r2, #12
 1895              	.LVL130:
3979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1896              		.loc 2 3979 3 is_stmt 1 view .LVU600
 1897 0044 A858     		ldr	r0, [r5, r2]
 1898 0046 04F01F0E 		and	lr, r4, #31
 1899 004a 1F24     		movs	r4, #31
 1900              	.LVL131:
3979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1901              		.loc 2 3979 3 is_stmt 0 view .LVU601
 1902 004c 04FA0EF4 		lsl	r4, r4, lr
 1903 0050 20EA0400 		bic	r0, r0, r4
 1904 0054 0C68     		ldr	r4, [r1]
 1905 0056 C4F3846C 		ubfx	ip, r4, #26, #5
 1906 005a 0CFA0EFC 		lsl	ip, ip, lr
 1907 005e 40EA0C00 		orr	r0, r0, ip
 1908 0062 A850     		str	r0, [r5, r2]
 1909              	.LVL132:
3979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1910              		.loc 2 3979 3 view .LVU602
 1911              	.LBE457:
 1912              	.LBE456:
2975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1913              		.loc 1 2975 5 is_stmt 1 view .LVU603
2975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1914              		.loc 1 2975 81 is_stmt 0 view .LVU604
 1915 0064 1C68     		ldr	r4, [r3]
 1916              	.LVL133:
 1917              	.LBB458:
 1918              	.LBI458:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1919              		.loc 2 6863 26 is_stmt 1 view .LVU605
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 235


 1920              	.LBB459:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1921              		.loc 2 6865 3 view .LVU606
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1922              		.loc 2 6865 12 is_stmt 0 view .LVU607
 1923 0066 A268     		ldr	r2, [r4, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1924              		.loc 2 6865 74 view .LVU608
 1925 0068 12F00402 		ands	r2, r2, #4
 1926 006c 00D0     		beq	.L117
 1927 006e 0122     		movs	r2, #1
 1928              	.L117:
 1929              	.LVL134:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1930              		.loc 2 6865 74 view .LVU609
 1931              	.LBE459:
 1932              	.LBE458:
2976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1933              		.loc 1 2976 5 is_stmt 1 view .LVU610
 1934              	.LBB460:
 1935              	.LBI460:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1936              		.loc 2 7018 26 view .LVU611
 1937              	.LBB461:
 1938              		.loc 2 7020 3 view .LVU612
 1939              		.loc 2 7020 12 is_stmt 0 view .LVU613
 1940 0070 A068     		ldr	r0, [r4, #8]
 1941              		.loc 2 7020 76 view .LVU614
 1942 0072 10F00800 		ands	r0, r0, #8
 1943 0076 00D0     		beq	.L118
 1944 0078 0120     		movs	r0, #1
 1945              	.L118:
 1946              	.LVL135:
 1947              		.loc 2 7020 76 view .LVU615
 1948              	.LBE461:
 1949              	.LBE460:
2977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1950              		.loc 1 2977 5 is_stmt 1 view .LVU616
2977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1951              		.loc 1 2977 8 is_stmt 0 view .LVU617
 1952 007a 0AB9     		cbnz	r2, .L119
2978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 1953              		.loc 1 2978 9 view .LVU618
 1954 007c 0028     		cmp	r0, #0
 1955 007e 3AD0     		beq	.L186
 1956              	.LVL136:
 1957              	.L119:
3024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1958              		.loc 1 3024 5 is_stmt 1 view .LVU619
3024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 1959              		.loc 1 3024 30 is_stmt 0 view .LVU620
 1960 0080 1868     		ldr	r0, [r3]
 1961              	.LVL137:
 1962              	.LBB462:
 1963              	.LBI462:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1964              		.loc 2 6706 26 is_stmt 1 view .LVU621
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 236


 1965              	.LBB463:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1966              		.loc 2 6708 3 view .LVU622
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1967              		.loc 2 6708 12 is_stmt 0 view .LVU623
 1968 0082 8268     		ldr	r2, [r0, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1969              		.loc 2 6708 68 view .LVU624
 1970 0084 12F0010F 		tst	r2, #1
 1971 0088 40F0F481 		bne	.L171
 1972              	.LVL138:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1973              		.loc 2 6708 68 view .LVU625
 1974              	.LBE463:
 1975              	.LBE462:
3027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1976              		.loc 1 3027 7 is_stmt 1 view .LVU626
3027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1977              		.loc 1 3027 58 is_stmt 0 view .LVU627
 1978 008c 0A68     		ldr	r2, [r1]
3027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 1979              		.loc 1 3027 76 view .LVU628
 1980 008e CD68     		ldr	r5, [r1, #12]
 1981              	.LVL139:
 1982              	.LBB464:
 1983              	.LBI464:
5692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1984              		.loc 2 5692 22 is_stmt 1 view .LVU629
 1985              	.LBB465:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1986              		.loc 2 5697 3 view .LVU630
 1987 0090 D0F8B040 		ldr	r4, [r0, #176]
 1988 0094 C2F3120C 		ubfx	ip, r2, #0, #19
 1989 0098 24EA0C04 		bic	r4, r4, ip
 1990 009c 05F0180C 		and	ip, r5, #24
 1991 00a0 B04D     		ldr	r5, .L197
 1992              	.LVL140:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1993              		.loc 2 5697 3 is_stmt 0 view .LVU631
 1994 00a2 25FA0CF5 		lsr	r5, r5, ip
 1995 00a6 2A40     		ands	r2, r2, r5
 1996              	.LVL141:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1997              		.loc 2 5697 3 view .LVU632
 1998 00a8 C2F31202 		ubfx	r2, r2, #0, #19
 1999 00ac 2243     		orrs	r2, r2, r4
 2000 00ae C0F8B020 		str	r2, [r0, #176]
 2001              	.LVL142:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2002              		.loc 2 5697 3 view .LVU633
 2003              	.LBE465:
 2004              	.LBE464:
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2005              		.loc 1 3030 7 is_stmt 1 view .LVU634
3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2006              		.loc 1 3030 18 is_stmt 0 view .LVU635
 2007 00b2 C868     		ldr	r0, [r1, #12]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 237


3030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2008              		.loc 1 3030 10 view .LVU636
 2009 00b4 AC4A     		ldr	r2, .L197+4
 2010 00b6 9042     		cmp	r0, r2
 2011 00b8 00F0B180 		beq	.L187
 2012              	.L136:
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2013              		.loc 1 3045 7 is_stmt 1 view .LVU637
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2014              		.loc 1 3045 10 is_stmt 0 view .LVU638
 2015 00bc 0A68     		ldr	r2, [r1]
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2016              		.loc 1 3045 9 view .LVU639
 2017 00be AB49     		ldr	r1, .L197+8
 2018              	.LVL143:
3045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2019              		.loc 1 3045 9 view .LVU640
 2020 00c0 0A42     		tst	r2, r1
 2021 00c2 00F0D981 		beq	.L179
3049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2022              		.loc 1 3049 9 is_stmt 1 view .LVU641
 2023              	.LVL144:
 2024              	.LBB466:
 2025              	.LBI466:
2589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2026              		.loc 2 2589 26 view .LVU642
 2027              	.LBB467:
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2028              		.loc 2 2591 3 view .LVU643
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2029              		.loc 2 2591 21 is_stmt 0 view .LVU644
 2030 00c6 AA49     		ldr	r1, .L197+12
 2031 00c8 8968     		ldr	r1, [r1, #8]
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2032              		.loc 2 2591 10 view .LVU645
 2033 00ca 01F0E074 		and	r4, r1, #29360128
 2034              	.LVL145:
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2035              		.loc 2 2591 10 view .LVU646
 2036              	.LBE467:
 2037              	.LBE466:
3053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2038              		.loc 1 3053 9 is_stmt 1 view .LVU647
 2039              	.LBB468:
 2040              	.LBI468:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2041              		.loc 2 6706 26 view .LVU648
 2042              	.LBB469:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2043              		.loc 2 6708 3 view .LVU649
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2044              		.loc 2 6708 12 is_stmt 0 view .LVU650
 2045 00ce A948     		ldr	r0, .L197+16
 2046 00d0 8068     		ldr	r0, [r0, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2047              		.loc 2 6708 68 view .LVU651
 2048 00d2 10F0010F 		tst	r0, #1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 238


 2049 00d6 40F07981 		bne	.L160
 2050              	.LVL146:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2051              		.loc 2 6708 68 view .LVU652
 2052              	.LBE469:
 2053              	.LBE468:
3057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2054              		.loc 1 3057 11 is_stmt 1 view .LVU653
3057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2055              		.loc 1 3057 14 is_stmt 0 view .LVU654
 2056 00da A748     		ldr	r0, .L197+20
 2057 00dc 8242     		cmp	r2, r0
 2058 00de 00F07B81 		beq	.L188
 2059              	.L162:
3075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2060              		.loc 1 3075 16 is_stmt 1 view .LVU655
3075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2061              		.loc 1 3075 19 is_stmt 0 view .LVU656
 2062 00e2 A648     		ldr	r0, .L197+24
 2063 00e4 8242     		cmp	r2, r0
 2064 00e6 00F09E81 		beq	.L189
 2065              	.L165:
3082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2066              		.loc 1 3082 16 is_stmt 1 view .LVU657
3082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 2067              		.loc 1 3082 19 is_stmt 0 view .LVU658
 2068 00ea A548     		ldr	r0, .L197+28
 2069 00ec 8242     		cmp	r2, r0
 2070 00ee 00F0AE81 		beq	.L190
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2071              		.loc 1 2923 21 view .LVU659
 2072 00f2 0020     		movs	r0, #0
 2073 00f4 9BE7     		b	.L116
 2074              	.LVL147:
 2075              	.L186:
2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2076              		.loc 1 2983 7 is_stmt 1 view .LVU660
2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2077              		.loc 1 2983 60 is_stmt 0 view .LVU661
 2078 00f6 0E68     		ldr	r6, [r1]
2983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2079              		.loc 1 2983 78 view .LVU662
 2080 00f8 8D68     		ldr	r5, [r1, #8]
 2081              	.LVL148:
 2082              	.LBB470:
 2083              	.LBI470:
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2084              		.loc 2 5451 22 is_stmt 1 view .LVU663
 2085              	.LBB471:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2086              		.loc 2 5465 3 view .LVU664
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2087              		.loc 2 5465 25 is_stmt 0 view .LVU665
 2088 00fa 1434     		adds	r4, r4, #20
 2089              	.LVL149:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2090              		.loc 2 5465 25 view .LVU666
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 239


 2091 00fc 720E     		lsrs	r2, r6, #25
 2092              	.LVL150:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2093              		.loc 2 5465 25 view .LVU667
 2094 00fe 9200     		lsls	r2, r2, #2
 2095 0100 02F00402 		and	r2, r2, #4
 2096              	.LVL151:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2097              		.loc 2 5467 3 is_stmt 1 view .LVU668
 2098 0104 A058     		ldr	r0, [r4, r2]
 2099              	.LVL152:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2100              		.loc 2 5467 3 is_stmt 0 view .LVU669
 2101 0106 C6F3045C 		ubfx	ip, r6, #20, #5
 2102 010a 0726     		movs	r6, #7
 2103              	.LVL153:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2104              		.loc 2 5467 3 view .LVU670
 2105 010c 06FA0CF6 		lsl	r6, r6, ip
 2106 0110 20EA0600 		bic	r0, r0, r6
 2107 0114 05FA0CF5 		lsl	r5, r5, ip
 2108              	.LVL154:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2109              		.loc 2 5467 3 view .LVU671
 2110 0118 2843     		orrs	r0, r0, r5
 2111 011a A050     		str	r0, [r4, r2]
 2112              	.LVL155:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2113              		.loc 2 5467 3 view .LVU672
 2114              	.LBE471:
 2115              	.LBE470:
2989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2116              		.loc 1 2989 7 is_stmt 1 view .LVU673
2989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2117              		.loc 1 2989 26 is_stmt 0 view .LVU674
 2118 011c 4C69     		ldr	r4, [r1, #20]
 2119 011e 1868     		ldr	r0, [r3]
 2120 0120 C268     		ldr	r2, [r0, #12]
 2121 0122 C2F3C102 		ubfx	r2, r2, #3, #2
 2122 0126 5200     		lsls	r2, r2, #1
2989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2123              		.loc 1 2989 24 view .LVU675
 2124 0128 9440     		lsls	r4, r4, r2
 2125              	.LVL156:
2991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2126              		.loc 1 2991 7 is_stmt 1 view .LVU676
2991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2127              		.loc 1 2991 18 is_stmt 0 view .LVU677
 2128 012a 0D69     		ldr	r5, [r1, #16]
2991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 2129              		.loc 1 2991 10 view .LVU678
 2130 012c 042D     		cmp	r5, #4
 2131 012e 0ED0     		beq	.L120
2994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2132              		.loc 1 2994 9 is_stmt 1 view .LVU679
2994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 2133              		.loc 1 2994 72 is_stmt 0 view .LVU680
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 240


 2134 0130 0E68     		ldr	r6, [r1]
 2135              	.LVL157:
 2136              	.LBB472:
 2137              	.LBI472:
3194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2138              		.loc 2 3194 22 is_stmt 1 view .LVU681
 2139              	.LBB473:
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2140              		.loc 2 3196 3 view .LVU682
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2141              		.loc 2 3196 25 is_stmt 0 view .LVU683
 2142 0132 6030     		adds	r0, r0, #96
 2143              	.LVL158:
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2144              		.loc 2 3198 3 is_stmt 1 view .LVU684
 2145 0134 50F82570 		ldr	r7, [r0, r5, lsl #2]
 2146 0138 924A     		ldr	r2, .L197+32
 2147 013a 3A40     		ands	r2, r2, r7
 2148 013c 06F0F846 		and	r6, r6, #2080374784
 2149              	.LVL159:
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2150              		.loc 2 3198 3 is_stmt 0 view .LVU685
 2151 0140 3443     		orrs	r4, r4, r6
 2152              	.LVL160:
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2153              		.loc 2 3198 3 view .LVU686
 2154 0142 2243     		orrs	r2, r2, r4
 2155 0144 42F00042 		orr	r2, r2, #-2147483648
 2156 0148 40F82520 		str	r2, [r0, r5, lsl #2]
 2157              	.LVL161:
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2158              		.loc 2 3201 1 view .LVU687
 2159 014c 98E7     		b	.L119
 2160              	.LVL162:
 2161              	.L120:
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2162              		.loc 2 3201 1 view .LVU688
 2163              	.LBE473:
 2164              	.LBE472:
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2165              		.loc 1 3001 9 is_stmt 1 view .LVU689
 2166              	.LBB474:
 2167              	.LBI474:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2168              		.loc 2 3261 26 view .LVU690
 2169              	.LBB475:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2170              		.loc 2 3263 3 view .LVU691
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2171              		.loc 2 3265 3 view .LVU692
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2172              		.loc 2 3265 10 is_stmt 0 view .LVU693
 2173 014e 026E     		ldr	r2, [r0, #96]
 2174              	.LVL163:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2175              		.loc 2 3265 10 view .LVU694
 2176              	.LBE475:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 241


 2177              	.LBE474:
 2178              	.LBB476:
 2179              	.LBI476:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2180              		.loc 2 3261 26 is_stmt 1 view .LVU695
 2181              	.LBB477:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2182              		.loc 2 3263 3 view .LVU696
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2183              		.loc 2 3265 3 view .LVU697
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2184              		.loc 2 3265 10 is_stmt 0 view .LVU698
 2185 0150 046E     		ldr	r4, [r0, #96]
 2186              	.LVL164:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2187              		.loc 2 3265 10 view .LVU699
 2188              	.LBE477:
 2189              	.LBE476:
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2190              		.loc 1 3001 12 view .LVU700
 2191 0152 C4F38464 		ubfx	r4, r4, #26, #5
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2192              		.loc 1 3001 104 view .LVU701
 2193 0156 0A68     		ldr	r2, [r1]
 2194 0158 C2F31205 		ubfx	r5, r2, #0, #19
 2195 015c 85BB     		cbnz	r5, .L121
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2196              		.loc 1 3001 104 discriminator 5 view .LVU702
 2197 015e C2F38462 		ubfx	r2, r2, #26, #5
 2198              	.L122:
3001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2199              		.loc 1 3001 11 discriminator 8 view .LVU703
 2200 0162 9442     		cmp	r4, r2
 2201 0164 34D0     		beq	.L191
 2202              	.L124:
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2203              		.loc 1 3005 9 is_stmt 1 view .LVU704
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2204              		.loc 1 3005 12 is_stmt 0 view .LVU705
 2205 0166 1C68     		ldr	r4, [r3]
 2206              	.LVL165:
 2207              	.LBB478:
 2208              	.LBI478:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2209              		.loc 2 3261 26 is_stmt 1 view .LVU706
 2210              	.LBB479:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2211              		.loc 2 3263 3 view .LVU707
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2212              		.loc 2 3265 3 view .LVU708
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2213              		.loc 2 3265 10 is_stmt 0 view .LVU709
 2214 0168 626E     		ldr	r2, [r4, #100]
 2215              	.LVL166:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2216              		.loc 2 3265 10 view .LVU710
 2217              	.LBE479:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 242


 2218              	.LBE478:
 2219              	.LBB480:
 2220              	.LBI480:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2221              		.loc 2 3261 26 is_stmt 1 view .LVU711
 2222              	.LBB481:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2223              		.loc 2 3263 3 view .LVU712
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2224              		.loc 2 3265 3 view .LVU713
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2225              		.loc 2 3265 10 is_stmt 0 view .LVU714
 2226 016a 606E     		ldr	r0, [r4, #100]
 2227              	.LVL167:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2228              		.loc 2 3265 10 view .LVU715
 2229              	.LBE481:
 2230              	.LBE480:
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2231              		.loc 1 3005 12 view .LVU716
 2232 016c C0F38460 		ubfx	r0, r0, #26, #5
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2233              		.loc 1 3005 104 view .LVU717
 2234 0170 0A68     		ldr	r2, [r1]
 2235 0172 C2F31205 		ubfx	r5, r2, #0, #19
 2236 0176 85BB     		cbnz	r5, .L125
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2237              		.loc 1 3005 104 discriminator 5 view .LVU718
 2238 0178 C2F38462 		ubfx	r2, r2, #26, #5
 2239              	.L126:
3005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2240              		.loc 1 3005 11 discriminator 8 view .LVU719
 2241 017c 9042     		cmp	r0, r2
 2242 017e 34D0     		beq	.L192
 2243              	.L128:
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2244              		.loc 1 3009 9 is_stmt 1 view .LVU720
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2245              		.loc 1 3009 12 is_stmt 0 view .LVU721
 2246 0180 1C68     		ldr	r4, [r3]
 2247              	.LVL168:
 2248              	.LBB482:
 2249              	.LBI482:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2250              		.loc 2 3261 26 is_stmt 1 view .LVU722
 2251              	.LBB483:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2252              		.loc 2 3263 3 view .LVU723
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2253              		.loc 2 3265 3 view .LVU724
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2254              		.loc 2 3265 10 is_stmt 0 view .LVU725
 2255 0182 A26E     		ldr	r2, [r4, #104]
 2256              	.LVL169:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2257              		.loc 2 3265 10 view .LVU726
 2258              	.LBE483:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 243


 2259              	.LBE482:
 2260              	.LBB484:
 2261              	.LBI484:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2262              		.loc 2 3261 26 is_stmt 1 view .LVU727
 2263              	.LBB485:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2264              		.loc 2 3263 3 view .LVU728
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2265              		.loc 2 3265 3 view .LVU729
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2266              		.loc 2 3265 10 is_stmt 0 view .LVU730
 2267 0184 A06E     		ldr	r0, [r4, #104]
 2268              	.LVL170:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2269              		.loc 2 3265 10 view .LVU731
 2270              	.LBE485:
 2271              	.LBE484:
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2272              		.loc 1 3009 12 view .LVU732
 2273 0186 C0F38460 		ubfx	r0, r0, #26, #5
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2274              		.loc 1 3009 104 view .LVU733
 2275 018a 0A68     		ldr	r2, [r1]
 2276 018c C2F31205 		ubfx	r5, r2, #0, #19
 2277 0190 85BB     		cbnz	r5, .L129
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2278              		.loc 1 3009 104 discriminator 5 view .LVU734
 2279 0192 C2F38462 		ubfx	r2, r2, #26, #5
 2280              	.L130:
3009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2281              		.loc 1 3009 11 discriminator 8 view .LVU735
 2282 0196 9042     		cmp	r0, r2
 2283 0198 34D0     		beq	.L193
 2284              	.L132:
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2285              		.loc 1 3013 9 is_stmt 1 view .LVU736
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2286              		.loc 1 3013 12 is_stmt 0 view .LVU737
 2287 019a 1C68     		ldr	r4, [r3]
 2288              	.LVL171:
 2289              	.LBB486:
 2290              	.LBI486:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2291              		.loc 2 3261 26 is_stmt 1 view .LVU738
 2292              	.LBB487:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2293              		.loc 2 3263 3 view .LVU739
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2294              		.loc 2 3265 3 view .LVU740
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2295              		.loc 2 3265 10 is_stmt 0 view .LVU741
 2296 019c E26E     		ldr	r2, [r4, #108]
 2297              	.LVL172:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2298              		.loc 2 3265 10 view .LVU742
 2299              	.LBE487:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 244


 2300              	.LBE486:
 2301              	.LBB488:
 2302              	.LBI488:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2303              		.loc 2 3261 26 is_stmt 1 view .LVU743
 2304              	.LBB489:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2305              		.loc 2 3263 3 view .LVU744
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2306              		.loc 2 3265 3 view .LVU745
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2307              		.loc 2 3265 10 is_stmt 0 view .LVU746
 2308 019e E06E     		ldr	r0, [r4, #108]
 2309              	.LVL173:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2310              		.loc 2 3265 10 view .LVU747
 2311              	.LBE489:
 2312              	.LBE488:
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2313              		.loc 1 3013 12 view .LVU748
 2314 01a0 C0F38460 		ubfx	r0, r0, #26, #5
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2315              		.loc 1 3013 104 view .LVU749
 2316 01a4 0A68     		ldr	r2, [r1]
 2317 01a6 C2F31205 		ubfx	r5, r2, #0, #19
 2318 01aa 85BB     		cbnz	r5, .L133
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2319              		.loc 1 3013 104 discriminator 5 view .LVU750
 2320 01ac C2F38462 		ubfx	r2, r2, #26, #5
 2321              	.L134:
3013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 2322              		.loc 1 3013 11 discriminator 8 view .LVU751
 2323 01b0 9042     		cmp	r0, r2
 2324 01b2 7FF465AF 		bne	.L119
3015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2325              		.loc 1 3015 11 is_stmt 1 view .LVU752
 2326              	.LVL174:
 2327              	.LBB490:
 2328              	.LBI490:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2329              		.loc 2 3320 22 view .LVU753
 2330              	.LBB491:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2331              		.loc 2 3322 3 view .LVU754
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2332              		.loc 2 3324 3 view .LVU755
 2333 01b6 E26E     		ldr	r2, [r4, #108]
 2334 01b8 22F00042 		bic	r2, r2, #-2147483648
 2335 01bc E266     		str	r2, [r4, #108]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2336              		.loc 2 3327 1 is_stmt 0 view .LVU756
 2337 01be 5FE7     		b	.L119
 2338              	.LVL175:
 2339              	.L121:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2340              		.loc 2 3327 1 view .LVU757
 2341              	.LBE491:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 245


 2342              	.LBE490:
 2343              	.LBB492:
 2344              	.LBI492:
 2345              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 246


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 247


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 248


 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 249


 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 250


 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 251


 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 252


 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 253


 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 254


 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 255


 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 256


 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 257


 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 258


 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 259


 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 260


 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 261


 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 262


 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 263


1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2346              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU758
 2347              	.LBB493:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2348              		.loc 3 1050 3 discriminator 6 view .LVU759
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2349              		.loc 3 1055 4 discriminator 6 view .LVU760
 2350              		.syntax unified
 2351              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2352 01c0 92FAA2F2 		rbit r2, r2
 2353              	@ 0 "" 2
 2354              	.LVL176:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2355              		.loc 3 1068 3 discriminator 6 view .LVU761
 2356              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU762
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 264


 2357              		.thumb
 2358              		.syntax unified
 2359              	.LBE493:
 2360              	.LBE492:
 2361              	.LBB494:
 2362              	.LBI494:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2363              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU763
 2364              	.LBB495:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2365              		.loc 3 1089 3 discriminator 6 view .LVU764
 2366              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU765
 2367 01c4 12B1     		cbz	r2, .L167
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2368              		.loc 3 1093 3 is_stmt 1 view .LVU766
 2369              		.loc 3 1093 10 is_stmt 0 view .LVU767
 2370 01c6 B2FA82F2 		clz	r2, r2
 2371              	.LVL177:
 2372              		.loc 3 1093 10 view .LVU768
 2373 01ca CAE7     		b	.L122
 2374              	.LVL178:
 2375              	.L167:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2376              		.loc 3 1091 12 view .LVU769
 2377 01cc 2022     		movs	r2, #32
 2378              	.LVL179:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2379              		.loc 3 1091 12 view .LVU770
 2380 01ce C8E7     		b	.L122
 2381              	.L191:
 2382              	.LBE495:
 2383              	.LBE494:
3003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2384              		.loc 1 3003 11 is_stmt 1 view .LVU771
 2385              	.LVL180:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 265


 2386              	.LBB496:
 2387              	.LBI496:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2388              		.loc 2 3320 22 view .LVU772
 2389              	.LBB497:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2390              		.loc 2 3322 3 view .LVU773
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2391              		.loc 2 3324 3 view .LVU774
 2392 01d0 026E     		ldr	r2, [r0, #96]
 2393 01d2 22F00042 		bic	r2, r2, #-2147483648
 2394 01d6 0266     		str	r2, [r0, #96]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2395              		.loc 2 3327 1 is_stmt 0 view .LVU775
 2396 01d8 C5E7     		b	.L124
 2397              	.LVL181:
 2398              	.L125:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2399              		.loc 2 3327 1 view .LVU776
 2400              	.LBE497:
 2401              	.LBE496:
 2402              	.LBB498:
 2403              	.LBI498:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2404              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU777
 2405              	.LBB499:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2406              		.loc 3 1050 3 discriminator 6 view .LVU778
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2407              		.loc 3 1055 4 discriminator 6 view .LVU779
 2408              		.syntax unified
 2409              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2410 01da 92FAA2F2 		rbit r2, r2
 2411              	@ 0 "" 2
 2412              	.LVL182:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2413              		.loc 3 1068 3 discriminator 6 view .LVU780
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2414              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU781
 2415              		.thumb
 2416              		.syntax unified
 2417              	.LBE499:
 2418              	.LBE498:
 2419              	.LBB500:
 2420              	.LBI500:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2421              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU782
 2422              	.LBB501:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2423              		.loc 3 1089 3 discriminator 6 view .LVU783
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2424              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU784
 2425 01de 12B1     		cbz	r2, .L168
 2426              		.loc 3 1093 3 is_stmt 1 view .LVU785
 2427              		.loc 3 1093 10 is_stmt 0 view .LVU786
 2428 01e0 B2FA82F2 		clz	r2, r2
 2429              	.LVL183:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 266


 2430              		.loc 3 1093 10 view .LVU787
 2431 01e4 CAE7     		b	.L126
 2432              	.LVL184:
 2433              	.L168:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2434              		.loc 3 1091 12 view .LVU788
 2435 01e6 2022     		movs	r2, #32
 2436              	.LVL185:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2437              		.loc 3 1091 12 view .LVU789
 2438 01e8 C8E7     		b	.L126
 2439              	.L192:
 2440              	.LBE501:
 2441              	.LBE500:
3007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2442              		.loc 1 3007 11 is_stmt 1 view .LVU790
 2443              	.LVL186:
 2444              	.LBB502:
 2445              	.LBI502:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2446              		.loc 2 3320 22 view .LVU791
 2447              	.LBB503:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2448              		.loc 2 3322 3 view .LVU792
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2449              		.loc 2 3324 3 view .LVU793
 2450 01ea 626E     		ldr	r2, [r4, #100]
 2451 01ec 22F00042 		bic	r2, r2, #-2147483648
 2452 01f0 6266     		str	r2, [r4, #100]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2453              		.loc 2 3327 1 is_stmt 0 view .LVU794
 2454 01f2 C5E7     		b	.L128
 2455              	.LVL187:
 2456              	.L129:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2457              		.loc 2 3327 1 view .LVU795
 2458              	.LBE503:
 2459              	.LBE502:
 2460              	.LBB504:
 2461              	.LBI504:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2462              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU796
 2463              	.LBB505:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2464              		.loc 3 1050 3 discriminator 6 view .LVU797
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2465              		.loc 3 1055 4 discriminator 6 view .LVU798
 2466              		.syntax unified
 2467              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2468 01f4 92FAA2F2 		rbit r2, r2
 2469              	@ 0 "" 2
 2470              	.LVL188:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2471              		.loc 3 1068 3 discriminator 6 view .LVU799
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2472              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU800
 2473              		.thumb
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 267


 2474              		.syntax unified
 2475              	.LBE505:
 2476              	.LBE504:
 2477              	.LBB506:
 2478              	.LBI506:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2479              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU801
 2480              	.LBB507:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2481              		.loc 3 1089 3 discriminator 6 view .LVU802
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2482              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU803
 2483 01f8 12B1     		cbz	r2, .L169
 2484              		.loc 3 1093 3 is_stmt 1 view .LVU804
 2485              		.loc 3 1093 10 is_stmt 0 view .LVU805
 2486 01fa B2FA82F2 		clz	r2, r2
 2487              	.LVL189:
 2488              		.loc 3 1093 10 view .LVU806
 2489 01fe CAE7     		b	.L130
 2490              	.LVL190:
 2491              	.L169:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2492              		.loc 3 1091 12 view .LVU807
 2493 0200 2022     		movs	r2, #32
 2494              	.LVL191:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2495              		.loc 3 1091 12 view .LVU808
 2496 0202 C8E7     		b	.L130
 2497              	.L193:
 2498              	.LBE507:
 2499              	.LBE506:
3011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 2500              		.loc 1 3011 11 is_stmt 1 view .LVU809
 2501              	.LVL192:
 2502              	.LBB508:
 2503              	.LBI508:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2504              		.loc 2 3320 22 view .LVU810
 2505              	.LBB509:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2506              		.loc 2 3322 3 view .LVU811
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2507              		.loc 2 3324 3 view .LVU812
 2508 0204 A26E     		ldr	r2, [r4, #104]
 2509 0206 22F00042 		bic	r2, r2, #-2147483648
 2510 020a A266     		str	r2, [r4, #104]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2511              		.loc 2 3327 1 is_stmt 0 view .LVU813
 2512 020c C5E7     		b	.L132
 2513              	.LVL193:
 2514              	.L133:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2515              		.loc 2 3327 1 view .LVU814
 2516              	.LBE509:
 2517              	.LBE508:
 2518              	.LBB510:
 2519              	.LBI510:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 268


1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2520              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU815
 2521              	.LBB511:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2522              		.loc 3 1050 3 discriminator 6 view .LVU816
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2523              		.loc 3 1055 4 discriminator 6 view .LVU817
 2524              		.syntax unified
 2525              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2526 020e 92FAA2F2 		rbit r2, r2
 2527              	@ 0 "" 2
 2528              	.LVL194:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2529              		.loc 3 1068 3 discriminator 6 view .LVU818
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2530              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU819
 2531              		.thumb
 2532              		.syntax unified
 2533              	.LBE511:
 2534              	.LBE510:
 2535              	.LBB512:
 2536              	.LBI512:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2537              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU820
 2538              	.LBB513:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2539              		.loc 3 1089 3 discriminator 6 view .LVU821
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2540              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU822
 2541 0212 12B1     		cbz	r2, .L170
 2542              		.loc 3 1093 3 is_stmt 1 view .LVU823
 2543              		.loc 3 1093 10 is_stmt 0 view .LVU824
 2544 0214 B2FA82F2 		clz	r2, r2
 2545              	.LVL195:
 2546              		.loc 3 1093 10 view .LVU825
 2547 0218 CAE7     		b	.L134
 2548              	.LVL196:
 2549              	.L170:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2550              		.loc 3 1091 12 view .LVU826
 2551 021a 2022     		movs	r2, #32
 2552              	.LVL197:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2553              		.loc 3 1091 12 view .LVU827
 2554 021c C8E7     		b	.L134
 2555              	.L187:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2556              		.loc 3 1091 12 view .LVU828
 2557              	.LBE513:
 2558              	.LBE512:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2559              		.loc 1 3034 9 is_stmt 1 view .LVU829
 2560 021e 1C68     		ldr	r4, [r3]
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2561              		.loc 1 3035 50 is_stmt 0 view .LVU830
 2562 0220 0A68     		ldr	r2, [r1]
 2563 0222 C2F31205 		ubfx	r5, r2, #0, #19
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 269


 2564 0226 002D     		cmp	r5, #0
 2565 0228 3BD1     		bne	.L137
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2566              		.loc 1 3035 50 discriminator 1 view .LVU831
 2567 022a 900E     		lsrs	r0, r2, #26
 2568 022c 0130     		adds	r0, r0, #1
 2569 022e 00F01F00 		and	r0, r0, #31
 2570 0232 0928     		cmp	r0, #9
 2571 0234 8CBF     		ite	hi
 2572 0236 0020     		movhi	r0, #0
 2573 0238 0120     		movls	r0, #1
 2574              	.L138:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2575              		.loc 1 3034 9 view .LVU832
 2576 023a 0028     		cmp	r0, #0
 2577 023c 69D0     		beq	.L140
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2578              		.loc 1 3035 50 view .LVU833
 2579 023e 002D     		cmp	r5, #0
 2580 0240 3ED1     		bne	.L141
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2581              		.loc 1 3035 50 discriminator 3 view .LVU834
 2582 0242 900E     		lsrs	r0, r2, #26
 2583 0244 0130     		adds	r0, r0, #1
 2584 0246 8006     		lsls	r0, r0, #26
 2585 0248 00F0F840 		and	r0, r0, #2080374784
 2586              	.L142:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2587              		.loc 1 3035 50 discriminator 6 view .LVU835
 2588 024c 002D     		cmp	r5, #0
 2589 024e 43D1     		bne	.L144
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2590              		.loc 1 3035 50 discriminator 7 view .LVU836
 2591 0250 4FEA926C 		lsr	ip, r2, #26
 2592 0254 0CF1010C 		add	ip, ip, #1
 2593 0258 0CF01F0C 		and	ip, ip, #31
 2594 025c 0126     		movs	r6, #1
 2595 025e 06FA0CF6 		lsl	r6, r6, ip
 2596              	.L145:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2597              		.loc 1 3035 50 discriminator 10 view .LVU837
 2598 0262 3043     		orrs	r0, r0, r6
 2599 0264 002D     		cmp	r5, #0
 2600 0266 46D1     		bne	.L147
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2601              		.loc 1 3035 50 discriminator 11 view .LVU838
 2602 0268 920E     		lsrs	r2, r2, #26
 2603 026a 0132     		adds	r2, r2, #1
 2604 026c 02F01F02 		and	r2, r2, #31
 2605 0270 02EB4202 		add	r2, r2, r2, lsl #1
 2606 0274 1205     		lsls	r2, r2, #20
 2607              	.L148:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2608              		.loc 1 3034 9 view .LVU839
 2609 0276 1043     		orrs	r0, r0, r2
 2610              	.L150:
3036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 270


 2611              		.loc 1 3036 46 discriminator 1 view .LVU840
 2612 0278 8D68     		ldr	r5, [r1, #8]
 2613              	.LVL198:
 2614              	.LBB514:
 2615              	.LBI514:
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2616              		.loc 2 5451 22 is_stmt 1 discriminator 1 view .LVU841
 2617              	.LBB515:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2618              		.loc 2 5465 3 discriminator 1 view .LVU842
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2619              		.loc 2 5465 25 is_stmt 0 discriminator 1 view .LVU843
 2620 027a 04F1140E 		add	lr, r4, #20
 2621 027e 420E     		lsrs	r2, r0, #25
 2622 0280 9200     		lsls	r2, r2, #2
 2623 0282 02F00402 		and	r2, r2, #4
 2624              	.LVL199:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2625              		.loc 2 5467 3 is_stmt 1 discriminator 1 view .LVU844
 2626 0286 5EF80240 		ldr	r4, [lr, r2]
 2627              	.LVL200:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2628              		.loc 2 5467 3 is_stmt 0 discriminator 1 view .LVU845
 2629 028a C0F30450 		ubfx	r0, r0, #20, #5
 2630              	.LVL201:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2631              		.loc 2 5467 3 discriminator 1 view .LVU846
 2632 028e 0726     		movs	r6, #7
 2633 0290 8640     		lsls	r6, r6, r0
 2634 0292 24EA060C 		bic	ip, r4, r6
 2635 0296 8540     		lsls	r5, r5, r0
 2636              	.LVL202:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2637              		.loc 2 5467 3 discriminator 1 view .LVU847
 2638 0298 4CEA0505 		orr	r5, ip, r5
 2639 029c 4EF80250 		str	r5, [lr, r2]
 2640              	.LVL203:
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 2641              		.loc 2 5471 1 discriminator 1 view .LVU848
 2642 02a0 0CE7     		b	.L136
 2643              	.LVL204:
 2644              	.L137:
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 2645              		.loc 2 5471 1 discriminator 1 view .LVU849
 2646              	.LBE515:
 2647              	.LBE514:
 2648              	.LBB516:
 2649              	.LBI516:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2650              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU850
 2651              	.LBB517:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2652              		.loc 3 1050 3 discriminator 2 view .LVU851
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2653              		.loc 3 1055 4 discriminator 2 view .LVU852
 2654              		.syntax unified
 2655              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 271


 2656 02a2 92FAA2F0 		rbit r0, r2
 2657              	@ 0 "" 2
 2658              	.LVL205:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2659              		.loc 3 1068 3 discriminator 2 view .LVU853
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2660              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU854
 2661              		.thumb
 2662              		.syntax unified
 2663              	.LBE517:
 2664              	.LBE516:
 2665              	.LBB518:
 2666              	.LBI518:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2667              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU855
 2668              	.LBB519:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2669              		.loc 3 1089 3 discriminator 2 view .LVU856
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2670              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU857
 2671 02a6 48B1     		cbz	r0, .L172
 2672              		.loc 3 1093 3 is_stmt 1 view .LVU858
 2673              		.loc 3 1093 10 is_stmt 0 view .LVU859
 2674 02a8 B0FA80F0 		clz	r0, r0
 2675              	.LVL206:
 2676              	.L139:
 2677              		.loc 3 1093 10 view .LVU860
 2678              	.LBE519:
 2679              	.LBE518:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2680              		.loc 1 3035 50 view .LVU861
 2681 02ac 0130     		adds	r0, r0, #1
 2682 02ae 00F01F00 		and	r0, r0, #31
 2683 02b2 0928     		cmp	r0, #9
 2684 02b4 8CBF     		ite	hi
 2685 02b6 0020     		movhi	r0, #0
 2686 02b8 0120     		movls	r0, #1
 2687 02ba BEE7     		b	.L138
 2688              	.LVL207:
 2689              	.L172:
 2690              	.LBB521:
 2691              	.LBB520:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2692              		.loc 3 1091 12 view .LVU862
 2693 02bc 2020     		movs	r0, #32
 2694              	.LVL208:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2695              		.loc 3 1091 12 view .LVU863
 2696 02be F5E7     		b	.L139
 2697              	.L141:
 2698              	.LVL209:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2699              		.loc 3 1091 12 view .LVU864
 2700              	.LBE520:
 2701              	.LBE521:
 2702              	.LBB522:
 2703              	.LBI522:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 272


1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2704              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU865
 2705              	.LBB523:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2706              		.loc 3 1050 3 discriminator 4 view .LVU866
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2707              		.loc 3 1055 4 discriminator 4 view .LVU867
 2708              		.syntax unified
 2709              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2710 02c0 92FAA2F0 		rbit r0, r2
 2711              	@ 0 "" 2
 2712              	.LVL210:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2713              		.loc 3 1068 3 discriminator 4 view .LVU868
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2714              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU869
 2715              		.thumb
 2716              		.syntax unified
 2717              	.LBE523:
 2718              	.LBE522:
 2719              	.LBB524:
 2720              	.LBI524:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2721              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU870
 2722              	.LBB525:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2723              		.loc 3 1089 3 discriminator 4 view .LVU871
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2724              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU872
 2725 02c4 30B1     		cbz	r0, .L173
 2726              		.loc 3 1093 3 is_stmt 1 view .LVU873
 2727              		.loc 3 1093 10 is_stmt 0 view .LVU874
 2728 02c6 B0FA80F0 		clz	r0, r0
 2729              	.LVL211:
 2730              	.L143:
 2731              		.loc 3 1093 10 view .LVU875
 2732              	.LBE525:
 2733              	.LBE524:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2734              		.loc 1 3035 50 view .LVU876
 2735 02ca 0130     		adds	r0, r0, #1
 2736 02cc 8006     		lsls	r0, r0, #26
 2737 02ce 00F0F840 		and	r0, r0, #2080374784
 2738 02d2 BBE7     		b	.L142
 2739              	.LVL212:
 2740              	.L173:
 2741              	.LBB527:
 2742              	.LBB526:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2743              		.loc 3 1091 12 view .LVU877
 2744 02d4 2020     		movs	r0, #32
 2745              	.LVL213:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2746              		.loc 3 1091 12 view .LVU878
 2747 02d6 F8E7     		b	.L143
 2748              	.L144:
 2749              	.LVL214:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 273


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2750              		.loc 3 1091 12 view .LVU879
 2751              	.LBE526:
 2752              	.LBE527:
 2753              	.LBB528:
 2754              	.LBI528:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2755              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU880
 2756              	.LBB529:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2757              		.loc 3 1050 3 discriminator 8 view .LVU881
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2758              		.loc 3 1055 4 discriminator 8 view .LVU882
 2759              		.syntax unified
 2760              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2761 02d8 92FAA2F6 		rbit r6, r2
 2762              	@ 0 "" 2
 2763              	.LVL215:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2764              		.loc 3 1068 3 discriminator 8 view .LVU883
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2765              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU884
 2766              		.thumb
 2767              		.syntax unified
 2768              	.LBE529:
 2769              	.LBE528:
 2770              	.LBB530:
 2771              	.LBI530:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2772              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU885
 2773              	.LBB531:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2774              		.loc 3 1089 3 discriminator 8 view .LVU886
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2775              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU887
 2776 02dc 4EB1     		cbz	r6, .L174
 2777              		.loc 3 1093 3 is_stmt 1 view .LVU888
 2778              		.loc 3 1093 10 is_stmt 0 view .LVU889
 2779 02de B6FA86F6 		clz	r6, r6
 2780              	.LVL216:
 2781              	.L146:
 2782              		.loc 3 1093 10 view .LVU890
 2783              	.LBE531:
 2784              	.LBE530:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2785              		.loc 1 3035 50 view .LVU891
 2786 02e2 0136     		adds	r6, r6, #1
 2787 02e4 06F01F06 		and	r6, r6, #31
 2788 02e8 4FF0010C 		mov	ip, #1
 2789 02ec 0CFA06F6 		lsl	r6, ip, r6
 2790 02f0 B7E7     		b	.L145
 2791              	.LVL217:
 2792              	.L174:
 2793              	.LBB533:
 2794              	.LBB532:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2795              		.loc 3 1091 12 view .LVU892
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 274


 2796 02f2 2026     		movs	r6, #32
 2797              	.LVL218:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2798              		.loc 3 1091 12 view .LVU893
 2799 02f4 F5E7     		b	.L146
 2800              	.L147:
 2801              	.LVL219:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2802              		.loc 3 1091 12 view .LVU894
 2803              	.LBE532:
 2804              	.LBE533:
 2805              	.LBB534:
 2806              	.LBI534:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2807              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU895
 2808              	.LBB535:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2809              		.loc 3 1050 3 discriminator 12 view .LVU896
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2810              		.loc 3 1055 4 discriminator 12 view .LVU897
 2811              		.syntax unified
 2812              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2813 02f6 92FAA2F2 		rbit r2, r2
 2814              	@ 0 "" 2
 2815              	.LVL220:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2816              		.loc 3 1068 3 discriminator 12 view .LVU898
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2817              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU899
 2818              		.thumb
 2819              		.syntax unified
 2820              	.LBE535:
 2821              	.LBE534:
 2822              	.LBB536:
 2823              	.LBI536:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2824              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU900
 2825              	.LBB537:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2826              		.loc 3 1089 3 discriminator 12 view .LVU901
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2827              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU902
 2828 02fa 42B1     		cbz	r2, .L175
 2829              		.loc 3 1093 3 is_stmt 1 view .LVU903
 2830              		.loc 3 1093 10 is_stmt 0 view .LVU904
 2831 02fc B2FA82F2 		clz	r2, r2
 2832              	.LVL221:
 2833              	.L149:
 2834              		.loc 3 1093 10 view .LVU905
 2835              	.LBE537:
 2836              	.LBE536:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2837              		.loc 1 3035 50 view .LVU906
 2838 0300 0132     		adds	r2, r2, #1
 2839 0302 02F01F02 		and	r2, r2, #31
 2840 0306 02EB4202 		add	r2, r2, r2, lsl #1
 2841 030a 1205     		lsls	r2, r2, #20
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 275


 2842 030c B3E7     		b	.L148
 2843              	.LVL222:
 2844              	.L175:
 2845              	.LBB539:
 2846              	.LBB538:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2847              		.loc 3 1091 12 view .LVU907
 2848 030e 2022     		movs	r2, #32
 2849              	.LVL223:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2850              		.loc 3 1091 12 view .LVU908
 2851 0310 F6E7     		b	.L149
 2852              	.L140:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2853              		.loc 3 1091 12 view .LVU909
 2854              	.LBE538:
 2855              	.LBE539:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2856              		.loc 1 3035 50 view .LVU910
 2857 0312 E5B9     		cbnz	r5, .L151
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2858              		.loc 1 3035 50 discriminator 13 view .LVU911
 2859 0314 900E     		lsrs	r0, r2, #26
 2860 0316 0130     		adds	r0, r0, #1
 2861 0318 8006     		lsls	r0, r0, #26
 2862 031a 00F0F840 		and	r0, r0, #2080374784
 2863              	.L152:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2864              		.loc 1 3035 50 discriminator 16 view .LVU912
 2865 031e ADBB     		cbnz	r5, .L154
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2866              		.loc 1 3035 50 discriminator 17 view .LVU913
 2867 0320 4FEA926C 		lsr	ip, r2, #26
 2868 0324 0CF1010C 		add	ip, ip, #1
 2869 0328 0CF01F0C 		and	ip, ip, #31
 2870 032c 0126     		movs	r6, #1
 2871 032e 06FA0CF6 		lsl	r6, r6, ip
 2872              	.L155:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2873              		.loc 1 3035 50 discriminator 20 view .LVU914
 2874 0332 3043     		orrs	r0, r0, r6
 2875 0334 CDBB     		cbnz	r5, .L157
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2876              		.loc 1 3035 50 discriminator 21 view .LVU915
 2877 0336 920E     		lsrs	r2, r2, #26
 2878 0338 0132     		adds	r2, r2, #1
 2879 033a 02F01F02 		and	r2, r2, #31
 2880 033e 02EB4202 		add	r2, r2, r2, lsl #1
 2881 0342 1E3A     		subs	r2, r2, #30
 2882 0344 1205     		lsls	r2, r2, #20
 2883 0346 42F00072 		orr	r2, r2, #33554432
 2884              	.L158:
3034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2885              		.loc 1 3034 9 discriminator 2 view .LVU916
 2886 034a 1043     		orrs	r0, r0, r2
 2887 034c 94E7     		b	.L150
 2888              	.L151:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 276


 2889              	.LVL224:
 2890              	.LBB540:
 2891              	.LBI540:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2892              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU917
 2893              	.LBB541:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2894              		.loc 3 1050 3 discriminator 14 view .LVU918
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2895              		.loc 3 1055 4 discriminator 14 view .LVU919
 2896              		.syntax unified
 2897              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2898 034e 92FAA2F0 		rbit r0, r2
 2899              	@ 0 "" 2
 2900              	.LVL225:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2901              		.loc 3 1068 3 discriminator 14 view .LVU920
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2902              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU921
 2903              		.thumb
 2904              		.syntax unified
 2905              	.LBE541:
 2906              	.LBE540:
 2907              	.LBB542:
 2908              	.LBI542:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2909              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU922
 2910              	.LBB543:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2911              		.loc 3 1089 3 discriminator 14 view .LVU923
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2912              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU924
 2913 0352 C8B1     		cbz	r0, .L176
 2914              		.loc 3 1093 3 is_stmt 1 view .LVU925
 2915              		.loc 3 1093 10 is_stmt 0 view .LVU926
 2916 0354 B0FA80F0 		clz	r0, r0
 2917              	.LVL226:
 2918              	.L153:
 2919              		.loc 3 1093 10 view .LVU927
 2920              	.LBE543:
 2921              	.LBE542:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2922              		.loc 1 3035 50 view .LVU928
 2923 0358 0130     		adds	r0, r0, #1
 2924 035a 8006     		lsls	r0, r0, #26
 2925 035c 00F0F840 		and	r0, r0, #2080374784
 2926 0360 DDE7     		b	.L152
 2927              	.L198:
 2928 0362 00BF     		.align	2
 2929              	.L197:
 2930 0364 FFFF0700 		.word	524287
 2931 0368 00007F40 		.word	1082064896
 2932 036c 00000880 		.word	-2146959360
 2933 0370 00030450 		.word	1342440192
 2934 0374 00000450 		.word	1342439424
 2935 0378 000052C7 		.word	-950927360
 2936 037c 000084CB 		.word	-880541696
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 277


 2937 0380 01000080 		.word	-2147483647
 2938 0384 00F0FF03 		.word	67104768
 2939              	.LVL227:
 2940              	.L176:
 2941              	.LBB545:
 2942              	.LBB544:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2943              		.loc 3 1091 12 view .LVU929
 2944 0388 2020     		movs	r0, #32
 2945              	.LVL228:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2946              		.loc 3 1091 12 view .LVU930
 2947 038a E5E7     		b	.L153
 2948              	.L154:
 2949              	.LVL229:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2950              		.loc 3 1091 12 view .LVU931
 2951              	.LBE544:
 2952              	.LBE545:
 2953              	.LBB546:
 2954              	.LBI546:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2955              		.loc 3 1048 31 is_stmt 1 discriminator 18 view .LVU932
 2956              	.LBB547:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2957              		.loc 3 1050 3 discriminator 18 view .LVU933
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2958              		.loc 3 1055 4 discriminator 18 view .LVU934
 2959              		.syntax unified
 2960              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2961 038c 92FAA2F6 		rbit r6, r2
 2962              	@ 0 "" 2
 2963              	.LVL230:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2964              		.loc 3 1068 3 discriminator 18 view .LVU935
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2965              		.loc 3 1068 3 is_stmt 0 discriminator 18 view .LVU936
 2966              		.thumb
 2967              		.syntax unified
 2968              	.LBE547:
 2969              	.LBE546:
 2970              	.LBB548:
 2971              	.LBI548:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2972              		.loc 3 1078 30 is_stmt 1 discriminator 18 view .LVU937
 2973              	.LBB549:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2974              		.loc 3 1089 3 discriminator 18 view .LVU938
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2975              		.loc 3 1089 6 is_stmt 0 discriminator 18 view .LVU939
 2976 0390 4EB1     		cbz	r6, .L177
 2977              		.loc 3 1093 3 is_stmt 1 view .LVU940
 2978              		.loc 3 1093 10 is_stmt 0 view .LVU941
 2979 0392 B6FA86F6 		clz	r6, r6
 2980              	.LVL231:
 2981              	.L156:
 2982              		.loc 3 1093 10 view .LVU942
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 278


 2983              	.LBE549:
 2984              	.LBE548:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 2985              		.loc 1 3035 50 view .LVU943
 2986 0396 0136     		adds	r6, r6, #1
 2987 0398 06F01F06 		and	r6, r6, #31
 2988 039c 4FF0010C 		mov	ip, #1
 2989 03a0 0CFA06F6 		lsl	r6, ip, r6
 2990 03a4 C5E7     		b	.L155
 2991              	.LVL232:
 2992              	.L177:
 2993              	.LBB551:
 2994              	.LBB550:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2995              		.loc 3 1091 12 view .LVU944
 2996 03a6 2026     		movs	r6, #32
 2997              	.LVL233:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2998              		.loc 3 1091 12 view .LVU945
 2999 03a8 F5E7     		b	.L156
 3000              	.L157:
 3001              	.LVL234:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3002              		.loc 3 1091 12 view .LVU946
 3003              	.LBE550:
 3004              	.LBE551:
 3005              	.LBB552:
 3006              	.LBI552:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3007              		.loc 3 1048 31 is_stmt 1 discriminator 22 view .LVU947
 3008              	.LBB553:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3009              		.loc 3 1050 3 discriminator 22 view .LVU948
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3010              		.loc 3 1055 4 discriminator 22 view .LVU949
 3011              		.syntax unified
 3012              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3013 03aa 92FAA2F2 		rbit r2, r2
 3014              	@ 0 "" 2
 3015              	.LVL235:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3016              		.loc 3 1068 3 discriminator 22 view .LVU950
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3017              		.loc 3 1068 3 is_stmt 0 discriminator 22 view .LVU951
 3018              		.thumb
 3019              		.syntax unified
 3020              	.LBE553:
 3021              	.LBE552:
 3022              	.LBB554:
 3023              	.LBI554:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3024              		.loc 3 1078 30 is_stmt 1 discriminator 22 view .LVU952
 3025              	.LBB555:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3026              		.loc 3 1089 3 discriminator 22 view .LVU953
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3027              		.loc 3 1089 6 is_stmt 0 discriminator 22 view .LVU954
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 279


 3028 03ae 5AB1     		cbz	r2, .L178
 3029              		.loc 3 1093 3 is_stmt 1 view .LVU955
 3030              		.loc 3 1093 10 is_stmt 0 view .LVU956
 3031 03b0 B2FA82F2 		clz	r2, r2
 3032              	.LVL236:
 3033              	.L159:
 3034              		.loc 3 1093 10 view .LVU957
 3035              	.LBE555:
 3036              	.LBE554:
3035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                       sConfig->SamplingTime);
 3037              		.loc 1 3035 50 view .LVU958
 3038 03b4 0132     		adds	r2, r2, #1
 3039 03b6 02F01F02 		and	r2, r2, #31
 3040 03ba 02EB4202 		add	r2, r2, r2, lsl #1
 3041 03be 1E3A     		subs	r2, r2, #30
 3042 03c0 1205     		lsls	r2, r2, #20
 3043 03c2 42F00072 		orr	r2, r2, #33554432
 3044 03c6 C0E7     		b	.L158
 3045              	.LVL237:
 3046              	.L178:
 3047              	.LBB557:
 3048              	.LBB556:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3049              		.loc 3 1091 12 view .LVU959
 3050 03c8 2022     		movs	r2, #32
 3051              	.LVL238:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3052              		.loc 3 1091 12 view .LVU960
 3053 03ca F3E7     		b	.L159
 3054              	.LVL239:
 3055              	.L160:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3056              		.loc 3 1091 12 view .LVU961
 3057              	.LBE556:
 3058              	.LBE557:
3100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3059              		.loc 1 3100 11 is_stmt 1 view .LVU962
 3060 03cc 5A6D     		ldr	r2, [r3, #84]
 3061 03ce 42F02002 		orr	r2, r2, #32
 3062 03d2 5A65     		str	r2, [r3, #84]
3102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 3063              		.loc 1 3102 11 view .LVU963
 3064              	.LVL240:
3102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 3065              		.loc 1 3102 26 is_stmt 0 view .LVU964
 3066 03d4 0120     		movs	r0, #1
 3067 03d6 2AE6     		b	.L116
 3068              	.LVL241:
 3069              	.L188:
3057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3070              		.loc 1 3057 60 discriminator 1 view .LVU965
 3071 03d8 11F4000F 		tst	r1, #8388608
 3072 03dc 7FF481AE 		bne	.L162
3059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3073              		.loc 1 3059 13 is_stmt 1 view .LVU966
3059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3074              		.loc 1 3059 17 is_stmt 0 view .LVU967
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 280


 3075 03e0 1968     		ldr	r1, [r3]
3059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3076              		.loc 1 3059 16 view .LVU968
 3077 03e2 284A     		ldr	r2, .L199
 3078 03e4 9142     		cmp	r1, r2
 3079 03e6 01D0     		beq	.L194
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3080              		.loc 1 2923 21 view .LVU969
 3081 03e8 0020     		movs	r0, #0
 3082 03ea 20E6     		b	.L116
 3083              	.L194:
3061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3084              		.loc 1 3061 15 is_stmt 1 view .LVU970
 3085 03ec 44F40002 		orr	r2, r4, #8388608
 3086              	.LVL242:
 3087              	.LBB558:
 3088              	.LBI558:
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3089              		.loc 2 2496 22 view .LVU971
 3090              	.LBB559:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3091              		.loc 2 2498 3 view .LVU972
 3092 03f0 2548     		ldr	r0, .L199+4
 3093 03f2 8168     		ldr	r1, [r0, #8]
 3094 03f4 21F0E071 		bic	r1, r1, #29360128
 3095 03f8 0A43     		orrs	r2, r2, r1
 3096              	.LVL243:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3097              		.loc 2 2498 3 is_stmt 0 view .LVU973
 3098 03fa 8260     		str	r2, [r0, #8]
 3099              	.LVL244:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3100              		.loc 2 2498 3 view .LVU974
 3101              	.LBE559:
 3102              	.LBE558:
3068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3103              		.loc 1 3068 15 is_stmt 1 view .LVU975
3068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3104              		.loc 1 3068 95 is_stmt 0 view .LVU976
 3105 03fc 234A     		ldr	r2, .L199+8
 3106 03fe 1268     		ldr	r2, [r2]
 3107 0400 9209     		lsrs	r2, r2, #6
 3108 0402 2349     		ldr	r1, .L199+12
 3109 0404 A1FB0212 		umull	r1, r2, r1, r2
 3110 0408 9209     		lsrs	r2, r2, #6
3068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3111              		.loc 1 3068 75 view .LVU977
 3112 040a 0132     		adds	r2, r2, #1
 3113 040c 02EB4202 		add	r2, r2, r2, lsl #1
 3114 0410 9200     		lsls	r2, r2, #2
3068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               while(wait_loop_index != 0UL)
 3115              		.loc 1 3068 31 view .LVU978
 3116 0412 0192     		str	r2, [sp, #4]
3069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3117              		.loc 1 3069 15 is_stmt 1 view .LVU979
3069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3118              		.loc 1 3069 20 is_stmt 0 view .LVU980
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 281


 3119 0414 02E0     		b	.L163
 3120              	.L164:
3071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
 3121              		.loc 1 3071 17 is_stmt 1 view .LVU981
3071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               }
 3122              		.loc 1 3071 32 is_stmt 0 view .LVU982
 3123 0416 019A     		ldr	r2, [sp, #4]
 3124 0418 013A     		subs	r2, r2, #1
 3125 041a 0192     		str	r2, [sp, #4]
 3126              	.L163:
3069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****               {
 3127              		.loc 1 3069 37 is_stmt 1 view .LVU983
 3128 041c 019A     		ldr	r2, [sp, #4]
 3129 041e 002A     		cmp	r2, #0
 3130 0420 F9D1     		bne	.L164
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3131              		.loc 1 2923 21 is_stmt 0 view .LVU984
 3132 0422 0020     		movs	r0, #0
 3133 0424 03E6     		b	.L116
 3134              	.L189:
3075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3135              		.loc 1 3075 59 discriminator 1 view .LVU985
 3136 0426 11F0807F 		tst	r1, #16777216
 3137 042a 7FF45EAE 		bne	.L165
3077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3138              		.loc 1 3077 13 is_stmt 1 view .LVU986
3077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3139              		.loc 1 3077 17 is_stmt 0 view .LVU987
 3140 042e 1968     		ldr	r1, [r3]
3077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3141              		.loc 1 3077 16 view .LVU988
 3142 0430 144A     		ldr	r2, .L199
 3143 0432 9142     		cmp	r1, r2
 3144 0434 01D0     		beq	.L195
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3145              		.loc 1 2923 21 view .LVU989
 3146 0436 0020     		movs	r0, #0
 3147 0438 F9E5     		b	.L116
 3148              	.L195:
3079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 3149              		.loc 1 3079 15 is_stmt 1 view .LVU990
 3150 043a 44F08072 		orr	r2, r4, #16777216
 3151              	.LVL245:
 3152              	.LBB560:
 3153              	.LBI560:
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3154              		.loc 2 2496 22 view .LVU991
 3155              	.LBB561:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3156              		.loc 2 2498 3 view .LVU992
 3157 043e 1248     		ldr	r0, .L199+4
 3158 0440 8168     		ldr	r1, [r0, #8]
 3159 0442 21F0E071 		bic	r1, r1, #29360128
 3160 0446 0A43     		orrs	r2, r2, r1
 3161              	.LVL246:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3162              		.loc 2 2498 3 is_stmt 0 view .LVU993
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 282


 3163 0448 8260     		str	r2, [r0, #8]
 3164              	.LBE561:
 3165              	.LBE560:
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3166              		.loc 1 2923 21 view .LVU994
 3167 044a 0020     		movs	r0, #0
 3168              	.LBB563:
 3169              	.LBB562:
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3170              		.loc 2 2499 1 view .LVU995
 3171 044c EFE5     		b	.L116
 3172              	.LVL247:
 3173              	.L190:
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3174              		.loc 2 2499 1 view .LVU996
 3175              	.LBE562:
 3176              	.LBE563:
3082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3177              		.loc 1 3082 62 discriminator 1 view .LVU997
 3178 044e 11F4800F 		tst	r1, #4194304
 3179 0452 13D1     		bne	.L183
3084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3180              		.loc 1 3084 13 is_stmt 1 view .LVU998
3084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3181              		.loc 1 3084 17 is_stmt 0 view .LVU999
 3182 0454 1968     		ldr	r1, [r3]
3084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             {
 3183              		.loc 1 3084 16 view .LVU1000
 3184 0456 0B4A     		ldr	r2, .L199
 3185 0458 9142     		cmp	r1, r2
 3186 045a 01D0     		beq	.L196
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3187              		.loc 1 2923 21 view .LVU1001
 3188 045c 0020     		movs	r0, #0
 3189 045e E6E5     		b	.L116
 3190              	.L196:
3086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             }
 3191              		.loc 1 3086 15 is_stmt 1 view .LVU1002
 3192 0460 44F48002 		orr	r2, r4, #4194304
 3193              	.LVL248:
 3194              	.LBB564:
 3195              	.LBI564:
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3196              		.loc 2 2496 22 view .LVU1003
 3197              	.LBB565:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3198              		.loc 2 2498 3 view .LVU1004
 3199 0464 0848     		ldr	r0, .L199+4
 3200 0466 8168     		ldr	r1, [r0, #8]
 3201 0468 21F0E071 		bic	r1, r1, #29360128
 3202 046c 0A43     		orrs	r2, r2, r1
 3203              	.LVL249:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3204              		.loc 2 2498 3 is_stmt 0 view .LVU1005
 3205 046e 8260     		str	r2, [r0, #8]
 3206              	.LBE565:
 3207              	.LBE564:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 283


2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3208              		.loc 1 2923 21 view .LVU1006
 3209 0470 0020     		movs	r0, #0
 3210              	.LBB567:
 3211              	.LBB566:
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3212              		.loc 2 2499 1 view .LVU1007
 3213 0472 DCE5     		b	.L116
 3214              	.LVL250:
 3215              	.L171:
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3216              		.loc 2 2499 1 view .LVU1008
 3217              	.LBE566:
 3218              	.LBE567:
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3219              		.loc 1 2923 21 view .LVU1009
 3220 0474 0020     		movs	r0, #0
 3221              	.LVL251:
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3222              		.loc 1 2923 21 view .LVU1010
 3223 0476 DAE5     		b	.L116
 3224              	.LVL252:
 3225              	.L179:
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3226              		.loc 1 2923 21 view .LVU1011
 3227 0478 0020     		movs	r0, #0
 3228 047a D8E5     		b	.L116
 3229              	.LVL253:
 3230              	.L183:
2923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3231              		.loc 1 2923 21 view .LVU1012
 3232 047c 0020     		movs	r0, #0
 3233 047e D6E5     		b	.L116
 3234              	.LVL254:
 3235              	.L166:
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3236              		.loc 1 2955 3 view .LVU1013
 3237 0480 0220     		movs	r0, #2
 3238              	.LVL255:
2955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3239              		.loc 1 2955 3 view .LVU1014
 3240 0482 D7E5     		b	.L114
 3241              	.L200:
 3242              		.align	2
 3243              	.L199:
 3244 0484 00000450 		.word	1342439424
 3245 0488 00030450 		.word	1342440192
 3246 048c 00000000 		.word	SystemCoreClock
 3247 0490 632D3E05 		.word	87960931
 3248              		.cfi_endproc
 3249              	.LFE1122:
 3251              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3252              		.align	1
 3253              		.global	HAL_ADC_AnalogWDGConfig
 3254              		.syntax unified
 3255              		.thumb
 3256              		.thumb_func
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 284


 3258              	HAL_ADC_AnalogWDGConfig:
 3259              	.LVL256:
 3260              	.LFB1123:
3144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3261              		.loc 1 3144 1 is_stmt 1 view -0
 3262              		.cfi_startproc
 3263              		@ args = 0, pretend = 0, frame = 0
 3264              		@ frame_needed = 0, uses_anonymous_args = 0
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3265              		.loc 1 3145 3 view .LVU1016
3146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3266              		.loc 1 3146 3 view .LVU1017
3147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 3267              		.loc 1 3147 3 view .LVU1018
3149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3268              		.loc 1 3149 3 view .LVU1019
3150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* !ADC_SUPPORT_2_5_MSPS */
 3269              		.loc 1 3150 3 view .LVU1020
3154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3270              		.loc 1 3154 3 view .LVU1021
3155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3271              		.loc 1 3155 3 view .LVU1022
3156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3272              		.loc 1 3156 3 view .LVU1023
3157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3273              		.loc 1 3157 3 view .LVU1024
3162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3274              		.loc 1 3162 3 view .LVU1025
3167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 3275              		.loc 1 3167 5 view .LVU1026
3176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 3276              		.loc 1 3176 3 view .LVU1027
3187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3277              		.loc 1 3187 5 view .LVU1028
3188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 3278              		.loc 1 3188 5 view .LVU1029
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3279              		.loc 1 3193 3 view .LVU1030
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3280              		.loc 1 3193 3 view .LVU1031
 3281 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 3282 0004 012A     		cmp	r2, #1
 3283 0006 00F0A081 		beq	.L237
3144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3284              		.loc 1 3144 1 is_stmt 0 discriminator 2 view .LVU1032
 3285 000a 30B5     		push	{r4, r5, lr}
 3286              		.cfi_def_cfa_offset 12
 3287              		.cfi_offset 4, -12
 3288              		.cfi_offset 5, -8
 3289              		.cfi_offset 14, -4
 3290 000c 0346     		mov	r3, r0
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3291              		.loc 1 3193 3 is_stmt 1 discriminator 2 view .LVU1033
 3292 000e 0122     		movs	r2, #1
 3293 0010 80F85020 		strb	r2, [r0, #80]
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3294              		.loc 1 3193 3 discriminator 2 view .LVU1034
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 285


3203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3295              		.loc 1 3203 3 discriminator 2 view .LVU1035
3203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3296              		.loc 1 3203 79 is_stmt 0 discriminator 2 view .LVU1036
 3297 0014 0468     		ldr	r4, [r0]
 3298              	.LVL257:
 3299              	.LBB620:
 3300              	.LBI620:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3301              		.loc 2 6863 26 is_stmt 1 discriminator 2 view .LVU1037
 3302              	.LBB621:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3303              		.loc 2 6865 3 discriminator 2 view .LVU1038
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3304              		.loc 2 6865 12 is_stmt 0 discriminator 2 view .LVU1039
 3305 0016 A268     		ldr	r2, [r4, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3306              		.loc 2 6865 74 discriminator 2 view .LVU1040
 3307 0018 12F00402 		ands	r2, r2, #4
 3308 001c 00D0     		beq	.L203
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3309              		.loc 2 6865 74 view .LVU1041
 3310 001e 0122     		movs	r2, #1
 3311              	.L203:
 3312              	.LVL258:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3313              		.loc 2 6865 74 view .LVU1042
 3314              	.LBE621:
 3315              	.LBE620:
3204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3316              		.loc 1 3204 3 is_stmt 1 view .LVU1043
 3317              	.LBB622:
 3318              	.LBI622:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3319              		.loc 2 7018 26 view .LVU1044
 3320              	.LBB623:
 3321              		.loc 2 7020 3 view .LVU1045
 3322              		.loc 2 7020 12 is_stmt 0 view .LVU1046
 3323 0020 A068     		ldr	r0, [r4, #8]
 3324              	.LVL259:
 3325              		.loc 2 7020 76 view .LVU1047
 3326 0022 10F00800 		ands	r0, r0, #8
 3327 0026 00D0     		beq	.L204
 3328 0028 0120     		movs	r0, #1
 3329              	.L204:
 3330              	.LVL260:
 3331              		.loc 2 7020 76 view .LVU1048
 3332              	.LBE623:
 3333              	.LBE622:
3205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3334              		.loc 1 3205 3 is_stmt 1 view .LVU1049
3205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3335              		.loc 1 3205 6 is_stmt 0 view .LVU1050
 3336 002a 002A     		cmp	r2, #0
 3337 002c 40F08481 		bne	.L205
3206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 3338              		.loc 1 3206 7 view .LVU1051
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 286


 3339 0030 0028     		cmp	r0, #0
 3340 0032 40F08181 		bne	.L205
3211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3341              		.loc 1 3211 5 is_stmt 1 view .LVU1052
3211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3342              		.loc 1 3211 24 is_stmt 0 view .LVU1053
 3343 0036 0A68     		ldr	r2, [r1]
 3344              	.LVL261:
3211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3345              		.loc 1 3211 8 view .LVU1054
 3346 0038 B748     		ldr	r0, .L251
 3347              	.LVL262:
3211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 3348              		.loc 1 3211 8 view .LVU1055
 3349 003a 8242     		cmp	r2, r0
 3350 003c 26D0     		beq	.L244
3292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3351              		.loc 1 3292 7 is_stmt 1 view .LVU1056
3292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3352              		.loc 1 3292 30 is_stmt 0 view .LVU1057
 3353 003e 4868     		ldr	r0, [r1, #4]
3292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3354              		.loc 1 3292 7 view .LVU1058
 3355 0040 B0F1A07F 		cmp	r0, #20971520
 3356 0044 00F0B980 		beq	.L218
 3357 0048 00F2B080 		bhi	.L219
 3358 004c B0F5400F 		cmp	r0, #12582912
 3359 0050 00F0B380 		beq	.L218
 3360 0054 B0F1807F 		cmp	r0, #16777216
 3361 0058 00F0E680 		beq	.L220
 3362 005c B0F5000F 		cmp	r0, #8388608
 3363 0060 00F0E280 		beq	.L220
 3364              	.L221:
3324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3365              		.loc 1 3324 11 is_stmt 1 view .LVU1059
 3366              	.LVL263:
 3367              	.LBB624:
 3368              	.LBI624:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3369              		.loc 2 5877 22 view .LVU1060
 3370              	.LBB625:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3371              		.loc 2 5891 3 view .LVU1061
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3372              		.loc 2 5891 25 is_stmt 0 view .LVU1062
 3373 0064 0C34     		adds	r4, r4, #12
 3374              	.LVL264:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3375              		.loc 2 5891 25 view .LVU1063
 3376 0066 C2F30150 		ubfx	r0, r2, #20, #2
 3377 006a 02F0010C 		and	ip, r2, #1
 3378 006e 0CEBCC0C 		add	ip, ip, ip, lsl #3
 3379 0072 00EB8C00 		add	r0, r0, ip, lsl #2
 3380              	.LVL265:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3381              		.loc 2 5894 3 is_stmt 1 view .LVU1064
 3382 0076 54F82050 		ldr	r5, [r4, r0, lsl #2]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 287


 3383 007a 22F00242 		bic	r2, r2, #-2113929216
 3384              	.LVL266:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3385              		.loc 2 5894 3 is_stmt 0 view .LVU1065
 3386 007e 22F46012 		bic	r2, r2, #3670016
 3387 0082 25EA0202 		bic	r2, r5, r2
 3388 0086 44F82020 		str	r2, [r4, r0, lsl #2]
 3389              	.LVL267:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3390              		.loc 2 5898 1 view .LVU1066
 3391 008a E5E0     		b	.L226
 3392              	.LVL268:
 3393              	.L244:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3394              		.loc 2 5898 1 view .LVU1067
 3395              	.LBE625:
 3396              	.LBE624:
3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3397              		.loc 1 3216 7 is_stmt 1 view .LVU1068
3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3398              		.loc 1 3216 30 is_stmt 0 view .LVU1069
 3399 008c 4A68     		ldr	r2, [r1, #4]
3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3400              		.loc 1 3216 7 view .LVU1070
 3401 008e B2F1A07F 		cmp	r2, #20971520
 3402 0092 68D0     		beq	.L207
 3403 0094 1AD8     		bhi	.L208
 3404 0096 B2F5400F 		cmp	r2, #12582912
 3405 009a 2AD0     		beq	.L209
 3406 009c B2F1807F 		cmp	r2, #16777216
 3407 00a0 08D1     		bne	.L245
3245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3408              		.loc 1 3245 11 is_stmt 1 view .LVU1071
 3409              	.LVL269:
 3410              	.LBB626:
 3411              	.LBI626:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3412              		.loc 2 5877 22 view .LVU1072
 3413              	.LBB627:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3414              		.loc 2 5891 3 view .LVU1073
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3415              		.loc 2 5894 3 view .LVU1074
 3416 00a2 E268     		ldr	r2, [r4, #12]
 3417 00a4 22F0FB42 		bic	r2, r2, #2105540608
 3418 00a8 22F48002 		bic	r2, r2, #4194304
 3419 00ac 42F08072 		orr	r2, r2, #16777216
 3420 00b0 E260     		str	r2, [r4, #12]
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3421              		.loc 2 5898 1 is_stmt 0 view .LVU1075
 3422 00b2 2AE0     		b	.L215
 3423              	.LVL270:
 3424              	.L245:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3425              		.loc 2 5898 1 view .LVU1076
 3426              	.LBE627:
 3427              	.LBE626:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 288


3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3428              		.loc 1 3216 7 view .LVU1077
 3429 00b4 B2F5000F 		cmp	r2, #8388608
 3430 00b8 6BD1     		bne	.L212
3238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3431              		.loc 1 3238 11 is_stmt 1 view .LVU1078
 3432              	.LVL271:
 3433              	.LBB628:
 3434              	.LBI628:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3435              		.loc 2 5877 22 view .LVU1079
 3436              	.LBB629:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3437              		.loc 2 5891 3 view .LVU1080
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3438              		.loc 2 5894 3 view .LVU1081
 3439 00ba E268     		ldr	r2, [r4, #12]
 3440 00bc 22F0FB42 		bic	r2, r2, #2105540608
 3441 00c0 22F48002 		bic	r2, r2, #4194304
 3442 00c4 42F40002 		orr	r2, r2, #8388608
 3443 00c8 E260     		str	r2, [r4, #12]
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3444              		.loc 2 5898 1 is_stmt 0 view .LVU1082
 3445 00ca 1EE0     		b	.L215
 3446              	.LVL272:
 3447              	.L208:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3448              		.loc 2 5898 1 view .LVU1083
 3449              	.LBE629:
 3450              	.LBE628:
3216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3451              		.loc 1 3216 7 view .LVU1084
 3452 00cc B2F1C07F 		cmp	r2, #25165824
 3453 00d0 56D0     		beq	.L213
 3454 00d2 B2F1E07F 		cmp	r2, #29360128
 3455 00d6 5CD1     		bne	.L212
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3456              		.loc 1 3232 11 is_stmt 1 view .LVU1085
3232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3457              		.loc 1 3232 72 is_stmt 0 view .LVU1086
 3458 00d8 8868     		ldr	r0, [r1, #8]
 3459              	.LVL273:
 3460              	.LBB630:
 3461              	.LBI630:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3462              		.loc 2 5877 22 is_stmt 1 view .LVU1087
 3463              	.LBB631:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3464              		.loc 2 5891 3 view .LVU1088
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3465              		.loc 2 5894 3 view .LVU1089
 3466 00da E268     		ldr	r2, [r4, #12]
 3467 00dc 22F0FB42 		bic	r2, r2, #2105540608
 3468 00e0 22F48002 		bic	r2, r2, #4194304
 3469 00e4 00F0F840 		and	r0, r0, #2080374784
 3470              	.LVL274:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 289


 3471              		.loc 2 5894 3 is_stmt 0 view .LVU1090
 3472 00e8 40F0E070 		orr	r0, r0, #29360128
 3473 00ec 0243     		orrs	r2, r2, r0
 3474 00ee E260     		str	r2, [r4, #12]
 3475              	.LVL275:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3476              		.loc 2 5898 1 view .LVU1091
 3477 00f0 0BE0     		b	.L215
 3478              	.LVL276:
 3479              	.L209:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3480              		.loc 2 5898 1 view .LVU1092
 3481              	.LBE631:
 3482              	.LBE630:
3219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3483              		.loc 1 3219 11 is_stmt 1 view .LVU1093
3219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3484              		.loc 1 3219 72 is_stmt 0 view .LVU1094
 3485 00f2 8868     		ldr	r0, [r1, #8]
 3486              	.LVL277:
 3487              	.LBB632:
 3488              	.LBI632:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3489              		.loc 2 5877 22 is_stmt 1 view .LVU1095
 3490              	.LBB633:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3491              		.loc 2 5891 3 view .LVU1096
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3492              		.loc 2 5894 3 view .LVU1097
 3493 00f4 E268     		ldr	r2, [r4, #12]
 3494 00f6 22F0FB42 		bic	r2, r2, #2105540608
 3495 00fa 22F48002 		bic	r2, r2, #4194304
 3496 00fe 00F0F840 		and	r0, r0, #2080374784
 3497              	.LVL278:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3498              		.loc 2 5894 3 is_stmt 0 view .LVU1098
 3499 0102 40F44000 		orr	r0, r0, #12582912
 3500 0106 0243     		orrs	r2, r2, r0
 3501 0108 E260     		str	r2, [r4, #12]
 3502              	.LVL279:
 3503              	.L215:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3504              		.loc 2 5894 3 view .LVU1099
 3505              	.LBE633:
 3506              	.LBE632:
3261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3507              		.loc 1 3261 7 is_stmt 1 view .LVU1100
3261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3508              		.loc 1 3261 36 is_stmt 0 view .LVU1101
 3509 010a 0C69     		ldr	r4, [r1, #16]
 3510 010c 1868     		ldr	r0, [r3]
 3511 010e C268     		ldr	r2, [r0, #12]
 3512 0110 C2F3C102 		ubfx	r2, r2, #3, #2
 3513 0114 5200     		lsls	r2, r2, #1
3261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3514              		.loc 1 3261 34 view .LVU1102
 3515 0116 04FA02FE 		lsl	lr, r4, r2
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 290


 3516              	.LVL280:
3262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3517              		.loc 1 3262 7 is_stmt 1 view .LVU1103
3262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3518              		.loc 1 3262 36 is_stmt 0 view .LVU1104
 3519 011a 4A69     		ldr	r2, [r1, #20]
 3520 011c C468     		ldr	r4, [r0, #12]
 3521 011e C4F3C104 		ubfx	r4, r4, #3, #2
 3522 0122 6400     		lsls	r4, r4, #1
3262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3523              		.loc 1 3262 34 view .LVU1105
 3524 0124 02FA04FC 		lsl	ip, r2, r4
 3525              	.LVL281:
3265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3526              		.loc 1 3265 7 is_stmt 1 view .LVU1106
3265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3527              		.loc 1 3265 70 is_stmt 0 view .LVU1107
 3528 0128 0A68     		ldr	r2, [r1]
 3529              	.LVL282:
 3530              	.LBB634:
 3531              	.LBI634:
6166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 3532              		.loc 2 6166 22 is_stmt 1 view .LVU1108
 3533              	.LBB635:
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3534              		.loc 2 6182 3 view .LVU1109
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3535              		.loc 2 6182 25 is_stmt 0 view .LVU1110
 3536 012a 2030     		adds	r0, r0, #32
 3537              	.LVL283:
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3538              		.loc 2 6182 25 view .LVU1111
 3539 012c 120D     		lsrs	r2, r2, #20
 3540              	.LVL284:
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3541              		.loc 2 6182 25 view .LVU1112
 3542 012e 9200     		lsls	r2, r2, #2
 3543 0130 02F00C02 		and	r2, r2, #12
 3544              	.LVL285:
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3545              		.loc 2 6184 3 is_stmt 1 view .LVU1113
 3546 0134 8458     		ldr	r4, [r0, r2]
 3547 0136 04F0F024 		and	r4, r4, #-268374016
 3548 013a 4CEA0E4C 		orr	ip, ip, lr, lsl #16
 3549              	.LVL286:
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3550              		.loc 2 6184 3 is_stmt 0 view .LVU1114
 3551 013e 44EA0C04 		orr	r4, r4, ip
 3552 0142 8450     		str	r4, [r0, r2]
 3553              	.LVL287:
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3554              		.loc 2 6184 3 view .LVU1115
 3555              	.LBE635:
 3556              	.LBE634:
3268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3557              		.loc 1 3268 7 is_stmt 1 view .LVU1116
 3558 0144 5A6D     		ldr	r2, [r3, #84]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 291


 3559 0146 22F48032 		bic	r2, r2, #65536
 3560 014a 5A65     		str	r2, [r3, #84]
3274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3561              		.loc 1 3274 7 view .LVU1117
 3562 014c 1A68     		ldr	r2, [r3]
 3563              	.LVL288:
 3564              	.LBB636:
 3565              	.LBI636:
7021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
7030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all oversampling increased data width (for devices
7038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with feature oversampling).
7039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(const ADC_TypeDef *ADCx, uint32_t Rank)
7052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_JDR1_JDATA)
7057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
7058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 12 bits.
7063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 292


7070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(const ADC_TypeDef *ADCx, uint32_t Rank)
7079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_JDR1_JDATA)
7084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
7085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 10 bits.
7090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(const ADC_TypeDef *ADCx, uint32_t Rank)
7106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_JDR1_JDATA)
7111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
7112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 8 bits.
7117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 293


7127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(const ADC_TypeDef *ADCx, uint32_t Rank)
7133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                             ADC_JDR1_JDATA)
7138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   );
7139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 6 bits.
7144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
7146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
7150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(const ADC_TypeDef *ADCx, uint32_t Rank)
7160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                             ADC_JDR1_JDATA)
7165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   );
7166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
7170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
7175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC ready.
7179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 294


7184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
7187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
7194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
7195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
7196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         has been changed.
7197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
7198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(const ADC_TypeDef *ADCx)
7202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
7204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
7215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(const ADC_TypeDef *ADCx)
7226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(const ADC_TypeDef *ADCx)
7237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 295


7241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(const ADC_TypeDef *ADCx)
7248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(const ADC_TypeDef *ADCx)
7262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(const ADC_TypeDef *ADCx)
7273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(const ADC_TypeDef *ADCx)
7284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(const ADC_TypeDef *ADCx)
7296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 296


7298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(const ADC_TypeDef *ADCx)
7307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(const ADC_TypeDef *ADCx)
7318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
7325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
7326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(const ADC_TypeDef *ADCx)
7330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
7332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
7352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
7353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 297


7355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
7357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
7359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 298


7412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3566              		.loc 2 7450 22 view .LVU1118
 3567              	.LBB637:
7451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3568              		.loc 2 7452 3 view .LVU1119
 3569 014e 8020     		movs	r0, #128
 3570 0150 1060     		str	r0, [r2]
 3571              	.LVL289:
 3572              		.loc 2 7452 3 is_stmt 0 view .LVU1120
 3573              	.LBE637:
 3574              	.LBE636:
3277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3575              		.loc 1 3277 7 is_stmt 1 view .LVU1121
3277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3576              		.loc 1 3277 26 is_stmt 0 view .LVU1122
 3577 0152 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3578              		.loc 1 3277 10 view .LVU1123
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 299


 3579 0154 012A     		cmp	r2, #1
 3580 0156 23D0     		beq	.L246
3283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 3581              		.loc 1 3283 9 is_stmt 1 view .LVU1124
 3582 0158 1968     		ldr	r1, [r3]
 3583              	.LVL290:
 3584              	.LBB638:
 3585              	.LBI638:
7453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
7480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
7481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
7485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
7487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
7492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
7496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC ready.
7500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 300


7502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
7512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_CCRDY
7513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
7517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
7519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 301


7559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 302


7616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
7640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
7641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
7645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
7647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
7662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
7664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_CCRDY
7665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval State of bit (1 or 0).
7667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
7669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
7671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 303


7673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
7720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
7721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
7722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 304


7730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
7756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 3586              		.loc 2 7762 22 view .LVU1125
 3587              	.LBB639:
7763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3588              		.loc 2 7764 3 view .LVU1126
 3589 015a 4A68     		ldr	r2, [r1, #4]
 3590 015c 22F08002 		bic	r2, r2, #128
 3591 0160 4A60     		str	r2, [r1, #4]
 3592              	.LBE639:
 3593              	.LBE638:
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3594              		.loc 1 3145 21 is_stmt 0 view .LVU1127
 3595 0162 0020     		movs	r0, #0
 3596              	.LBB641:
 3597              	.LBB640:
7765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3598              		.loc 2 7765 1 view .LVU1128
 3599 0164 EDE0     		b	.L217
 3600              	.LVL291:
 3601              	.L207:
 3602              		.loc 2 7765 1 view .LVU1129
 3603              	.LBE640:
 3604              	.LBE641:
3227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 305


 3605              		.loc 1 3227 11 is_stmt 1 view .LVU1130
3227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3606              		.loc 1 3227 72 is_stmt 0 view .LVU1131
 3607 0166 8868     		ldr	r0, [r1, #8]
 3608              	.LVL292:
 3609              	.LBB642:
 3610              	.LBI642:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3611              		.loc 2 5877 22 is_stmt 1 view .LVU1132
 3612              	.LBB643:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3613              		.loc 2 5891 3 view .LVU1133
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3614              		.loc 2 5894 3 view .LVU1134
 3615 0168 E268     		ldr	r2, [r4, #12]
 3616 016a 22F0FB42 		bic	r2, r2, #2105540608
 3617 016e 22F48002 		bic	r2, r2, #4194304
 3618 0172 00F0F840 		and	r0, r0, #2080374784
 3619              	.LVL293:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3620              		.loc 2 5894 3 is_stmt 0 view .LVU1135
 3621 0176 40F0A070 		orr	r0, r0, #20971520
 3622 017a 0243     		orrs	r2, r2, r0
 3623 017c E260     		str	r2, [r4, #12]
 3624              	.LVL294:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3625              		.loc 2 5898 1 view .LVU1136
 3626 017e C4E7     		b	.L215
 3627              	.LVL295:
 3628              	.L213:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3629              		.loc 2 5898 1 view .LVU1137
 3630              	.LBE643:
 3631              	.LBE642:
3249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3632              		.loc 1 3249 11 is_stmt 1 view .LVU1138
 3633              	.LBB644:
 3634              	.LBI644:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3635              		.loc 2 5877 22 view .LVU1139
 3636              	.LBB645:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3637              		.loc 2 5891 3 view .LVU1140
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3638              		.loc 2 5894 3 view .LVU1141
 3639 0180 E268     		ldr	r2, [r4, #12]
 3640 0182 22F0FB42 		bic	r2, r2, #2105540608
 3641 0186 22F48002 		bic	r2, r2, #4194304
 3642 018a 42F0C072 		orr	r2, r2, #25165824
 3643 018e E260     		str	r2, [r4, #12]
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3644              		.loc 2 5898 1 is_stmt 0 view .LVU1142
 3645 0190 BBE7     		b	.L215
 3646              	.LVL296:
 3647              	.L212:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3648              		.loc 2 5898 1 view .LVU1143
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 306


 3649              	.LBE645:
 3650              	.LBE644:
3254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 3651              		.loc 1 3254 11 is_stmt 1 view .LVU1144
 3652              	.LBB646:
 3653              	.LBI646:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3654              		.loc 2 5877 22 view .LVU1145
 3655              	.LBB647:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3656              		.loc 2 5891 3 view .LVU1146
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3657              		.loc 2 5894 3 view .LVU1147
 3658 0192 E268     		ldr	r2, [r4, #12]
 3659 0194 22F0FB42 		bic	r2, r2, #2105540608
 3660 0198 22F48002 		bic	r2, r2, #4194304
 3661 019c E260     		str	r2, [r4, #12]
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3662              		.loc 2 5898 1 is_stmt 0 view .LVU1148
 3663 019e B4E7     		b	.L215
 3664              	.LVL297:
 3665              	.L246:
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3666              		.loc 2 5898 1 view .LVU1149
 3667              	.LBE647:
 3668              	.LBE646:
3279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 3669              		.loc 1 3279 9 is_stmt 1 view .LVU1150
 3670 01a0 1968     		ldr	r1, [r3]
 3671              	.LVL298:
 3672              	.LBB648:
 3673              	.LBI648:
7610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3674              		.loc 2 7610 22 view .LVU1151
 3675              	.LBB649:
7612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3676              		.loc 2 7612 3 view .LVU1152
 3677 01a2 4A68     		ldr	r2, [r1, #4]
 3678 01a4 0243     		orrs	r2, r2, r0
 3679 01a6 4A60     		str	r2, [r1, #4]
 3680              	.LBE649:
 3681              	.LBE648:
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3682              		.loc 1 3145 21 is_stmt 0 view .LVU1153
 3683 01a8 0020     		movs	r0, #0
 3684              	.LBB651:
 3685              	.LBB650:
7613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3686              		.loc 2 7613 1 view .LVU1154
 3687 01aa CAE0     		b	.L217
 3688              	.LVL299:
 3689              	.L219:
7613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3690              		.loc 2 7613 1 view .LVU1155
 3691              	.LBE650:
 3692              	.LBE651:
3292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 307


 3693              		.loc 1 3292 7 view .LVU1156
 3694 01ac B0F1C07F 		cmp	r0, #25165824
 3695 01b0 3AD0     		beq	.L220
 3696 01b2 B0F1E07F 		cmp	r0, #29360128
 3697 01b6 7FF455AF 		bne	.L221
 3698              	.L218:
3301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3699              		.loc 1 3301 11 is_stmt 1 view .LVU1157
3301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           {
 3700              		.loc 1 3301 14 is_stmt 0 view .LVU1158
 3701 01ba 5848     		ldr	r0, .L251+4
 3702 01bc 8242     		cmp	r2, r0
 3703 01be 0DD0     		beq	.L247
3307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3704              		.loc 1 3307 13 is_stmt 1 view .LVU1159
 3705 01c0 8A68     		ldr	r2, [r1, #8]
 3706 01c2 C2F31200 		ubfx	r0, r2, #0, #19
 3707 01c6 18BB     		cbnz	r0, .L227
3307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3708              		.loc 1 3307 13 is_stmt 0 discriminator 1 view .LVU1160
 3709 01c8 C2F38462 		ubfx	r2, r2, #26, #5
 3710 01cc 0120     		movs	r0, #1
 3711 01ce 9040     		lsls	r0, r0, r2
 3712              	.L228:
3307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3713              		.loc 1 3307 13 discriminator 4 view .LVU1161
 3714 01d0 D4F8A420 		ldr	r2, [r4, #164]
 3715 01d4 0243     		orrs	r2, r2, r0
 3716 01d6 C4F8A420 		str	r2, [r4, #164]
 3717 01da 3DE0     		b	.L226
 3718              	.L247:
3303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3719              		.loc 1 3303 13 is_stmt 1 view .LVU1162
 3720 01dc 8A68     		ldr	r2, [r1, #8]
 3721 01de C2F31200 		ubfx	r0, r2, #0, #19
 3722 01e2 48B9     		cbnz	r0, .L223
3303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3723              		.loc 1 3303 13 is_stmt 0 discriminator 1 view .LVU1163
 3724 01e4 C2F38462 		ubfx	r2, r2, #26, #5
 3725 01e8 0120     		movs	r0, #1
 3726 01ea 9040     		lsls	r0, r0, r2
 3727              	.L224:
3303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3728              		.loc 1 3303 13 discriminator 4 view .LVU1164
 3729 01ec D4F8A020 		ldr	r2, [r4, #160]
 3730 01f0 0243     		orrs	r2, r2, r0
 3731 01f2 C4F8A020 		str	r2, [r4, #160]
 3732 01f6 2FE0     		b	.L226
 3733              	.L223:
 3734              	.LVL300:
 3735              	.LBB652:
 3736              	.LBI652:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3737              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1165
 3738              	.LBB653:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3739              		.loc 3 1050 3 discriminator 2 view .LVU1166
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 308


1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3740              		.loc 3 1055 4 discriminator 2 view .LVU1167
 3741              		.syntax unified
 3742              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3743 01f8 92FAA2F2 		rbit r2, r2
 3744              	@ 0 "" 2
 3745              	.LVL301:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3746              		.loc 3 1068 3 discriminator 2 view .LVU1168
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3747              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1169
 3748              		.thumb
 3749              		.syntax unified
 3750              	.LBE653:
 3751              	.LBE652:
 3752              	.LBB654:
 3753              	.LBI654:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3754              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1170
 3755              	.LBB655:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3756              		.loc 3 1089 3 discriminator 2 view .LVU1171
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3757              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1172
 3758 01fc 32B1     		cbz	r2, .L238
 3759              		.loc 3 1093 3 is_stmt 1 view .LVU1173
 3760              		.loc 3 1093 10 is_stmt 0 view .LVU1174
 3761 01fe B2FA82F2 		clz	r2, r2
 3762              	.LVL302:
 3763              	.L225:
 3764              		.loc 3 1093 10 view .LVU1175
 3765              	.LBE655:
 3766              	.LBE654:
3303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3767              		.loc 1 3303 13 view .LVU1176
 3768 0202 02F01F02 		and	r2, r2, #31
 3769 0206 0120     		movs	r0, #1
 3770 0208 9040     		lsls	r0, r0, r2
 3771 020a EFE7     		b	.L224
 3772              	.LVL303:
 3773              	.L238:
 3774              	.LBB657:
 3775              	.LBB656:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3776              		.loc 3 1091 12 view .LVU1177
 3777 020c 2022     		movs	r2, #32
 3778              	.LVL304:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3779              		.loc 3 1091 12 view .LVU1178
 3780 020e F8E7     		b	.L225
 3781              	.L227:
 3782              	.LVL305:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3783              		.loc 3 1091 12 view .LVU1179
 3784              	.LBE656:
 3785              	.LBE657:
 3786              	.LBB658:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 309


 3787              	.LBI658:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3788              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1180
 3789              	.LBB659:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3790              		.loc 3 1050 3 discriminator 2 view .LVU1181
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3791              		.loc 3 1055 4 discriminator 2 view .LVU1182
 3792              		.syntax unified
 3793              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3794 0210 92FAA2F2 		rbit r2, r2
 3795              	@ 0 "" 2
 3796              	.LVL306:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3797              		.loc 3 1068 3 discriminator 2 view .LVU1183
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3798              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1184
 3799              		.thumb
 3800              		.syntax unified
 3801              	.LBE659:
 3802              	.LBE658:
 3803              	.LBB660:
 3804              	.LBI660:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3805              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1185
 3806              	.LBB661:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3807              		.loc 3 1089 3 discriminator 2 view .LVU1186
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3808              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1187
 3809 0214 32B1     		cbz	r2, .L239
 3810              		.loc 3 1093 3 is_stmt 1 view .LVU1188
 3811              		.loc 3 1093 10 is_stmt 0 view .LVU1189
 3812 0216 B2FA82F2 		clz	r2, r2
 3813              	.LVL307:
 3814              	.L229:
 3815              		.loc 3 1093 10 view .LVU1190
 3816              	.LBE661:
 3817              	.LBE660:
3307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           }
 3818              		.loc 1 3307 13 view .LVU1191
 3819 021a 02F01F02 		and	r2, r2, #31
 3820 021e 0120     		movs	r0, #1
 3821 0220 9040     		lsls	r0, r0, r2
 3822 0222 D5E7     		b	.L228
 3823              	.LVL308:
 3824              	.L239:
 3825              	.LBB663:
 3826              	.LBB662:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3827              		.loc 3 1091 12 view .LVU1192
 3828 0224 2022     		movs	r2, #32
 3829              	.LVL309:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3830              		.loc 3 1091 12 view .LVU1193
 3831 0226 F8E7     		b	.L229
 3832              	.L220:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 310


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3833              		.loc 3 1091 12 view .LVU1194
 3834              	.LBE662:
 3835              	.LBE663:
3319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 3836              		.loc 1 3319 11 is_stmt 1 view .LVU1195
 3837              	.LVL310:
 3838              	.LBB664:
 3839              	.LBI664:
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3840              		.loc 2 5877 22 view .LVU1196
 3841              	.LBB665:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3842              		.loc 2 5891 3 view .LVU1197
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3843              		.loc 2 5891 25 is_stmt 0 view .LVU1198
 3844 0228 0C34     		adds	r4, r4, #12
 3845              	.LVL311:
5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3846              		.loc 2 5891 25 view .LVU1199
 3847 022a C2F3015C 		ubfx	ip, r2, #20, #2
 3848 022e 02F00100 		and	r0, r2, #1
 3849 0232 00EBC000 		add	r0, r0, r0, lsl #3
 3850 0236 0CEB800C 		add	ip, ip, r0, lsl #2
 3851              	.LVL312:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3852              		.loc 2 5894 3 is_stmt 1 view .LVU1200
 3853 023a 54F82C00 		ldr	r0, [r4, ip, lsl #2]
 3854 023e 22F00245 		bic	r5, r2, #-2113929216
 3855 0242 25F46015 		bic	r5, r5, #3670016
 3856 0246 20EA0500 		bic	r0, r0, r5
 3857 024a 22F07E42 		bic	r2, r2, #-33554432
 3858              	.LVL313:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3859              		.loc 2 5894 3 is_stmt 0 view .LVU1201
 3860 024e 22F4F002 		bic	r2, r2, #7864320
 3861 0252 0243     		orrs	r2, r2, r0
 3862 0254 44F82C20 		str	r2, [r4, ip, lsl #2]
 3863              	.LVL314:
 3864              	.L226:
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3865              		.loc 2 5894 3 view .LVU1202
 3866              	.LBE665:
 3867              	.LBE664:
3330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3868              		.loc 1 3330 7 is_stmt 1 view .LVU1203
3330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3869              		.loc 1 3330 36 is_stmt 0 view .LVU1204
 3870 0258 1868     		ldr	r0, [r3]
 3871 025a C268     		ldr	r2, [r0, #12]
 3872 025c 02F01802 		and	r2, r2, #24
 3873 0260 182A     		cmp	r2, #24
 3874 0262 3ED0     		beq	.L230
3330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3875              		.loc 1 3330 36 discriminator 1 view .LVU1205
 3876 0264 0C69     		ldr	r4, [r1, #16]
 3877 0266 C268     		ldr	r2, [r0, #12]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 311


 3878 0268 C2F3C102 		ubfx	r2, r2, #3, #2
 3879 026c C2F10202 		rsb	r2, r2, #2
 3880 0270 5200     		lsls	r2, r2, #1
 3881 0272 02F01E02 		and	r2, r2, #30
 3882 0276 24FA02FC 		lsr	ip, r4, r2
 3883              	.L231:
 3884              	.LVL315:
3331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3885              		.loc 1 3331 7 is_stmt 1 discriminator 4 view .LVU1206
3331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3886              		.loc 1 3331 36 is_stmt 0 discriminator 4 view .LVU1207
 3887 027a C268     		ldr	r2, [r0, #12]
 3888 027c 02F01802 		and	r2, r2, #24
 3889 0280 182A     		cmp	r2, #24
 3890 0282 32D0     		beq	.L232
3331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3891              		.loc 1 3331 36 discriminator 1 view .LVU1208
 3892 0284 4C69     		ldr	r4, [r1, #20]
 3893 0286 C268     		ldr	r2, [r0, #12]
 3894 0288 C2F3C102 		ubfx	r2, r2, #3, #2
 3895 028c C2F10202 		rsb	r2, r2, #2
 3896 0290 5200     		lsls	r2, r2, #1
 3897 0292 02F01E02 		and	r2, r2, #30
 3898 0296 24FA02FE 		lsr	lr, r4, r2
 3899              	.L233:
 3900              	.LVL316:
3334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3901              		.loc 1 3334 7 is_stmt 1 discriminator 4 view .LVU1209
3334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3902              		.loc 1 3334 70 is_stmt 0 discriminator 4 view .LVU1210
 3903 029a 0A68     		ldr	r2, [r1]
 3904              	.LVL317:
 3905              	.LBB666:
 3906              	.LBI666:
6166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 3907              		.loc 2 6166 22 is_stmt 1 discriminator 4 view .LVU1211
 3908              	.LBB667:
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3909              		.loc 2 6182 3 discriminator 4 view .LVU1212
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3910              		.loc 2 6182 25 is_stmt 0 discriminator 4 view .LVU1213
 3911 029c 2030     		adds	r0, r0, #32
 3912              	.LVL318:
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3913              		.loc 2 6182 25 discriminator 4 view .LVU1214
 3914 029e 120D     		lsrs	r2, r2, #20
 3915              	.LVL319:
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3916              		.loc 2 6182 25 discriminator 4 view .LVU1215
 3917 02a0 9200     		lsls	r2, r2, #2
 3918 02a2 02F00C02 		and	r2, r2, #12
 3919              	.LVL320:
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3920              		.loc 2 6184 3 is_stmt 1 discriminator 4 view .LVU1216
 3921 02a6 8458     		ldr	r4, [r0, r2]
 3922 02a8 04F0F024 		and	r4, r4, #-268374016
 3923 02ac 4EEA0C4C 		orr	ip, lr, ip, lsl #16
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 312


 3924              	.LVL321:
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3925              		.loc 2 6184 3 is_stmt 0 discriminator 4 view .LVU1217
 3926 02b0 44EA0C04 		orr	r4, r4, ip
 3927 02b4 8450     		str	r4, [r0, r2]
 3928              	.LVL322:
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3929              		.loc 2 6184 3 discriminator 4 view .LVU1218
 3930              	.LBE667:
 3931              	.LBE666:
3336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3932              		.loc 1 3336 7 is_stmt 1 discriminator 4 view .LVU1219
3336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3933              		.loc 1 3336 26 is_stmt 0 discriminator 4 view .LVU1220
 3934 02b6 0868     		ldr	r0, [r1]
3336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 3935              		.loc 1 3336 10 discriminator 4 view .LVU1221
 3936 02b8 184A     		ldr	r2, .L251+4
 3937 02ba 9042     		cmp	r0, r2
 3938 02bc 19D0     		beq	.L248
3361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3939              		.loc 1 3361 9 is_stmt 1 view .LVU1222
 3940 02be 5A6D     		ldr	r2, [r3, #84]
 3941 02c0 22F48022 		bic	r2, r2, #262144
 3942 02c4 5A65     		str	r2, [r3, #84]
3367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3943              		.loc 1 3367 9 view .LVU1223
 3944 02c6 1A68     		ldr	r2, [r3]
 3945              	.LVL323:
 3946              	.LBB668:
 3947              	.LBI668:
7472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3948              		.loc 2 7472 22 view .LVU1224
 3949              	.LBB669:
7474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3950              		.loc 2 7474 3 view .LVU1225
 3951 02c8 4FF40070 		mov	r0, #512
 3952 02cc 1060     		str	r0, [r2]
 3953              	.LVL324:
7474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3954              		.loc 2 7474 3 is_stmt 0 view .LVU1226
 3955              	.LBE669:
 3956              	.LBE668:
3370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 3957              		.loc 1 3370 9 is_stmt 1 view .LVU1227
3370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 3958              		.loc 1 3370 28 is_stmt 0 view .LVU1228
 3959 02ce 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 3960              		.loc 1 3370 12 view .LVU1229
 3961 02d0 012A     		cmp	r2, #1
 3962 02d2 2BD0     		beq	.L249
3376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 3963              		.loc 1 3376 11 is_stmt 1 view .LVU1230
 3964 02d4 1968     		ldr	r1, [r3]
 3965              	.LVL325:
 3966              	.LBB670:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 313


 3967              	.LBI670:
7766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 3968              		.loc 2 7784 22 view .LVU1231
 3969              	.LBB671:
7785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 3970              		.loc 2 7786 3 view .LVU1232
 3971 02d6 4A68     		ldr	r2, [r1, #4]
 3972 02d8 22F40072 		bic	r2, r2, #512
 3973 02dc 4A60     		str	r2, [r1, #4]
 3974              	.LBE671:
 3975              	.LBE670:
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3976              		.loc 1 3145 21 is_stmt 0 view .LVU1233
 3977 02de 0020     		movs	r0, #0
 3978              	.LBB673:
 3979              	.LBB672:
7787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3980              		.loc 2 7787 1 view .LVU1234
 3981 02e0 2FE0     		b	.L217
 3982              	.LVL326:
 3983              	.L230:
 3984              		.loc 2 7787 1 view .LVU1235
 3985              	.LBE672:
 3986              	.LBE673:
3330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3987              		.loc 1 3330 36 discriminator 2 view .LVU1236
 3988 02e2 0A69     		ldr	r2, [r1, #16]
 3989 02e4 4FEA820C 		lsl	ip, r2, #2
 3990 02e8 C7E7     		b	.L231
 3991              	.LVL327:
 3992              	.L232:
3331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3993              		.loc 1 3331 36 discriminator 2 view .LVU1237
 3994 02ea 4C69     		ldr	r4, [r1, #20]
 3995 02ec 4FEA840E 		lsl	lr, r4, #2
 3996 02f0 D3E7     		b	.L233
 3997              	.LVL328:
 3998              	.L248:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 314


3339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 3999              		.loc 1 3339 9 is_stmt 1 view .LVU1238
 4000 02f2 5A6D     		ldr	r2, [r3, #84]
 4001 02f4 22F40032 		bic	r2, r2, #131072
 4002 02f8 5A65     		str	r2, [r3, #84]
3345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4003              		.loc 1 3345 9 view .LVU1239
 4004 02fa 1A68     		ldr	r2, [r3]
 4005              	.LVL329:
 4006              	.LBB674:
 4007              	.LBI674:
7461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4008              		.loc 2 7461 22 view .LVU1240
 4009              	.LBB675:
7463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4010              		.loc 2 7463 3 view .LVU1241
 4011 02fc 4FF48070 		mov	r0, #256
 4012 0300 1060     		str	r0, [r2]
 4013              	.LVL330:
7463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4014              		.loc 2 7463 3 is_stmt 0 view .LVU1242
 4015              	.LBE675:
 4016              	.LBE674:
3348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4017              		.loc 1 3348 9 is_stmt 1 view .LVU1243
3348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4018              		.loc 1 3348 28 is_stmt 0 view .LVU1244
 4019 0302 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
3348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4020              		.loc 1 3348 12 view .LVU1245
 4021 0304 012A     		cmp	r2, #1
 4022 0306 0BD0     		beq	.L250
3354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4023              		.loc 1 3354 11 is_stmt 1 view .LVU1246
 4024 0308 1968     		ldr	r1, [r3]
 4025              	.LVL331:
 4026              	.LBB676:
 4027              	.LBI676:
7773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4028              		.loc 2 7773 22 view .LVU1247
 4029              	.LBB677:
7775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4030              		.loc 2 7775 3 view .LVU1248
 4031 030a 4A68     		ldr	r2, [r1, #4]
 4032 030c 22F48072 		bic	r2, r2, #256
 4033 0310 4A60     		str	r2, [r1, #4]
 4034              	.LBE677:
 4035              	.LBE676:
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4036              		.loc 1 3145 21 is_stmt 0 view .LVU1249
 4037 0312 0020     		movs	r0, #0
 4038              	.LBB679:
 4039              	.LBB678:
7776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4040              		.loc 2 7776 1 view .LVU1250
 4041 0314 15E0     		b	.L217
 4042              	.L252:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 315


 4043 0316 00BF     		.align	2
 4044              	.L251:
 4045 0318 0000C07D 		.word	2109734912
 4046 031c FFFF1700 		.word	1572863
 4047              	.LVL332:
 4048              	.L250:
7776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4049              		.loc 2 7776 1 view .LVU1251
 4050              	.LBE678:
 4051              	.LBE679:
3350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4052              		.loc 1 3350 11 is_stmt 1 view .LVU1252
 4053 0320 1968     		ldr	r1, [r3]
 4054              	.LVL333:
 4055              	.LBB680:
 4056              	.LBI680:
7621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4057              		.loc 2 7621 22 view .LVU1253
 4058              	.LBB681:
7623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4059              		.loc 2 7623 3 view .LVU1254
 4060 0322 4A68     		ldr	r2, [r1, #4]
 4061 0324 0243     		orrs	r2, r2, r0
 4062 0326 4A60     		str	r2, [r1, #4]
 4063              	.LBE681:
 4064              	.LBE680:
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4065              		.loc 1 3145 21 is_stmt 0 view .LVU1255
 4066 0328 0020     		movs	r0, #0
 4067              	.LBB683:
 4068              	.LBB682:
7624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4069              		.loc 2 7624 1 view .LVU1256
 4070 032a 0AE0     		b	.L217
 4071              	.LVL334:
 4072              	.L249:
7624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4073              		.loc 2 7624 1 view .LVU1257
 4074              	.LBE682:
 4075              	.LBE683:
3372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4076              		.loc 1 3372 11 is_stmt 1 view .LVU1258
 4077 032c 1968     		ldr	r1, [r3]
 4078              	.LVL335:
 4079              	.LBB684:
 4080              	.LBI684:
7632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4081              		.loc 2 7632 22 view .LVU1259
 4082              	.LBB685:
7634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4083              		.loc 2 7634 3 view .LVU1260
 4084 032e 4A68     		ldr	r2, [r1, #4]
 4085 0330 0243     		orrs	r2, r2, r0
 4086 0332 4A60     		str	r2, [r1, #4]
 4087              	.LBE685:
 4088              	.LBE684:
3145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 316


 4089              		.loc 1 3145 21 is_stmt 0 view .LVU1261
 4090 0334 0020     		movs	r0, #0
 4091              	.LBB687:
 4092              	.LBB686:
7635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4093              		.loc 2 7635 1 view .LVU1262
 4094 0336 04E0     		b	.L217
 4095              	.LVL336:
 4096              	.L205:
7635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4097              		.loc 2 7635 1 view .LVU1263
 4098              	.LBE686:
 4099              	.LBE687:
3388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4100              		.loc 1 3388 5 is_stmt 1 view .LVU1264
 4101 0338 5A6D     		ldr	r2, [r3, #84]
 4102              	.LVL337:
3388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4103              		.loc 1 3388 5 is_stmt 0 view .LVU1265
 4104 033a 42F02002 		orr	r2, r2, #32
 4105 033e 5A65     		str	r2, [r3, #84]
3390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 4106              		.loc 1 3390 5 is_stmt 1 view .LVU1266
 4107              	.LVL338:
3390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 4108              		.loc 1 3390 20 is_stmt 0 view .LVU1267
 4109 0340 0120     		movs	r0, #1
 4110              	.LVL339:
 4111              	.L217:
3393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4112              		.loc 1 3393 3 is_stmt 1 view .LVU1268
3393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4113              		.loc 1 3393 3 view .LVU1269
 4114 0342 0022     		movs	r2, #0
 4115 0344 83F85020 		strb	r2, [r3, #80]
3393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4116              		.loc 1 3393 3 view .LVU1270
3396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4117              		.loc 1 3396 3 view .LVU1271
3397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4118              		.loc 1 3397 1 is_stmt 0 view .LVU1272
 4119 0348 30BD     		pop	{r4, r5, pc}
 4120              	.LVL340:
 4121              	.L237:
 4122              		.cfi_def_cfa_offset 0
 4123              		.cfi_restore 4
 4124              		.cfi_restore 5
 4125              		.cfi_restore 14
3193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4126              		.loc 1 3193 3 view .LVU1273
 4127 034a 0220     		movs	r0, #2
 4128              	.LVL341:
3397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4129              		.loc 1 3397 1 view .LVU1274
 4130 034c 7047     		bx	lr
 4131              		.cfi_endproc
 4132              	.LFE1123:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 317


 4134 034e 00BF     		.section	.text.HAL_ADC_GetState,"ax",%progbits
 4135              		.align	1
 4136              		.global	HAL_ADC_GetState
 4137              		.syntax unified
 4138              		.thumb
 4139              		.thumb_func
 4141              	HAL_ADC_GetState:
 4142              	.LVL342:
 4143              	.LFB1124:
3432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 4144              		.loc 1 3432 1 is_stmt 1 view -0
 4145              		.cfi_startproc
 4146              		@ args = 0, pretend = 0, frame = 0
 4147              		@ frame_needed = 0, uses_anonymous_args = 0
 4148              		@ link register save eliminated.
3434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4149              		.loc 1 3434 3 view .LVU1276
3437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4150              		.loc 1 3437 3 view .LVU1277
3437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4151              		.loc 1 3437 14 is_stmt 0 view .LVU1278
 4152 0000 406D     		ldr	r0, [r0, #84]
 4153              	.LVL343:
3438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4154              		.loc 1 3438 1 view .LVU1279
 4155 0002 7047     		bx	lr
 4156              		.cfi_endproc
 4157              	.LFE1124:
 4159              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4160              		.align	1
 4161              		.global	HAL_ADC_GetError
 4162              		.syntax unified
 4163              		.thumb
 4164              		.thumb_func
 4166              	HAL_ADC_GetError:
 4167              	.LVL344:
 4168              	.LFB1125:
3446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Check the parameters */
 4169              		.loc 1 3446 1 is_stmt 1 view -0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 0
 4172              		@ frame_needed = 0, uses_anonymous_args = 0
 4173              		@ link register save eliminated.
3448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4174              		.loc 1 3448 3 view .LVU1281
3450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4175              		.loc 1 3450 3 view .LVU1282
3450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4176              		.loc 1 3450 14 is_stmt 0 view .LVU1283
 4177 0000 806D     		ldr	r0, [r0, #88]
 4178              	.LVL345:
3451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4179              		.loc 1 3451 1 view .LVU1284
 4180 0002 7047     		bx	lr
 4181              		.cfi_endproc
 4182              	.LFE1125:
 4184              		.section	.text.ADC_ConversionStop,"ax",%progbits
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 318


 4185              		.align	1
 4186              		.global	ADC_ConversionStop
 4187              		.syntax unified
 4188              		.thumb
 4189              		.thumb_func
 4191              	ADC_ConversionStop:
 4192              	.LVL346:
 4193              	.LFB1126:
3478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 4194              		.loc 1 3478 1 is_stmt 1 view -0
 4195              		.cfi_startproc
 4196              		@ args = 0, pretend = 0, frame = 0
 4197              		@ frame_needed = 0, uses_anonymous_args = 0
3478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 4198              		.loc 1 3478 1 is_stmt 0 view .LVU1286
 4199 0000 70B5     		push	{r4, r5, r6, lr}
 4200              		.cfi_def_cfa_offset 16
 4201              		.cfi_offset 4, -16
 4202              		.cfi_offset 5, -12
 4203              		.cfi_offset 6, -8
 4204              		.cfi_offset 14, -4
 4205 0002 0446     		mov	r4, r0
3519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 4206              		.loc 1 3519 3 is_stmt 1 view .LVU1287
3520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4207              		.loc 1 3520 3 view .LVU1288
 4208              	.LVL347:
3521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 4209              		.loc 1 3521 3 view .LVU1289
3522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 4210              		.loc 1 3522 3 view .LVU1290
3523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 4211              		.loc 1 3523 3 view .LVU1291
3524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4212              		.loc 1 3524 3 view .LVU1292
3527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4213              		.loc 1 3527 3 view .LVU1293
3528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4214              		.loc 1 3528 3 view .LVU1294
3532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4215              		.loc 1 3532 3 view .LVU1295
3532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4216              		.loc 1 3532 79 is_stmt 0 view .LVU1296
 4217 0004 0368     		ldr	r3, [r0]
 4218              	.LVL348:
 4219              	.LBB688:
 4220              	.LBI688:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4221              		.loc 2 6863 26 is_stmt 1 view .LVU1297
 4222              	.LBB689:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4223              		.loc 2 6865 3 view .LVU1298
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4224              		.loc 2 6865 12 is_stmt 0 view .LVU1299
 4225 0006 9A68     		ldr	r2, [r3, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4226              		.loc 2 6865 74 view .LVU1300
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 319


 4227 0008 12F00402 		ands	r2, r2, #4
 4228 000c 00D0     		beq	.L256
 4229 000e 0122     		movs	r2, #1
 4230              	.L256:
 4231              	.LVL349:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4232              		.loc 2 6865 74 view .LVU1301
 4233              	.LBE689:
 4234              	.LBE688:
3533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4235              		.loc 1 3533 3 is_stmt 1 view .LVU1302
 4236              	.LBB690:
 4237              	.LBI690:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4238              		.loc 2 7018 26 view .LVU1303
 4239              	.LBB691:
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4240              		.loc 2 7020 3 view .LVU1304
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4241              		.loc 2 7020 12 is_stmt 0 view .LVU1305
 4242 0010 9868     		ldr	r0, [r3, #8]
 4243              	.LVL350:
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4244              		.loc 2 7020 76 view .LVU1306
 4245 0012 10F00800 		ands	r0, r0, #8
 4246 0016 00D0     		beq	.L257
 4247 0018 0120     		movs	r0, #1
 4248              	.L257:
 4249              	.LVL351:
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4250              		.loc 2 7020 76 view .LVU1307
 4251              	.LBE691:
 4252              	.LBE690:
3534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4253              		.loc 1 3534 3 is_stmt 1 view .LVU1308
3534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4254              		.loc 1 3534 6 is_stmt 0 view .LVU1309
 4255 001a 0AB9     		cbnz	r2, .L258
3535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 4256              		.loc 1 3535 7 view .LVU1310
 4257 001c 0028     		cmp	r0, #0
 4258 001e 6BD0     		beq	.L270
 4259              	.L258:
3544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4260              		.loc 1 3544 5 is_stmt 1 view .LVU1311
3544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4261              		.loc 1 3544 25 is_stmt 0 view .LVU1312
 4262 0020 DA68     		ldr	r2, [r3, #12]
 4263              	.LVL352:
3544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4264              		.loc 1 3544 8 view .LVU1313
 4265 0022 12F0007F 		tst	r2, #33554432
 4266 0026 04D0     		beq	.L260
3546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 4267              		.loc 1 3546 9 view .LVU1314
 4268 0028 208B     		ldrh	r0, [r4, #24]
 4269              	.LVL353:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 320


3546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****        )
 4270              		.loc 1 3546 9 view .LVU1315
 4271 002a 40F20112 		movw	r2, #257
 4272 002e 9042     		cmp	r0, r2
 4273 0030 4ED0     		beq	.L275
 4274              	.L260:
3573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4275              		.loc 1 3573 5 is_stmt 1 view .LVU1316
3573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4276              		.loc 1 3573 8 is_stmt 0 view .LVU1317
 4277 0032 0229     		cmp	r1, #2
 4278 0034 10D0     		beq	.L265
 4279              	.LVL354:
 4280              	.L264:
3576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4281              		.loc 1 3576 7 is_stmt 1 view .LVU1318
3576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4282              		.loc 1 3576 46 is_stmt 0 view .LVU1319
 4283 0036 2368     		ldr	r3, [r4]
 4284              	.LVL355:
 4285              	.LBB692:
 4286              	.LBI692:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4287              		.loc 2 6863 26 is_stmt 1 view .LVU1320
 4288              	.LBB693:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4289              		.loc 2 6865 3 view .LVU1321
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4290              		.loc 2 6865 12 is_stmt 0 view .LVU1322
 4291 0038 9A68     		ldr	r2, [r3, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4292              		.loc 2 6865 74 view .LVU1323
 4293 003a 12F0040F 		tst	r2, #4
 4294 003e 0BD0     		beq	.L265
 4295              	.LVL356:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4296              		.loc 2 6865 74 view .LVU1324
 4297              	.LBE693:
 4298              	.LBE692:
3578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4299              		.loc 1 3578 9 is_stmt 1 view .LVU1325
 4300              	.LBB694:
 4301              	.LBI694:
6717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4302              		.loc 2 6717 26 view .LVU1326
 4303              	.LBB695:
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4304              		.loc 2 6719 3 view .LVU1327
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4305              		.loc 2 6719 12 is_stmt 0 view .LVU1328
 4306 0040 9A68     		ldr	r2, [r3, #8]
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4307              		.loc 2 6719 70 view .LVU1329
 4308 0042 12F0020F 		tst	r2, #2
 4309 0046 07D1     		bne	.L265
 4310              	.LVL357:
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 321


 4311              		.loc 2 6719 70 view .LVU1330
 4312              	.LBE695:
 4313              	.LBE694:
3581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4314              		.loc 1 3581 11 is_stmt 1 view .LVU1331
 4315              	.LBB696:
 4316              	.LBI696:
6847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4317              		.loc 2 6847 22 view .LVU1332
 4318              	.LBB697:
6852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4319              		.loc 2 6852 3 view .LVU1333
 4320 0048 9A68     		ldr	r2, [r3, #8]
 4321 004a 22F00042 		bic	r2, r2, #-2147483648
 4322 004e 22F03F02 		bic	r2, r2, #63
 4323 0052 42F01002 		orr	r2, r2, #16
 4324 0056 9A60     		str	r2, [r3, #8]
 4325              	.LVL358:
 4326              	.L265:
6852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4327              		.loc 2 6852 3 is_stmt 0 view .LVU1334
 4328              	.LBE697:
 4329              	.LBE696:
3587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4330              		.loc 1 3587 5 is_stmt 1 view .LVU1335
3587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4331              		.loc 1 3587 8 is_stmt 0 view .LVU1336
 4332 0058 0129     		cmp	r1, #1
 4333 005a 10D0     		beq	.L266
3590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4334              		.loc 1 3590 7 is_stmt 1 view .LVU1337
3590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4335              		.loc 1 3590 46 is_stmt 0 view .LVU1338
 4336 005c 2368     		ldr	r3, [r4]
 4337              	.LVL359:
 4338              	.LBB698:
 4339              	.LBI698:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4340              		.loc 2 7018 26 is_stmt 1 view .LVU1339
 4341              	.LBB699:
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4342              		.loc 2 7020 3 view .LVU1340
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4343              		.loc 2 7020 12 is_stmt 0 view .LVU1341
 4344 005e 9A68     		ldr	r2, [r3, #8]
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4345              		.loc 2 7020 76 view .LVU1342
 4346 0060 12F0080F 		tst	r2, #8
 4347 0064 0BD0     		beq	.L266
 4348              	.LVL360:
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4349              		.loc 2 7020 76 view .LVU1343
 4350              	.LBE699:
 4351              	.LBE698:
3592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4352              		.loc 1 3592 9 is_stmt 1 view .LVU1344
 4353              	.LBB700:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 322


 4354              	.LBI700:
6717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4355              		.loc 2 6717 26 view .LVU1345
 4356              	.LBB701:
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4357              		.loc 2 6719 3 view .LVU1346
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4358              		.loc 2 6719 12 is_stmt 0 view .LVU1347
 4359 0066 9A68     		ldr	r2, [r3, #8]
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4360              		.loc 2 6719 70 view .LVU1348
 4361 0068 12F0020F 		tst	r2, #2
 4362 006c 07D1     		bne	.L266
 4363              	.LVL361:
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4364              		.loc 2 6719 70 view .LVU1349
 4365              	.LBE701:
 4366              	.LBE700:
3595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4367              		.loc 1 3595 11 is_stmt 1 view .LVU1350
 4368              	.LBB702:
 4369              	.LBI702:
7002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4370              		.loc 2 7002 22 view .LVU1351
 4371              	.LBB703:
7007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4372              		.loc 2 7007 3 view .LVU1352
 4373 006e 9A68     		ldr	r2, [r3, #8]
 4374 0070 22F00042 		bic	r2, r2, #-2147483648
 4375 0074 22F03F02 		bic	r2, r2, #63
 4376 0078 42F02002 		orr	r2, r2, #32
 4377 007c 9A60     		str	r2, [r3, #8]
 4378              	.LVL362:
 4379              	.L266:
7007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4380              		.loc 2 7007 3 is_stmt 0 view .LVU1353
 4381              	.LBE703:
 4382              	.LBE702:
3601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4383              		.loc 1 3601 5 is_stmt 1 view .LVU1354
 4384 007e 0229     		cmp	r1, #2
 4385 0080 34D0     		beq	.L272
 4386 0082 0329     		cmp	r1, #3
 4387 0084 34D1     		bne	.L273
 4388 0086 0C25     		movs	r5, #12
 4389              	.L267:
 4390              	.LVL363:
3616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4391              		.loc 1 3616 5 view .LVU1355
3616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4392              		.loc 1 3616 17 is_stmt 0 view .LVU1356
 4393 0088 FFF7FEFF 		bl	HAL_GetTick
 4394              	.LVL364:
 4395 008c 0646     		mov	r6, r0
 4396              	.LVL365:
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4397              		.loc 1 3618 5 is_stmt 1 view .LVU1357
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 323


 4398              	.L268:
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4399              		.loc 1 3618 63 view .LVU1358
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4400              		.loc 1 3618 17 is_stmt 0 view .LVU1359
 4401 008e 2368     		ldr	r3, [r4]
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4402              		.loc 1 3618 27 view .LVU1360
 4403 0090 9B68     		ldr	r3, [r3, #8]
3618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4404              		.loc 1 3618 63 view .LVU1361
 4405 0092 2B42     		tst	r3, r5
 4406 0094 2ED0     		beq	.L276
3620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4407              		.loc 1 3620 7 is_stmt 1 view .LVU1362
3620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4408              		.loc 1 3620 12 is_stmt 0 view .LVU1363
 4409 0096 FFF7FEFF 		bl	HAL_GetTick
 4410              	.LVL366:
3620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4411              		.loc 1 3620 26 view .LVU1364
 4412 009a 801B     		subs	r0, r0, r6
3620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4413              		.loc 1 3620 10 view .LVU1365
 4414 009c 0528     		cmp	r0, #5
 4415 009e F6D9     		bls	.L268
3623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4416              		.loc 1 3623 9 is_stmt 1 view .LVU1366
3623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4417              		.loc 1 3623 18 is_stmt 0 view .LVU1367
 4418 00a0 2368     		ldr	r3, [r4]
3623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4419              		.loc 1 3623 28 view .LVU1368
 4420 00a2 9B68     		ldr	r3, [r3, #8]
3623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4421              		.loc 1 3623 12 view .LVU1369
 4422 00a4 2B42     		tst	r3, r5
 4423 00a6 F2D0     		beq	.L268
3626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4424              		.loc 1 3626 11 is_stmt 1 view .LVU1370
 4425 00a8 636D     		ldr	r3, [r4, #84]
 4426 00aa 43F01003 		orr	r3, r3, #16
 4427 00ae 6365     		str	r3, [r4, #84]
3629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4428              		.loc 1 3629 11 view .LVU1371
 4429 00b0 A36D     		ldr	r3, [r4, #88]
 4430 00b2 43F00103 		orr	r3, r3, #1
 4431 00b6 A365     		str	r3, [r4, #88]
3631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4432              		.loc 1 3631 11 view .LVU1372
3631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4433              		.loc 1 3631 18 is_stmt 0 view .LVU1373
 4434 00b8 0120     		movs	r0, #1
 4435 00ba 1CE0     		b	.L259
 4436              	.LVL367:
 4437              	.L278:
3558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 324


 4438              		.loc 1 3558 11 is_stmt 1 view .LVU1374
 4439 00bc 636D     		ldr	r3, [r4, #84]
 4440 00be 43F01003 		orr	r3, r3, #16
 4441 00c2 6365     		str	r3, [r4, #84]
3561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4442              		.loc 1 3561 11 view .LVU1375
 4443 00c4 A36D     		ldr	r3, [r4, #88]
 4444 00c6 43F00103 		orr	r3, r3, #1
 4445 00ca A365     		str	r3, [r4, #88]
3563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4446              		.loc 1 3563 11 view .LVU1376
3563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4447              		.loc 1 3563 18 is_stmt 0 view .LVU1377
 4448 00cc 0120     		movs	r0, #1
 4449 00ce 12E0     		b	.L259
 4450              	.LVL368:
 4451              	.L275:
3520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4452              		.loc 1 3520 12 view .LVU1378
 4453 00d0 0022     		movs	r2, #0
 4454              	.LVL369:
 4455              	.L261:
3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4456              		.loc 1 3553 54 is_stmt 1 view .LVU1379
3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4457              		.loc 1 3553 14 is_stmt 0 view .LVU1380
 4458 00d2 1968     		ldr	r1, [r3]
3553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4459              		.loc 1 3553 54 view .LVU1381
 4460 00d4 11F0400F 		tst	r1, #64
 4461 00d8 04D1     		bne	.L277
3555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4462              		.loc 1 3555 9 is_stmt 1 view .LVU1382
3555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4463              		.loc 1 3555 12 is_stmt 0 view .LVU1383
 4464 00da 0849     		ldr	r1, .L279
 4465 00dc 8A42     		cmp	r2, r1
 4466 00de EDD8     		bhi	.L278
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4467              		.loc 1 3565 9 is_stmt 1 view .LVU1384
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4468              		.loc 1 3565 39 is_stmt 0 view .LVU1385
 4469 00e0 0132     		adds	r2, r2, #1
 4470              	.LVL370:
3565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4471              		.loc 1 3565 39 view .LVU1386
 4472 00e2 F6E7     		b	.L261
 4473              	.L277:
3569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4474              		.loc 1 3569 7 is_stmt 1 view .LVU1387
 4475 00e4 4022     		movs	r2, #64
 4476              	.LVL371:
3569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4477              		.loc 1 3569 7 is_stmt 0 view .LVU1388
 4478 00e6 1A60     		str	r2, [r3]
 4479              	.LVL372:
3573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 325


 4480              		.loc 1 3573 5 is_stmt 1 view .LVU1389
3550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4481              		.loc 1 3550 35 is_stmt 0 view .LVU1390
 4482 00e8 0121     		movs	r1, #1
 4483 00ea A4E7     		b	.L264
 4484              	.LVL373:
 4485              	.L272:
3607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
 4486              		.loc 1 3607 37 view .LVU1391
 4487 00ec 0825     		movs	r5, #8
 4488 00ee CBE7     		b	.L267
 4489              	.L273:
3611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         break;
 4490              		.loc 1 3611 37 view .LVU1392
 4491 00f0 0425     		movs	r5, #4
 4492 00f2 C9E7     		b	.L267
 4493              	.LVL374:
 4494              	.L276:
3640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4495              		.loc 1 3640 10 view .LVU1393
 4496 00f4 0020     		movs	r0, #0
 4497              	.LVL375:
 4498              	.L259:
3641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4499              		.loc 1 3641 1 view .LVU1394
 4500 00f6 70BD     		pop	{r4, r5, r6, pc}
 4501              	.LVL376:
 4502              	.L270:
3640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4503              		.loc 1 3640 10 view .LVU1395
 4504 00f8 0020     		movs	r0, #0
 4505              	.LVL377:
3640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4506              		.loc 1 3640 10 view .LVU1396
 4507 00fa FCE7     		b	.L259
 4508              	.L280:
 4509              		.align	2
 4510              	.L279:
 4511 00fc FFFF3FA3 		.word	-1556086785
 4512              		.cfi_endproc
 4513              	.LFE1126:
 4515              		.section	.text.ADC_Enable,"ax",%progbits
 4516              		.align	1
 4517              		.global	ADC_Enable
 4518              		.syntax unified
 4519              		.thumb
 4520              		.thumb_func
 4522              	ADC_Enable:
 4523              	.LVL378:
 4524              	.LFB1127:
3653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 4525              		.loc 1 3653 1 is_stmt 1 view -0
 4526              		.cfi_startproc
 4527              		@ args = 0, pretend = 0, frame = 8
 4528              		@ frame_needed = 0, uses_anonymous_args = 0
3653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 4529              		.loc 1 3653 1 is_stmt 0 view .LVU1398
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 326


 4530 0000 30B5     		push	{r4, r5, lr}
 4531              		.cfi_def_cfa_offset 12
 4532              		.cfi_offset 4, -12
 4533              		.cfi_offset 5, -8
 4534              		.cfi_offset 14, -4
 4535 0002 83B0     		sub	sp, sp, #12
 4536              		.cfi_def_cfa_offset 24
3654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 4537              		.loc 1 3654 3 is_stmt 1 view .LVU1399
3655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4538              		.loc 1 3655 3 view .LVU1400
3655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4539              		.loc 1 3655 17 is_stmt 0 view .LVU1401
 4540 0004 0023     		movs	r3, #0
 4541 0006 0193     		str	r3, [sp, #4]
3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4542              		.loc 1 3661 3 is_stmt 1 view .LVU1402
3661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4543              		.loc 1 3661 28 is_stmt 0 view .LVU1403
 4544 0008 0368     		ldr	r3, [r0]
 4545              	.LVL379:
 4546              	.LBB704:
 4547              	.LBI704:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4548              		.loc 2 6706 26 is_stmt 1 view .LVU1404
 4549              	.LBB705:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4550              		.loc 2 6708 3 view .LVU1405
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4551              		.loc 2 6708 12 is_stmt 0 view .LVU1406
 4552 000a 9A68     		ldr	r2, [r3, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4553              		.loc 2 6708 68 view .LVU1407
 4554 000c 12F0010F 		tst	r2, #1
 4555 0010 52D1     		bne	.L290
 4556 0012 0446     		mov	r4, r0
 4557              	.LVL380:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4558              		.loc 2 6708 68 view .LVU1408
 4559              	.LBE705:
 4560              	.LBE704:
3667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 4561              		.loc 1 3667 5 is_stmt 1 view .LVU1409
3667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 4562              		.loc 1 3667 24 is_stmt 0 view .LVU1410
 4563 0014 9968     		ldr	r1, [r3, #8]
3667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 4564              		.loc 1 3667 8 view .LVU1411
 4565 0016 2A4A     		ldr	r2, .L295
 4566 0018 1142     		tst	r1, r2
 4567 001a 16D1     		bne	.L292
3680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4568              		.loc 1 3680 5 is_stmt 1 view .LVU1412
 4569              	.LVL381:
 4570              	.LBB706:
 4571              	.LBI706:
6667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 327


 4572              		.loc 2 6667 22 view .LVU1413
 4573              	.LBB707:
6672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4574              		.loc 2 6672 3 view .LVU1414
 4575 001c 9A68     		ldr	r2, [r3, #8]
 4576 001e 22F00042 		bic	r2, r2, #-2147483648
 4577 0022 22F03F02 		bic	r2, r2, #63
 4578 0026 42F00102 		orr	r2, r2, #1
 4579 002a 9A60     		str	r2, [r3, #8]
 4580              	.LVL382:
6672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4581              		.loc 2 6672 3 is_stmt 0 view .LVU1415
 4582              	.LBE707:
 4583              	.LBE706:
3682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4584              		.loc 1 3682 5 is_stmt 1 view .LVU1416
 4585              	.LBB708:
 4586              	.LBI708:
2589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4587              		.loc 2 2589 26 view .LVU1417
 4588              	.LBB709:
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4589              		.loc 2 2591 3 view .LVU1418
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4590              		.loc 2 2591 21 is_stmt 0 view .LVU1419
 4591 002c 254B     		ldr	r3, .L295+4
 4592 002e 9B68     		ldr	r3, [r3, #8]
 4593              	.LVL383:
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4594              		.loc 2 2591 21 view .LVU1420
 4595              	.LBE709:
 4596              	.LBE708:
3682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4597              		.loc 1 3682 7 view .LVU1421
 4598 0030 13F4000F 		tst	r3, #8388608
 4599 0034 19D0     		beq	.L284
3689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4600              		.loc 1 3689 7 is_stmt 1 view .LVU1422
3689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4601              		.loc 1 3689 94 is_stmt 0 view .LVU1423
 4602 0036 244B     		ldr	r3, .L295+8
 4603 0038 1B68     		ldr	r3, [r3]
 4604 003a 9B09     		lsrs	r3, r3, #6
 4605 003c 234A     		ldr	r2, .L295+12
 4606 003e A2FB0323 		umull	r2, r3, r2, r3
 4607 0042 9B09     		lsrs	r3, r3, #6
3689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4608              		.loc 1 3689 74 view .LVU1424
 4609 0044 0133     		adds	r3, r3, #1
3689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       while(wait_loop_index != 0UL)
 4610              		.loc 1 3689 23 view .LVU1425
 4611 0046 0193     		str	r3, [sp, #4]
3690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4612              		.loc 1 3690 7 is_stmt 1 view .LVU1426
3690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4613              		.loc 1 3690 12 is_stmt 0 view .LVU1427
 4614 0048 0CE0     		b	.L285
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 328


 4615              	.L292:
3671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4616              		.loc 1 3671 7 is_stmt 1 view .LVU1428
 4617 004a 436D     		ldr	r3, [r0, #84]
 4618 004c 43F01003 		orr	r3, r3, #16
 4619 0050 4365     		str	r3, [r0, #84]
3674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4620              		.loc 1 3674 7 view .LVU1429
 4621 0052 836D     		ldr	r3, [r0, #88]
 4622 0054 43F00103 		orr	r3, r3, #1
 4623 0058 8365     		str	r3, [r0, #88]
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4624              		.loc 1 3676 7 view .LVU1430
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4625              		.loc 1 3676 14 is_stmt 0 view .LVU1431
 4626 005a 0120     		movs	r0, #1
 4627              	.LVL384:
3676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4628              		.loc 1 3676 14 view .LVU1432
 4629 005c 2DE0     		b	.L282
 4630              	.LVL385:
 4631              	.L286:
3692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4632              		.loc 1 3692 9 is_stmt 1 view .LVU1433
3692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4633              		.loc 1 3692 24 is_stmt 0 view .LVU1434
 4634 005e 019B     		ldr	r3, [sp, #4]
 4635 0060 013B     		subs	r3, r3, #1
 4636 0062 0193     		str	r3, [sp, #4]
 4637              	.L285:
3690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4638              		.loc 1 3690 29 is_stmt 1 view .LVU1435
 4639 0064 019B     		ldr	r3, [sp, #4]
 4640 0066 002B     		cmp	r3, #0
 4641 0068 F9D1     		bne	.L286
 4642              	.L284:
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 4643              		.loc 1 3703 7 view .LVU1436
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 4644              		.loc 1 3703 19 is_stmt 0 view .LVU1437
 4645 006a FFF7FEFF 		bl	HAL_GetTick
 4646              	.LVL386:
3703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       
 4647              		.loc 1 3703 19 view .LVU1438
 4648 006e 0546     		mov	r5, r0
 4649              	.LVL387:
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4650              		.loc 1 3705 7 is_stmt 1 view .LVU1439
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4651              		.loc 1 3705 12 is_stmt 0 view .LVU1440
 4652 0070 04E0     		b	.L287
 4653              	.LVL388:
 4654              	.L288:
3720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4655              		.loc 1 3720 9 is_stmt 1 view .LVU1441
3720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4656              		.loc 1 3720 13 is_stmt 0 view .LVU1442
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 329


 4657 0072 FFF7FEFF 		bl	HAL_GetTick
 4658              	.LVL389:
3720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4659              		.loc 1 3720 27 view .LVU1443
 4660 0076 431B     		subs	r3, r0, r5
3720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4661              		.loc 1 3720 11 view .LVU1444
 4662 0078 022B     		cmp	r3, #2
 4663 007a 11D8     		bhi	.L293
 4664              	.L287:
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4665              		.loc 1 3705 52 is_stmt 1 view .LVU1445
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4666              		.loc 1 3705 13 is_stmt 0 view .LVU1446
 4667 007c 2368     		ldr	r3, [r4]
 4668 007e 1A68     		ldr	r2, [r3]
3705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4669              		.loc 1 3705 52 view .LVU1447
 4670 0080 12F0010F 		tst	r2, #1
 4671 0084 16D1     		bne	.L294
3715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 4672              		.loc 1 3715 9 is_stmt 1 view .LVU1448
 4673              	.LVL390:
 4674              	.LBB710:
 4675              	.LBI710:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4676              		.loc 2 6706 26 view .LVU1449
 4677              	.LBB711:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4678              		.loc 2 6708 3 view .LVU1450
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4679              		.loc 2 6708 12 is_stmt 0 view .LVU1451
 4680 0086 9A68     		ldr	r2, [r3, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4681              		.loc 2 6708 68 view .LVU1452
 4682 0088 12F0010F 		tst	r2, #1
 4683 008c F1D1     		bne	.L288
 4684              	.LVL391:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4685              		.loc 2 6708 68 view .LVU1453
 4686              	.LBE711:
 4687              	.LBE710:
3717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4688              		.loc 1 3717 11 is_stmt 1 view .LVU1454
 4689              	.LBB712:
 4690              	.LBI712:
6667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4691              		.loc 2 6667 22 view .LVU1455
 4692              	.LBB713:
6672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4693              		.loc 2 6672 3 view .LVU1456
 4694 008e 9A68     		ldr	r2, [r3, #8]
 4695 0090 22F00042 		bic	r2, r2, #-2147483648
 4696 0094 22F03F02 		bic	r2, r2, #63
 4697 0098 42F00102 		orr	r2, r2, #1
 4698 009c 9A60     		str	r2, [r3, #8]
6675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 330


 4699              		.loc 2 6675 1 is_stmt 0 view .LVU1457
 4700 009e E8E7     		b	.L288
 4701              	.LVL392:
 4702              	.L293:
6675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 4703              		.loc 2 6675 1 view .LVU1458
 4704              	.LBE713:
 4705              	.LBE712:
3723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
 4706              		.loc 1 3723 11 is_stmt 1 view .LVU1459
 4707 00a0 636D     		ldr	r3, [r4, #84]
 4708 00a2 43F01003 		orr	r3, r3, #16
 4709 00a6 6365     		str	r3, [r4, #84]
3726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           
 4710              		.loc 1 3726 11 view .LVU1460
 4711 00a8 A36D     		ldr	r3, [r4, #88]
 4712 00aa 43F00103 		orr	r3, r3, #1
 4713 00ae A365     		str	r3, [r4, #88]
3728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4714              		.loc 1 3728 11 view .LVU1461
3728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 4715              		.loc 1 3728 18 is_stmt 0 view .LVU1462
 4716 00b0 0120     		movs	r0, #1
 4717 00b2 02E0     		b	.L282
 4718              	.L294:
3735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4719              		.loc 1 3735 10 view .LVU1463
 4720 00b4 0020     		movs	r0, #0
 4721 00b6 00E0     		b	.L282
 4722              	.LVL393:
 4723              	.L290:
3735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 4724              		.loc 1 3735 10 view .LVU1464
 4725 00b8 0020     		movs	r0, #0
 4726              	.LVL394:
 4727              	.L282:
3736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4728              		.loc 1 3736 1 view .LVU1465
 4729 00ba 03B0     		add	sp, sp, #12
 4730              		.cfi_def_cfa_offset 12
 4731              		@ sp needed
 4732 00bc 30BD     		pop	{r4, r5, pc}
 4733              	.L296:
 4734 00be 00BF     		.align	2
 4735              	.L295:
 4736 00c0 3F000080 		.word	-2147483585
 4737 00c4 00030450 		.word	1342440192
 4738 00c8 00000000 		.word	SystemCoreClock
 4739 00cc 632D3E05 		.word	87960931
 4740              		.cfi_endproc
 4741              	.LFE1127:
 4743              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4744              		.align	1
 4745              		.global	HAL_ADC_Start
 4746              		.syntax unified
 4747              		.thumb
 4748              		.thumb_func
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 331


 4750              	HAL_ADC_Start:
 4751              	.LVL395:
 4752              	.LFB1108:
1496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4753              		.loc 1 1496 1 is_stmt 1 view -0
 4754              		.cfi_startproc
 4755              		@ args = 0, pretend = 0, frame = 0
 4756              		@ frame_needed = 0, uses_anonymous_args = 0
1497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4757              		.loc 1 1497 3 view .LVU1467
1500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4758              		.loc 1 1500 3 view .LVU1468
1503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4759              		.loc 1 1503 3 view .LVU1469
1503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4760              		.loc 1 1503 42 is_stmt 0 view .LVU1470
 4761 0000 0368     		ldr	r3, [r0]
 4762              	.LVL396:
 4763              	.LBB714:
 4764              	.LBI714:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4765              		.loc 2 6863 26 is_stmt 1 view .LVU1471
 4766              	.LBB715:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4767              		.loc 2 6865 3 view .LVU1472
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4768              		.loc 2 6865 12 is_stmt 0 view .LVU1473
 4769 0002 9B68     		ldr	r3, [r3, #8]
 4770              	.LVL397:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4771              		.loc 2 6865 74 view .LVU1474
 4772 0004 13F0040F 		tst	r3, #4
 4773 0008 32D1     		bne	.L302
 4774              	.LBE715:
 4775              	.LBE714:
1496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4776              		.loc 1 1496 1 view .LVU1475
 4777 000a 10B5     		push	{r4, lr}
 4778              		.cfi_def_cfa_offset 8
 4779              		.cfi_offset 4, -8
 4780              		.cfi_offset 14, -4
 4781 000c 0446     		mov	r4, r0
 4782              	.LVL398:
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4783              		.loc 1 1506 5 is_stmt 1 view .LVU1476
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4784              		.loc 1 1506 5 view .LVU1477
 4785 000e 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4786 0012 012B     		cmp	r3, #1
 4787 0014 2ED0     		beq	.L303
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4788              		.loc 1 1506 5 discriminator 2 view .LVU1478
 4789 0016 0123     		movs	r3, #1
 4790 0018 80F85030 		strb	r3, [r0, #80]
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4791              		.loc 1 1506 5 discriminator 2 view .LVU1479
1509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 332


 4792              		.loc 1 1509 5 discriminator 2 view .LVU1480
1509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4793              		.loc 1 1509 22 is_stmt 0 discriminator 2 view .LVU1481
 4794 001c FFF7FEFF 		bl	ADC_Enable
 4795              	.LVL399:
1512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4796              		.loc 1 1512 5 is_stmt 1 discriminator 2 view .LVU1482
1512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4797              		.loc 1 1512 8 is_stmt 0 discriminator 2 view .LVU1483
 4798 0020 10BB     		cbnz	r0, .L299
1517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4799              		.loc 1 1517 7 is_stmt 1 view .LVU1484
 4800 0022 636D     		ldr	r3, [r4, #84]
 4801 0024 23F47063 		bic	r3, r3, #3840
 4802 0028 23F00103 		bic	r3, r3, #1
 4803 002c 43F48073 		orr	r3, r3, #256
 4804 0030 6365     		str	r3, [r4, #84]
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4805              		.loc 1 1527 7 view .LVU1485
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4806              		.loc 1 1527 11 is_stmt 0 view .LVU1486
 4807 0032 636D     		ldr	r3, [r4, #84]
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4808              		.loc 1 1527 10 view .LVU1487
 4809 0034 13F4805F 		tst	r3, #4096
 4810 0038 13D0     		beq	.L300
1530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4811              		.loc 1 1530 9 is_stmt 1 view .LVU1488
 4812 003a A36D     		ldr	r3, [r4, #88]
 4813 003c 23F00603 		bic	r3, r3, #6
 4814 0040 A365     		str	r3, [r4, #88]
 4815              	.L301:
1541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4816              		.loc 1 1541 7 view .LVU1489
 4817 0042 2368     		ldr	r3, [r4]
 4818 0044 1C22     		movs	r2, #28
 4819 0046 1A60     		str	r2, [r3]
1546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4820              		.loc 1 1546 7 view .LVU1490
1546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4821              		.loc 1 1546 7 view .LVU1491
 4822 0048 0023     		movs	r3, #0
 4823 004a 84F85030 		strb	r3, [r4, #80]
1546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4824              		.loc 1 1546 7 view .LVU1492
1553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4825              		.loc 1 1553 7 view .LVU1493
 4826 004e 2268     		ldr	r2, [r4]
 4827              	.LVL400:
 4828              	.LBB716:
 4829              	.LBI716:
6827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4830              		.loc 2 6827 22 view .LVU1494
 4831              	.LBB717:
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4832              		.loc 2 6832 3 view .LVU1495
 4833 0050 9368     		ldr	r3, [r2, #8]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 333


 4834 0052 23F00043 		bic	r3, r3, #-2147483648
 4835 0056 23F03F03 		bic	r3, r3, #63
 4836 005a 43F00403 		orr	r3, r3, #4
 4837 005e 9360     		str	r3, [r2, #8]
 4838              	.LVL401:
 4839              	.L298:
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4840              		.loc 2 6832 3 is_stmt 0 view .LVU1496
 4841              	.LBE717:
 4842              	.LBE716:
1568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4843              		.loc 1 1568 1 view .LVU1497
 4844 0060 10BD     		pop	{r4, pc}
 4845              	.LVL402:
 4846              	.L300:
1535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4847              		.loc 1 1535 9 is_stmt 1 view .LVU1498
 4848 0062 0023     		movs	r3, #0
 4849 0064 A365     		str	r3, [r4, #88]
 4850 0066 ECE7     		b	.L301
 4851              	.L299:
1558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4852              		.loc 1 1558 7 view .LVU1499
1558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4853              		.loc 1 1558 7 view .LVU1500
 4854 0068 0023     		movs	r3, #0
 4855 006a 84F85030 		strb	r3, [r4, #80]
 4856 006e F7E7     		b	.L298
 4857              	.LVL403:
 4858              	.L302:
 4859              		.cfi_def_cfa_offset 0
 4860              		.cfi_restore 4
 4861              		.cfi_restore 14
1563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 4862              		.loc 1 1563 20 is_stmt 0 view .LVU1501
 4863 0070 0220     		movs	r0, #2
 4864              	.LVL404:
1568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4865              		.loc 1 1568 1 view .LVU1502
 4866 0072 7047     		bx	lr
 4867              	.LVL405:
 4868              	.L303:
 4869              		.cfi_def_cfa_offset 8
 4870              		.cfi_offset 4, -8
 4871              		.cfi_offset 14, -4
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4872              		.loc 1 1506 5 view .LVU1503
 4873 0074 0220     		movs	r0, #2
 4874              	.LVL406:
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4875              		.loc 1 1506 5 view .LVU1504
 4876 0076 F3E7     		b	.L298
 4877              		.cfi_endproc
 4878              	.LFE1108:
 4880              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4881              		.align	1
 4882              		.global	HAL_ADC_Start_IT
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 334


 4883              		.syntax unified
 4884              		.thumb
 4885              		.thumb_func
 4887              	HAL_ADC_Start_IT:
 4888              	.LVL407:
 4889              	.LFB1112:
1926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4890              		.loc 1 1926 1 is_stmt 1 view -0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 0
 4893              		@ frame_needed = 0, uses_anonymous_args = 0
1927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4894              		.loc 1 1927 3 view .LVU1506
1930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4895              		.loc 1 1930 3 view .LVU1507
1933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4896              		.loc 1 1933 3 view .LVU1508
1933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 4897              		.loc 1 1933 42 is_stmt 0 view .LVU1509
 4898 0000 0368     		ldr	r3, [r0]
 4899              	.LVL408:
 4900              	.LBB718:
 4901              	.LBI718:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4902              		.loc 2 6863 26 is_stmt 1 view .LVU1510
 4903              	.LBB719:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4904              		.loc 2 6865 3 view .LVU1511
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4905              		.loc 2 6865 12 is_stmt 0 view .LVU1512
 4906 0002 9B68     		ldr	r3, [r3, #8]
 4907              	.LVL409:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 4908              		.loc 2 6865 74 view .LVU1513
 4909 0004 13F0040F 		tst	r3, #4
 4910 0008 4DD1     		bne	.L316
 4911              	.LBE719:
 4912              	.LBE718:
1926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4913              		.loc 1 1926 1 view .LVU1514
 4914 000a 10B5     		push	{r4, lr}
 4915              		.cfi_def_cfa_offset 8
 4916              		.cfi_offset 4, -8
 4917              		.cfi_offset 14, -4
 4918 000c 0446     		mov	r4, r0
 4919              	.LVL410:
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4920              		.loc 1 1936 5 is_stmt 1 view .LVU1515
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4921              		.loc 1 1936 5 view .LVU1516
 4922 000e 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4923 0012 012B     		cmp	r3, #1
 4924 0014 49D0     		beq	.L317
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4925              		.loc 1 1936 5 discriminator 2 view .LVU1517
 4926 0016 0123     		movs	r3, #1
 4927 0018 80F85030 		strb	r3, [r0, #80]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 335


1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4928              		.loc 1 1936 5 discriminator 2 view .LVU1518
1939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4929              		.loc 1 1939 5 discriminator 2 view .LVU1519
1939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4930              		.loc 1 1939 22 is_stmt 0 discriminator 2 view .LVU1520
 4931 001c FFF7FEFF 		bl	ADC_Enable
 4932              	.LVL411:
1942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4933              		.loc 1 1942 5 is_stmt 1 discriminator 2 view .LVU1521
1942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 4934              		.loc 1 1942 8 is_stmt 0 discriminator 2 view .LVU1522
 4935 0020 0028     		cmp	r0, #0
 4936 0022 3CD1     		bne	.L310
1947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4937              		.loc 1 1947 7 is_stmt 1 view .LVU1523
 4938 0024 636D     		ldr	r3, [r4, #84]
 4939 0026 23F47063 		bic	r3, r3, #3840
 4940 002a 23F00103 		bic	r3, r3, #1
 4941 002e 43F48073 		orr	r3, r3, #256
 4942 0032 6365     		str	r3, [r4, #84]
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4943              		.loc 1 1957 7 view .LVU1524
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4944              		.loc 1 1957 16 is_stmt 0 view .LVU1525
 4945 0034 636D     		ldr	r3, [r4, #84]
1957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4946              		.loc 1 1957 10 view .LVU1526
 4947 0036 13F4805F 		tst	r3, #4096
 4948 003a 27D0     		beq	.L311
1960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4949              		.loc 1 1960 9 is_stmt 1 view .LVU1527
 4950 003c A36D     		ldr	r3, [r4, #88]
 4951 003e 23F00603 		bic	r3, r3, #6
 4952 0042 A365     		str	r3, [r4, #88]
 4953              	.L312:
1971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4954              		.loc 1 1971 7 view .LVU1528
 4955 0044 2368     		ldr	r3, [r4]
 4956 0046 1C22     		movs	r2, #28
 4957 0048 1A60     		str	r2, [r3]
1976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4958              		.loc 1 1976 7 view .LVU1529
1976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4959              		.loc 1 1976 7 view .LVU1530
 4960 004a 0023     		movs	r3, #0
 4961 004c 84F85030 		strb	r3, [r4, #80]
1976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4962              		.loc 1 1976 7 view .LVU1531
1979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 4963              		.loc 1 1979 7 view .LVU1532
 4964 0050 2268     		ldr	r2, [r4]
 4965 0052 5368     		ldr	r3, [r2, #4]
 4966 0054 23F01C03 		bic	r3, r3, #28
 4967 0058 5360     		str	r3, [r2, #4]
1982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4968              		.loc 1 1982 7 view .LVU1533
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 336


1982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4969              		.loc 1 1982 25 is_stmt 0 view .LVU1534
 4970 005a 6369     		ldr	r3, [r4, #20]
1982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4971              		.loc 1 1982 7 view .LVU1535
 4972 005c 082B     		cmp	r3, #8
 4973 005e 18D0     		beq	.L322
1989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 4974              		.loc 1 1989 11 is_stmt 1 view .LVU1536
 4975 0060 2268     		ldr	r2, [r4]
 4976 0062 5368     		ldr	r3, [r2, #4]
 4977 0064 43F00403 		orr	r3, r3, #4
 4978 0068 5360     		str	r3, [r2, #4]
1990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4979              		.loc 1 1990 11 view .LVU1537
 4980              	.L314:
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4981              		.loc 1 1997 7 view .LVU1538
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4982              		.loc 1 1997 21 is_stmt 0 view .LVU1539
 4983 006a 636B     		ldr	r3, [r4, #52]
1997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 4984              		.loc 1 1997 10 view .LVU1540
 4985 006c 23B9     		cbnz	r3, .L315
1999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 4986              		.loc 1 1999 9 is_stmt 1 view .LVU1541
 4987 006e 2268     		ldr	r2, [r4]
 4988 0070 5368     		ldr	r3, [r2, #4]
 4989 0072 43F01003 		orr	r3, r3, #16
 4990 0076 5360     		str	r3, [r2, #4]
 4991              	.L315:
2007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 4992              		.loc 1 2007 7 view .LVU1542
 4993 0078 2268     		ldr	r2, [r4]
 4994              	.LVL412:
 4995              	.LBB720:
 4996              	.LBI720:
6827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 4997              		.loc 2 6827 22 view .LVU1543
 4998              	.LBB721:
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4999              		.loc 2 6832 3 view .LVU1544
 5000 007a 9368     		ldr	r3, [r2, #8]
 5001 007c 23F00043 		bic	r3, r3, #-2147483648
 5002 0080 23F03F03 		bic	r3, r3, #63
 5003 0084 43F00403 		orr	r3, r3, #4
 5004 0088 9360     		str	r3, [r2, #8]
 5005              	.LVL413:
 5006              	.L309:
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5007              		.loc 2 6832 3 is_stmt 0 view .LVU1545
 5008              	.LBE721:
 5009              	.LBE720:
2023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5010              		.loc 1 2023 1 view .LVU1546
 5011 008a 10BD     		pop	{r4, pc}
 5012              	.LVL414:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 337


 5013              	.L311:
1965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5014              		.loc 1 1965 9 is_stmt 1 view .LVU1547
 5015 008c 0023     		movs	r3, #0
 5016 008e A365     		str	r3, [r4, #88]
 5017 0090 D8E7     		b	.L312
 5018              	.L322:
1985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****           break;
 5019              		.loc 1 1985 11 view .LVU1548
 5020 0092 2268     		ldr	r2, [r4]
 5021 0094 5368     		ldr	r3, [r2, #4]
 5022 0096 43F00803 		orr	r3, r3, #8
 5023 009a 5360     		str	r3, [r2, #4]
1986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 5024              		.loc 1 1986 11 view .LVU1549
 5025 009c E5E7     		b	.L314
 5026              	.L310:
2012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5027              		.loc 1 2012 7 view .LVU1550
2012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5028              		.loc 1 2012 7 view .LVU1551
 5029 009e 0023     		movs	r3, #0
 5030 00a0 84F85030 		strb	r3, [r4, #80]
 5031 00a4 F1E7     		b	.L309
 5032              	.LVL415:
 5033              	.L316:
 5034              		.cfi_def_cfa_offset 0
 5035              		.cfi_restore 4
 5036              		.cfi_restore 14
2018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5037              		.loc 1 2018 20 is_stmt 0 view .LVU1552
 5038 00a6 0220     		movs	r0, #2
 5039              	.LVL416:
2023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5040              		.loc 1 2023 1 view .LVU1553
 5041 00a8 7047     		bx	lr
 5042              	.LVL417:
 5043              	.L317:
 5044              		.cfi_def_cfa_offset 8
 5045              		.cfi_offset 4, -8
 5046              		.cfi_offset 14, -4
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5047              		.loc 1 1936 5 view .LVU1554
 5048 00aa 0220     		movs	r0, #2
 5049              	.LVL418:
1936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5050              		.loc 1 1936 5 view .LVU1555
 5051 00ac EDE7     		b	.L309
 5052              		.cfi_endproc
 5053              	.LFE1112:
 5055              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5056              		.align	1
 5057              		.global	HAL_ADC_Start_DMA
 5058              		.syntax unified
 5059              		.thumb
 5060              		.thumb_func
 5062              	HAL_ADC_Start_DMA:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 338


 5063              	.LVL419:
 5064              	.LFB1114:
2094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5065              		.loc 1 2094 1 is_stmt 1 view -0
 5066              		.cfi_startproc
 5067              		@ args = 0, pretend = 0, frame = 0
 5068              		@ frame_needed = 0, uses_anonymous_args = 0
2094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5069              		.loc 1 2094 1 is_stmt 0 view .LVU1557
 5070 0000 70B5     		push	{r4, r5, r6, lr}
 5071              		.cfi_def_cfa_offset 16
 5072              		.cfi_offset 4, -16
 5073              		.cfi_offset 5, -12
 5074              		.cfi_offset 6, -8
 5075              		.cfi_offset 14, -4
 5076 0002 0446     		mov	r4, r0
2095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5077              		.loc 1 2095 3 is_stmt 1 view .LVU1558
2098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5078              		.loc 1 2098 3 view .LVU1559
2101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5079              		.loc 1 2101 3 view .LVU1560
2101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5080              		.loc 1 2101 42 is_stmt 0 view .LVU1561
 5081 0004 0068     		ldr	r0, [r0]
 5082              	.LVL420:
 5083              	.LBB722:
 5084              	.LBI722:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5085              		.loc 2 6863 26 is_stmt 1 view .LVU1562
 5086              	.LBB723:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5087              		.loc 2 6865 3 view .LVU1563
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5088              		.loc 2 6865 12 is_stmt 0 view .LVU1564
 5089 0006 8068     		ldr	r0, [r0, #8]
 5090              	.LVL421:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5091              		.loc 2 6865 74 view .LVU1565
 5092 0008 10F0040F 		tst	r0, #4
 5093 000c 4ED1     		bne	.L328
 5094 000e 0E46     		mov	r6, r1
 5095 0010 1546     		mov	r5, r2
 5096              	.LVL422:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5097              		.loc 2 6865 74 view .LVU1566
 5098              	.LBE723:
 5099              	.LBE722:
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5100              		.loc 1 2104 5 is_stmt 1 view .LVU1567
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5101              		.loc 1 2104 5 view .LVU1568
 5102 0012 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5103 0016 012B     		cmp	r3, #1
 5104 0018 4AD0     		beq	.L329
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5105              		.loc 1 2104 5 discriminator 2 view .LVU1569
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 339


 5106 001a 0123     		movs	r3, #1
 5107 001c 84F85030 		strb	r3, [r4, #80]
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5108              		.loc 1 2104 5 discriminator 2 view .LVU1570
2107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5109              		.loc 1 2107 7 discriminator 2 view .LVU1571
2107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5110              		.loc 1 2107 24 is_stmt 0 discriminator 2 view .LVU1572
 5111 0020 2046     		mov	r0, r4
 5112 0022 FFF7FEFF 		bl	ADC_Enable
 5113              	.LVL423:
2110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5114              		.loc 1 2110 7 is_stmt 1 discriminator 2 view .LVU1573
2110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5115              		.loc 1 2110 10 is_stmt 0 discriminator 2 view .LVU1574
 5116 0026 0028     		cmp	r0, #0
 5117 0028 3CD1     		bne	.L325
2115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5118              		.loc 1 2115 9 is_stmt 1 view .LVU1575
 5119 002a 636D     		ldr	r3, [r4, #84]
 5120 002c 23F47063 		bic	r3, r3, #3840
 5121 0030 23F00103 		bic	r3, r3, #1
 5122 0034 43F48073 		orr	r3, r3, #256
 5123 0038 6365     		str	r3, [r4, #84]
2124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5124              		.loc 1 2124 9 view .LVU1576
2124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5125              		.loc 1 2124 18 is_stmt 0 view .LVU1577
 5126 003a 636D     		ldr	r3, [r4, #84]
2124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5127              		.loc 1 2124 12 view .LVU1578
 5128 003c 13F4805F 		tst	r3, #4096
 5129 0040 2DD0     		beq	.L326
2127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5130              		.loc 1 2127 11 is_stmt 1 view .LVU1579
 5131 0042 A36D     		ldr	r3, [r4, #88]
 5132 0044 23F00603 		bic	r3, r3, #6
 5133 0048 A365     		str	r3, [r4, #88]
 5134              	.L327:
2137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5135              		.loc 1 2137 9 view .LVU1580
2137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5136              		.loc 1 2137 13 is_stmt 0 view .LVU1581
 5137 004a E36C     		ldr	r3, [r4, #76]
2137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5138              		.loc 1 2137 44 view .LVU1582
 5139 004c 194A     		ldr	r2, .L331
 5140 004e DA62     		str	r2, [r3, #44]
2140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5141              		.loc 1 2140 9 is_stmt 1 view .LVU1583
2140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5142              		.loc 1 2140 13 is_stmt 0 view .LVU1584
 5143 0050 E36C     		ldr	r3, [r4, #76]
2140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5144              		.loc 1 2140 48 view .LVU1585
 5145 0052 194A     		ldr	r2, .L331+4
 5146 0054 1A63     		str	r2, [r3, #48]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 340


2143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5147              		.loc 1 2143 9 is_stmt 1 view .LVU1586
2143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5148              		.loc 1 2143 13 is_stmt 0 view .LVU1587
 5149 0056 E36C     		ldr	r3, [r4, #76]
2143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5150              		.loc 1 2143 45 view .LVU1588
 5151 0058 184A     		ldr	r2, .L331+8
 5152 005a 5A63     		str	r2, [r3, #52]
2152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5153              		.loc 1 2152 9 is_stmt 1 view .LVU1589
 5154 005c 2368     		ldr	r3, [r4]
 5155 005e 1C22     		movs	r2, #28
 5156 0060 1A60     		str	r2, [r3]
2157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5157              		.loc 1 2157 9 view .LVU1590
2157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5158              		.loc 1 2157 9 view .LVU1591
 5159 0062 0023     		movs	r3, #0
 5160 0064 84F85030 		strb	r3, [r4, #80]
2157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5161              		.loc 1 2157 9 view .LVU1592
2162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5162              		.loc 1 2162 9 view .LVU1593
 5163 0068 2268     		ldr	r2, [r4]
 5164 006a 5368     		ldr	r3, [r2, #4]
 5165 006c 43F01003 		orr	r3, r3, #16
 5166 0070 5360     		str	r3, [r2, #4]
2168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5167              		.loc 1 2168 9 view .LVU1594
 5168 0072 2268     		ldr	r2, [r4]
 5169 0074 D368     		ldr	r3, [r2, #12]
 5170 0076 43F00103 		orr	r3, r3, #1
 5171 007a D360     		str	r3, [r2, #12]
2172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5172              		.loc 1 2172 9 view .LVU1595
2172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5173              		.loc 1 2172 76 is_stmt 0 view .LVU1596
 5174 007c 2168     		ldr	r1, [r4]
2172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5175              		.loc 1 2172 26 view .LVU1597
 5176 007e 2B46     		mov	r3, r5
 5177 0080 3246     		mov	r2, r6
 5178 0082 4031     		adds	r1, r1, #64
 5179 0084 E06C     		ldr	r0, [r4, #76]
 5180              	.LVL424:
2172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5181              		.loc 1 2172 26 view .LVU1598
 5182 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5183              	.LVL425:
2179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5184              		.loc 1 2179 9 is_stmt 1 view .LVU1599
 5185 008a 2268     		ldr	r2, [r4]
 5186              	.LVL426:
 5187              	.LBB724:
 5188              	.LBI724:
6827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 341


 5189              		.loc 2 6827 22 view .LVU1600
 5190              	.LBB725:
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5191              		.loc 2 6832 3 view .LVU1601
 5192 008c 9368     		ldr	r3, [r2, #8]
 5193 008e 23F00043 		bic	r3, r3, #-2147483648
 5194 0092 23F03F03 		bic	r3, r3, #63
 5195 0096 43F00403 		orr	r3, r3, #4
 5196 009a 9360     		str	r3, [r2, #8]
6835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 5197              		.loc 2 6835 1 is_stmt 0 view .LVU1602
 5198 009c 07E0     		b	.L324
 5199              	.LVL427:
 5200              	.L326:
6835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 5201              		.loc 2 6835 1 view .LVU1603
 5202              	.LBE725:
 5203              	.LBE724:
2132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5204              		.loc 1 2132 11 is_stmt 1 view .LVU1604
 5205 009e 0023     		movs	r3, #0
 5206 00a0 A365     		str	r3, [r4, #88]
 5207 00a2 D2E7     		b	.L327
 5208              	.L325:
2184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5209              		.loc 1 2184 9 view .LVU1605
2184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5210              		.loc 1 2184 9 view .LVU1606
 5211 00a4 0023     		movs	r3, #0
 5212 00a6 84F85030 		strb	r3, [r4, #80]
 5213 00aa 00E0     		b	.L324
 5214              	.LVL428:
 5215              	.L328:
2189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5216              		.loc 1 2189 20 is_stmt 0 view .LVU1607
 5217 00ac 0220     		movs	r0, #2
 5218              	.LVL429:
 5219              	.L324:
2194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5220              		.loc 1 2194 1 view .LVU1608
 5221 00ae 70BD     		pop	{r4, r5, r6, pc}
 5222              	.LVL430:
 5223              	.L329:
2104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5224              		.loc 1 2104 5 view .LVU1609
 5225 00b0 0220     		movs	r0, #2
 5226 00b2 FCE7     		b	.L324
 5227              	.L332:
 5228              		.align	2
 5229              	.L331:
 5230 00b4 00000000 		.word	ADC_DMAConvCplt
 5231 00b8 00000000 		.word	ADC_DMAHalfConvCplt
 5232 00bc 00000000 		.word	ADC_DMAError
 5233              		.cfi_endproc
 5234              	.LFE1114:
 5236              		.section	.text.ADC_Disable,"ax",%progbits
 5237              		.align	1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 342


 5238              		.global	ADC_Disable
 5239              		.syntax unified
 5240              		.thumb
 5241              		.thumb_func
 5243              	ADC_Disable:
 5244              	.LVL431:
 5245              	.LFB1128:
3746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 5246              		.loc 1 3746 1 is_stmt 1 view -0
 5247              		.cfi_startproc
 5248              		@ args = 0, pretend = 0, frame = 0
 5249              		@ frame_needed = 0, uses_anonymous_args = 0
3746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   uint32_t tickstart;
 5250              		.loc 1 3746 1 is_stmt 0 view .LVU1611
 5251 0000 38B5     		push	{r3, r4, r5, lr}
 5252              		.cfi_def_cfa_offset 16
 5253              		.cfi_offset 3, -16
 5254              		.cfi_offset 4, -12
 5255              		.cfi_offset 5, -8
 5256              		.cfi_offset 14, -4
 5257 0002 0446     		mov	r4, r0
3747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5258              		.loc 1 3747 3 is_stmt 1 view .LVU1612
3748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5259              		.loc 1 3748 3 view .LVU1613
3748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5260              		.loc 1 3748 76 is_stmt 0 view .LVU1614
 5261 0004 0268     		ldr	r2, [r0]
 5262              	.LVL432:
 5263              	.LBB726:
 5264              	.LBI726:
6717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5265              		.loc 2 6717 26 is_stmt 1 view .LVU1615
 5266              	.LBB727:
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5267              		.loc 2 6719 3 view .LVU1616
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5268              		.loc 2 6719 12 is_stmt 0 view .LVU1617
 5269 0006 9368     		ldr	r3, [r2, #8]
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5270              		.loc 2 6719 70 view .LVU1618
 5271 0008 13F00203 		ands	r3, r3, #2
 5272 000c 00D0     		beq	.L334
 5273 000e 0123     		movs	r3, #1
 5274              	.L334:
 5275              	.LVL433:
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5276              		.loc 2 6719 70 view .LVU1619
 5277              	.LBE727:
 5278              	.LBE726:
3753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5279              		.loc 1 3753 3 is_stmt 1 view .LVU1620
 5280              	.LBB728:
 5281              	.LBI728:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5282              		.loc 2 6706 26 view .LVU1621
 5283              	.LBB729:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 343


6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5284              		.loc 2 6708 3 view .LVU1622
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5285              		.loc 2 6708 12 is_stmt 0 view .LVU1623
 5286 0010 9168     		ldr	r1, [r2, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5287              		.loc 2 6708 68 view .LVU1624
 5288 0012 11F0010F 		tst	r1, #1
 5289 0016 39D0     		beq	.L339
 5290              	.LVL434:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5291              		.loc 2 6708 68 view .LVU1625
 5292              	.LBE729:
 5293              	.LBE728:
3754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****      )
 5294              		.loc 1 3754 7 view .LVU1626
 5295 0018 002B     		cmp	r3, #0
 5296 001a 39D1     		bne	.L340
3761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5297              		.loc 1 3761 5 is_stmt 1 view .LVU1627
3761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5298              		.loc 1 3761 24 is_stmt 0 view .LVU1628
 5299 001c 9368     		ldr	r3, [r2, #8]
 5300              	.LVL435:
3761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5301              		.loc 1 3761 29 view .LVU1629
 5302 001e 03F00D03 		and	r3, r3, #13
3761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5303              		.loc 1 3761 8 view .LVU1630
 5304 0022 012B     		cmp	r3, #1
 5305 0024 09D0     		beq	.L342
3771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5306              		.loc 1 3771 7 is_stmt 1 view .LVU1631
 5307 0026 636D     		ldr	r3, [r4, #84]
 5308 0028 43F01003 		orr	r3, r3, #16
 5309 002c 6365     		str	r3, [r4, #84]
3774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5310              		.loc 1 3774 7 view .LVU1632
 5311 002e A36D     		ldr	r3, [r4, #88]
 5312 0030 43F00103 		orr	r3, r3, #1
 5313 0034 A365     		str	r3, [r4, #88]
3776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5314              		.loc 1 3776 7 view .LVU1633
3776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5315              		.loc 1 3776 14 is_stmt 0 view .LVU1634
 5316 0036 0120     		movs	r0, #1
 5317              	.LVL436:
3776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5318              		.loc 1 3776 14 view .LVU1635
 5319 0038 29E0     		b	.L335
 5320              	.LVL437:
 5321              	.L342:
3765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5322              		.loc 1 3765 7 is_stmt 1 view .LVU1636
 5323              	.LBB730:
 5324              	.LBI730:
6687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 344


 5325              		.loc 2 6687 22 view .LVU1637
 5326              	.LBB731:
6692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5327              		.loc 2 6692 3 view .LVU1638
 5328 003a 9368     		ldr	r3, [r2, #8]
 5329 003c 23F00043 		bic	r3, r3, #-2147483648
 5330 0040 23F03F03 		bic	r3, r3, #63
 5331 0044 43F00203 		orr	r3, r3, #2
 5332 0048 9360     		str	r3, [r2, #8]
 5333              	.LVL438:
6692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5334              		.loc 2 6692 3 is_stmt 0 view .LVU1639
 5335              	.LBE731:
 5336              	.LBE730:
3766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5337              		.loc 1 3766 7 is_stmt 1 view .LVU1640
 5338 004a 2368     		ldr	r3, [r4]
 5339 004c 0322     		movs	r2, #3
 5340 004e 1A60     		str	r2, [r3]
3781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5341              		.loc 1 3781 5 view .LVU1641
3781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5342              		.loc 1 3781 17 is_stmt 0 view .LVU1642
 5343 0050 FFF7FEFF 		bl	HAL_GetTick
 5344              	.LVL439:
3781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5345              		.loc 1 3781 17 view .LVU1643
 5346 0054 0546     		mov	r5, r0
 5347              	.LVL440:
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5348              		.loc 1 3783 5 is_stmt 1 view .LVU1644
 5349              	.L337:
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5350              		.loc 1 3783 47 view .LVU1645
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5351              		.loc 1 3783 17 is_stmt 0 view .LVU1646
 5352 0056 2368     		ldr	r3, [r4]
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5353              		.loc 1 3783 27 view .LVU1647
 5354 0058 9B68     		ldr	r3, [r3, #8]
3783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5355              		.loc 1 3783 47 view .LVU1648
 5356 005a 13F0010F 		tst	r3, #1
 5357 005e 13D0     		beq	.L343
3785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5358              		.loc 1 3785 7 is_stmt 1 view .LVU1649
3785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5359              		.loc 1 3785 12 is_stmt 0 view .LVU1650
 5360 0060 FFF7FEFF 		bl	HAL_GetTick
 5361              	.LVL441:
3785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5362              		.loc 1 3785 26 view .LVU1651
 5363 0064 401B     		subs	r0, r0, r5
3785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5364              		.loc 1 3785 10 view .LVU1652
 5365 0066 0228     		cmp	r0, #2
 5366 0068 F5D9     		bls	.L337
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 345


3788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5367              		.loc 1 3788 9 is_stmt 1 view .LVU1653
3788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5368              		.loc 1 3788 18 is_stmt 0 view .LVU1654
 5369 006a 2368     		ldr	r3, [r4]
3788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5370              		.loc 1 3788 28 view .LVU1655
 5371 006c 9B68     		ldr	r3, [r3, #8]
3788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         {
 5372              		.loc 1 3788 12 view .LVU1656
 5373 006e 13F0010F 		tst	r3, #1
 5374 0072 F0D0     		beq	.L337
3791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5375              		.loc 1 3791 11 is_stmt 1 view .LVU1657
 5376 0074 636D     		ldr	r3, [r4, #84]
 5377 0076 43F01003 		orr	r3, r3, #16
 5378 007a 6365     		str	r3, [r4, #84]
3794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5379              		.loc 1 3794 11 view .LVU1658
 5380 007c A36D     		ldr	r3, [r4, #88]
 5381 007e 43F00103 		orr	r3, r3, #1
 5382 0082 A365     		str	r3, [r4, #88]
3796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5383              		.loc 1 3796 11 view .LVU1659
3796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****         }
 5384              		.loc 1 3796 18 is_stmt 0 view .LVU1660
 5385 0084 0120     		movs	r0, #1
 5386 0086 02E0     		b	.L335
 5387              	.L343:
3803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5388              		.loc 1 3803 10 view .LVU1661
 5389 0088 0020     		movs	r0, #0
 5390 008a 00E0     		b	.L335
 5391              	.LVL442:
 5392              	.L339:
3803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5393              		.loc 1 3803 10 view .LVU1662
 5394 008c 0020     		movs	r0, #0
 5395              	.LVL443:
 5396              	.L335:
3804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5397              		.loc 1 3804 1 view .LVU1663
 5398 008e 38BD     		pop	{r3, r4, r5, pc}
 5399              	.LVL444:
 5400              	.L340:
3803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5401              		.loc 1 3803 10 view .LVU1664
 5402 0090 0020     		movs	r0, #0
 5403              	.LVL445:
3803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5404              		.loc 1 3803 10 view .LVU1665
 5405 0092 FCE7     		b	.L335
 5406              		.cfi_endproc
 5407              	.LFE1128:
 5409              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5410              		.align	1
 5411              		.global	HAL_ADC_DeInit
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 346


 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5416              	HAL_ADC_DeInit:
 5417              	.LVL446:
 5418              	.LFB1105:
 921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5419              		.loc 1 921 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
 921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5423              		.loc 1 921 1 is_stmt 0 view .LVU1667
 5424 0000 38B5     		push	{r3, r4, r5, lr}
 5425              		.cfi_def_cfa_offset 16
 5426              		.cfi_offset 3, -16
 5427              		.cfi_offset 4, -12
 5428              		.cfi_offset 5, -8
 5429              		.cfi_offset 14, -4
 922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5430              		.loc 1 922 3 is_stmt 1 view .LVU1668
 925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5431              		.loc 1 925 3 view .LVU1669
 925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5432              		.loc 1 925 6 is_stmt 0 view .LVU1670
 5433 0002 0028     		cmp	r0, #0
 5434 0004 00F0B480 		beq	.L348
 5435 0008 0446     		mov	r4, r0
 931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5436              		.loc 1 931 3 is_stmt 1 view .LVU1671
 934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5437              		.loc 1 934 3 view .LVU1672
 5438 000a 436D     		ldr	r3, [r0, #84]
 5439 000c 43F00203 		orr	r3, r3, #2
 5440 0010 4365     		str	r3, [r0, #84]
 940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5441              		.loc 1 940 3 view .LVU1673
 940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5442              		.loc 1 940 20 is_stmt 0 view .LVU1674
 5443 0012 0321     		movs	r1, #3
 5444 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5445              	.LVL447:
 952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif
 5446              		.loc 1 952 3 is_stmt 1 view .LVU1675
 5447 0018 2268     		ldr	r2, [r4]
 5448 001a D368     		ldr	r3, [r2, #12]
 5449 001c 43F40013 		orr	r3, r3, #2097152
 5450 0020 D360     		str	r3, [r2, #12]
 956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5451              		.loc 1 956 3 view .LVU1676
 956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5452              		.loc 1 956 6 is_stmt 0 view .LVU1677
 5453 0022 0546     		mov	r5, r0
 5454 0024 0028     		cmp	r0, #0
 5455 0026 00F09980 		beq	.L350
 5456              	.L346:
 5457              	.LVL448:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 347


1019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 5458              		.loc 1 1019 3 is_stmt 1 view .LVU1678
 5459 002a 2268     		ldr	r2, [r4]
 5460 002c 5368     		ldr	r3, [r2, #4]
 5461 002e 23F4FF63 		bic	r3, r3, #2040
 5462 0032 23F00703 		bic	r3, r3, #7
 5463 0036 5360     		str	r3, [r2, #4]
1031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 5464              		.loc 1 1031 3 view .LVU1679
 5465 0038 2368     		ldr	r3, [r4]
 5466 003a 40F2FF72 		movw	r2, #2047
 5467 003e 1A60     		str	r2, [r3]
1047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5468              		.loc 1 1047 3 view .LVU1680
 5469 0040 2268     		ldr	r2, [r4]
 5470 0042 9368     		ldr	r3, [r2, #8]
 5471 0044 23F0A043 		bic	r3, r3, #1342177280
 5472 0048 9360     		str	r3, [r2, #8]
1048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5473              		.loc 1 1048 3 view .LVU1681
 5474 004a 2268     		ldr	r2, [r4]
 5475 004c 9368     		ldr	r3, [r2, #8]
 5476 004e 43F00053 		orr	r3, r3, #536870912
 5477 0052 9360     		str	r3, [r2, #8]
1051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5478              		.loc 1 1051 3 view .LVU1682
 5479 0054 2268     		ldr	r2, [r4]
 5480 0056 D168     		ldr	r1, [r2, #12]
 5481 0058 464B     		ldr	r3, .L351
 5482 005a 0B40     		ands	r3, r3, r1
 5483 005c D360     		str	r3, [r2, #12]
1052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5484              		.loc 1 1052 3 view .LVU1683
 5485 005e 2268     		ldr	r2, [r4]
 5486 0060 D368     		ldr	r3, [r2, #12]
 5487 0062 43F00043 		orr	r3, r3, #-2147483648
 5488 0066 D360     		str	r3, [r2, #12]
1055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5489              		.loc 1 1055 3 view .LVU1684
 5490 0068 2268     		ldr	r2, [r4]
 5491 006a 1369     		ldr	r3, [r2, #16]
 5492 006c 23F4FF63 		bic	r3, r3, #2040
 5493 0070 23F00703 		bic	r3, r3, #7
 5494 0074 1361     		str	r3, [r2, #16]
1059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5495              		.loc 1 1059 3 view .LVU1685
 5496 0076 2268     		ldr	r2, [r4]
 5497 0078 5369     		ldr	r3, [r2, #20]
 5498 007a 03F04043 		and	r3, r3, #-1073741824
 5499 007e 5361     		str	r3, [r2, #20]
1062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5500              		.loc 1 1062 3 view .LVU1686
 5501 0080 2268     		ldr	r2, [r4]
 5502 0082 9369     		ldr	r3, [r2, #24]
 5503 0084 03F07843 		and	r3, r3, #-134217728
 5504 0088 9361     		str	r3, [r2, #24]
1067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 348


 5505              		.loc 1 1067 3 view .LVU1687
 5506 008a 2268     		ldr	r2, [r4]
 5507 008c 136A     		ldr	r3, [r2, #32]
 5508 008e 03F0F023 		and	r3, r3, #-268374016
 5509 0092 1362     		str	r3, [r2, #32]
1070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5510              		.loc 1 1070 3 view .LVU1688
 5511 0094 2268     		ldr	r2, [r4]
 5512 0096 536A     		ldr	r3, [r2, #36]
 5513 0098 03F0FF23 		and	r3, r3, #-16711936
 5514 009c 5362     		str	r3, [r2, #36]
1073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5515              		.loc 1 1073 3 view .LVU1689
 5516 009e 2268     		ldr	r2, [r4]
 5517 00a0 936A     		ldr	r3, [r2, #40]
 5518 00a2 03F0FF23 		and	r3, r3, #-16711936
 5519 00a6 9362     		str	r3, [r2, #40]
1076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5520              		.loc 1 1076 3 view .LVU1690
 5521 00a8 2268     		ldr	r2, [r4]
 5522 00aa 116B     		ldr	r1, [r2, #48]
 5523 00ac 324B     		ldr	r3, .L351+4
 5524 00ae 0B40     		ands	r3, r3, r1
 5525 00b0 1363     		str	r3, [r2, #48]
1080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5526              		.loc 1 1080 3 view .LVU1691
 5527 00b2 2268     		ldr	r2, [r4]
 5528 00b4 536B     		ldr	r3, [r2, #52]
 5529 00b6 3149     		ldr	r1, .L351+8
 5530 00b8 0B40     		ands	r3, r3, r1
 5531 00ba 5363     		str	r3, [r2, #52]
1084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5532              		.loc 1 1084 3 view .LVU1692
 5533 00bc 2268     		ldr	r2, [r4]
 5534 00be 936B     		ldr	r3, [r2, #56]
 5535 00c0 0B40     		ands	r3, r3, r1
 5536 00c2 9363     		str	r3, [r2, #56]
1088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5537              		.loc 1 1088 3 view .LVU1693
 5538 00c4 2268     		ldr	r2, [r4]
 5539 00c6 D36B     		ldr	r3, [r2, #60]
 5540 00c8 23F4FB63 		bic	r3, r3, #2008
 5541 00cc 23F00703 		bic	r3, r3, #7
 5542 00d0 D363     		str	r3, [r2, #60]
1096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR2 */
 5543              		.loc 1 1096 3 view .LVU1694
 5544 00d2 2168     		ldr	r1, [r4]
 5545 00d4 0A6E     		ldr	r2, [r1, #96]
 5546 00d6 2A4B     		ldr	r3, .L351+12
 5547 00d8 1A40     		ands	r2, r2, r3
 5548 00da 0A66     		str	r2, [r1, #96]
1098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR3 */
 5549              		.loc 1 1098 3 view .LVU1695
 5550 00dc 2168     		ldr	r1, [r4]
 5551 00de 4A6E     		ldr	r2, [r1, #100]
 5552 00e0 1A40     		ands	r2, r2, r3
 5553 00e2 4A66     		str	r2, [r1, #100]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 349


1100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   /* Reset register OFR4 */
 5554              		.loc 1 1100 3 view .LVU1696
 5555 00e4 2168     		ldr	r1, [r4]
 5556 00e6 8A6E     		ldr	r2, [r1, #104]
 5557 00e8 1A40     		ands	r2, r2, r3
 5558 00ea 8A66     		str	r2, [r1, #104]
1102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5559              		.loc 1 1102 3 view .LVU1697
 5560 00ec 2168     		ldr	r1, [r4]
 5561 00ee CA6E     		ldr	r2, [r1, #108]
 5562 00f0 1340     		ands	r3, r3, r2
 5563 00f2 CB66     		str	r3, [r1, #108]
1108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5564              		.loc 1 1108 3 view .LVU1698
 5565 00f4 2268     		ldr	r2, [r4]
 5566 00f6 D2F8A030 		ldr	r3, [r2, #160]
 5567 00fa DB0C     		lsrs	r3, r3, #19
 5568 00fc DB04     		lsls	r3, r3, #19
 5569 00fe C2F8A030 		str	r3, [r2, #160]
1111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5570              		.loc 1 1111 3 view .LVU1699
 5571 0102 2268     		ldr	r2, [r4]
 5572 0104 D2F8A430 		ldr	r3, [r2, #164]
 5573 0108 DB0C     		lsrs	r3, r3, #19
 5574 010a DB04     		lsls	r3, r3, #19
 5575 010c C2F8A430 		str	r3, [r2, #164]
1114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5576              		.loc 1 1114 3 view .LVU1700
 5577 0110 2268     		ldr	r2, [r4]
 5578 0112 D2F8B030 		ldr	r3, [r2, #176]
 5579 0116 DB0C     		lsrs	r3, r3, #19
 5580 0118 DB04     		lsls	r3, r3, #19
 5581 011a C2F8B030 		str	r3, [r2, #176]
1117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5582              		.loc 1 1117 3 view .LVU1701
 5583 011e 2268     		ldr	r2, [r4]
 5584 0120 D2F8B430 		ldr	r3, [r2, #180]
 5585 0124 23F07F13 		bic	r3, r3, #8323199
 5586 0128 C2F8B430 		str	r3, [r2, #180]
1125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5587              		.loc 1 1125 3 view .LVU1702
 5588              	.LVL449:
 5589              	.LBB732:
 5590              	.LBI732:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 5591              		.loc 2 6706 26 view .LVU1703
 5592              	.LBB733:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5593              		.loc 2 6708 3 view .LVU1704
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5594              		.loc 2 6708 12 is_stmt 0 view .LVU1705
 5595 012c 154B     		ldr	r3, .L351+16
 5596 012e 9B68     		ldr	r3, [r3, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5597              		.loc 2 6708 68 view .LVU1706
 5598 0130 13F0010F 		tst	r3, #1
 5599 0134 06D1     		bne	.L347
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 350


 5600              	.LVL450:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 5601              		.loc 2 6708 68 view .LVU1707
 5602              	.LBE733:
 5603              	.LBE732:
1134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5604              		.loc 1 1134 5 is_stmt 1 view .LVU1708
 5605 0136 144A     		ldr	r2, .L351+20
 5606 0138 9368     		ldr	r3, [r2, #8]
 5607 013a 23F0FF73 		bic	r3, r3, #33423360
 5608 013e 23F48033 		bic	r3, r3, #65536
 5609 0142 9360     		str	r3, [r2, #8]
 5610              	.L347:
1158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 5611              		.loc 1 1158 3 view .LVU1709
 5612 0144 2046     		mov	r0, r4
 5613 0146 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5614              	.LVL451:
1162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5615              		.loc 1 1162 3 view .LVU1710
 5616 014a 0023     		movs	r3, #0
 5617 014c A365     		str	r3, [r4, #88]
1169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5618              		.loc 1 1169 3 view .LVU1711
1169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5619              		.loc 1 1169 38 is_stmt 0 view .LVU1712
 5620 014e E365     		str	r3, [r4, #92]
1170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5621              		.loc 1 1170 3 is_stmt 1 view .LVU1713
1170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5622              		.loc 1 1170 38 is_stmt 0 view .LVU1714
 5623 0150 2366     		str	r3, [r4, #96]
1174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5624              		.loc 1 1174 3 is_stmt 1 view .LVU1715
1174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5625              		.loc 1 1174 15 is_stmt 0 view .LVU1716
 5626 0152 6365     		str	r3, [r4, #84]
1177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5627              		.loc 1 1177 3 is_stmt 1 view .LVU1717
1177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5628              		.loc 1 1177 3 view .LVU1718
 5629 0154 84F85030 		strb	r3, [r4, #80]
1177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5630              		.loc 1 1177 3 view .LVU1719
1180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5631              		.loc 1 1180 3 view .LVU1720
 5632              	.LVL452:
 5633              	.L345:
1181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5634              		.loc 1 1181 1 is_stmt 0 view .LVU1721
 5635 0158 2846     		mov	r0, r5
 5636 015a 38BD     		pop	{r3, r4, r5, pc}
 5637              	.LVL453:
 5638              	.L350:
 959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5639              		.loc 1 959 5 is_stmt 1 view .LVU1722
 959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 351


 5640              		.loc 1 959 22 is_stmt 0 view .LVU1723
 5641 015c 2046     		mov	r0, r4
 5642              	.LVL454:
 959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5643              		.loc 1 959 22 view .LVU1724
 5644 015e FFF7FEFF 		bl	ADC_Disable
 5645              	.LVL455:
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5646              		.loc 1 962 5 is_stmt 1 view .LVU1725
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5647              		.loc 1 962 8 is_stmt 0 view .LVU1726
 5648 0162 0546     		mov	r5, r0
 5649 0164 0028     		cmp	r0, #0
 5650 0166 7FF460AF 		bne	.L346
 965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5651              		.loc 1 965 7 is_stmt 1 view .LVU1727
 965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5652              		.loc 1 965 19 is_stmt 0 view .LVU1728
 5653 016a 0123     		movs	r3, #1
 5654 016c 6365     		str	r3, [r4, #84]
 5655 016e 5CE7     		b	.L346
 5656              	.LVL456:
 5657              	.L348:
 927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   }
 5658              		.loc 1 927 12 view .LVU1729
 5659 0170 0125     		movs	r5, #1
 5660 0172 F1E7     		b	.L345
 5661              	.L352:
 5662              		.align	2
 5663              	.L351:
 5664 0174 04800080 		.word	-2147450876
 5665 0178 300882E0 		.word	-528349136
 5666 017c 200882E0 		.word	-528349152
 5667 0180 00F0FF03 		.word	67104768
 5668 0184 00000450 		.word	1342439424
 5669 0188 00030450 		.word	1342440192
 5670              		.cfi_endproc
 5671              	.LFE1105:
 5673              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5674              		.align	1
 5675              		.global	HAL_ADC_Stop
 5676              		.syntax unified
 5677              		.thumb
 5678              		.thumb_func
 5680              	HAL_ADC_Stop:
 5681              	.LVL457:
 5682              	.LFB1109:
1580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5683              		.loc 1 1580 1 is_stmt 1 view -0
 5684              		.cfi_startproc
 5685              		@ args = 0, pretend = 0, frame = 0
 5686              		@ frame_needed = 0, uses_anonymous_args = 0
1581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5687              		.loc 1 1581 3 view .LVU1731
1584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5688              		.loc 1 1584 3 view .LVU1732
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 352


 5689              		.loc 1 1587 3 view .LVU1733
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5690              		.loc 1 1587 3 view .LVU1734
 5691 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5692 0004 012B     		cmp	r3, #1
 5693 0006 1AD0     		beq	.L356
1580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5694              		.loc 1 1580 1 is_stmt 0 discriminator 2 view .LVU1735
 5695 0008 10B5     		push	{r4, lr}
 5696              		.cfi_def_cfa_offset 8
 5697              		.cfi_offset 4, -8
 5698              		.cfi_offset 14, -4
 5699 000a 0446     		mov	r4, r0
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5700              		.loc 1 1587 3 is_stmt 1 discriminator 2 view .LVU1736
 5701 000c 0123     		movs	r3, #1
 5702 000e 80F85030 		strb	r3, [r0, #80]
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5703              		.loc 1 1587 3 discriminator 2 view .LVU1737
1594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5704              		.loc 1 1594 3 discriminator 2 view .LVU1738
1594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5705              		.loc 1 1594 20 is_stmt 0 discriminator 2 view .LVU1739
 5706 0012 0321     		movs	r1, #3
 5707 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5708              	.LVL458:
1598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5709              		.loc 1 1598 3 is_stmt 1 discriminator 2 view .LVU1740
1598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5710              		.loc 1 1598 6 is_stmt 0 discriminator 2 view .LVU1741
 5711 0018 18B1     		cbz	r0, .L361
 5712              	.L355:
1620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5713              		.loc 1 1620 3 is_stmt 1 view .LVU1742
1620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5714              		.loc 1 1620 3 view .LVU1743
 5715 001a 0023     		movs	r3, #0
 5716 001c 84F85030 		strb	r3, [r4, #80]
1620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5717              		.loc 1 1620 3 view .LVU1744
1623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5718              		.loc 1 1623 3 view .LVU1745
1624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5719              		.loc 1 1624 1 is_stmt 0 view .LVU1746
 5720 0020 10BD     		pop	{r4, pc}
 5721              	.LVL459:
 5722              	.L361:
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5723              		.loc 1 1601 5 is_stmt 1 view .LVU1747
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5724              		.loc 1 1601 22 is_stmt 0 view .LVU1748
 5725 0022 2046     		mov	r0, r4
 5726              	.LVL460:
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5727              		.loc 1 1601 22 view .LVU1749
 5728 0024 FFF7FEFF 		bl	ADC_Disable
 5729              	.LVL461:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 353


1604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5730              		.loc 1 1604 5 is_stmt 1 view .LVU1750
1604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5731              		.loc 1 1604 8 is_stmt 0 view .LVU1751
 5732 0028 0028     		cmp	r0, #0
 5733 002a F6D1     		bne	.L355
1612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5734              		.loc 1 1612 7 is_stmt 1 view .LVU1752
 5735 002c 636D     		ldr	r3, [r4, #84]
 5736 002e 23F48853 		bic	r3, r3, #4352
 5737 0032 23F00103 		bic	r3, r3, #1
 5738 0036 43F00103 		orr	r3, r3, #1
 5739 003a 6365     		str	r3, [r4, #84]
 5740 003c EDE7     		b	.L355
 5741              	.LVL462:
 5742              	.L356:
 5743              		.cfi_def_cfa_offset 0
 5744              		.cfi_restore 4
 5745              		.cfi_restore 14
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5746              		.loc 1 1587 3 is_stmt 0 view .LVU1753
 5747 003e 0220     		movs	r0, #2
 5748              	.LVL463:
1624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5749              		.loc 1 1624 1 view .LVU1754
 5750 0040 7047     		bx	lr
 5751              		.cfi_endproc
 5752              	.LFE1109:
 5754              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5755              		.align	1
 5756              		.global	HAL_ADC_Stop_IT
 5757              		.syntax unified
 5758              		.thumb
 5759              		.thumb_func
 5761              	HAL_ADC_Stop_IT:
 5762              	.LVL464:
 5763              	.LFB1113:
2033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5764              		.loc 1 2033 1 is_stmt 1 view -0
 5765              		.cfi_startproc
 5766              		@ args = 0, pretend = 0, frame = 0
 5767              		@ frame_needed = 0, uses_anonymous_args = 0
2034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5768              		.loc 1 2034 3 view .LVU1756
2037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5769              		.loc 1 2037 3 view .LVU1757
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5770              		.loc 1 2040 3 view .LVU1758
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5771              		.loc 1 2040 3 view .LVU1759
 5772 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5773 0004 012B     		cmp	r3, #1
 5774 0006 1FD0     		beq	.L365
2033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5775              		.loc 1 2033 1 is_stmt 0 discriminator 2 view .LVU1760
 5776 0008 10B5     		push	{r4, lr}
 5777              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 354


 5778              		.cfi_offset 4, -8
 5779              		.cfi_offset 14, -4
 5780 000a 0446     		mov	r4, r0
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5781              		.loc 1 2040 3 is_stmt 1 discriminator 2 view .LVU1761
 5782 000c 0123     		movs	r3, #1
 5783 000e 80F85030 		strb	r3, [r0, #80]
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5784              		.loc 1 2040 3 discriminator 2 view .LVU1762
2047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5785              		.loc 1 2047 3 discriminator 2 view .LVU1763
2047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5786              		.loc 1 2047 20 is_stmt 0 discriminator 2 view .LVU1764
 5787 0012 0321     		movs	r1, #3
 5788 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5789              	.LVL465:
2051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5790              		.loc 1 2051 3 is_stmt 1 discriminator 2 view .LVU1765
2051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5791              		.loc 1 2051 6 is_stmt 0 discriminator 2 view .LVU1766
 5792 0018 18B1     		cbz	r0, .L370
 5793              	.L364:
2077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5794              		.loc 1 2077 3 is_stmt 1 view .LVU1767
2077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5795              		.loc 1 2077 3 view .LVU1768
 5796 001a 0023     		movs	r3, #0
 5797 001c 84F85030 		strb	r3, [r4, #80]
2077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5798              		.loc 1 2077 3 view .LVU1769
2080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5799              		.loc 1 2080 3 view .LVU1770
2081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5800              		.loc 1 2081 1 is_stmt 0 view .LVU1771
 5801 0020 10BD     		pop	{r4, pc}
 5802              	.LVL466:
 5803              	.L370:
2055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5804              		.loc 1 2055 5 is_stmt 1 view .LVU1772
 5805 0022 2268     		ldr	r2, [r4]
 5806 0024 5368     		ldr	r3, [r2, #4]
 5807 0026 23F01C03 		bic	r3, r3, #28
 5808 002a 5360     		str	r3, [r2, #4]
2058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5809              		.loc 1 2058 5 view .LVU1773
2058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5810              		.loc 1 2058 22 is_stmt 0 view .LVU1774
 5811 002c 2046     		mov	r0, r4
 5812              	.LVL467:
2058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5813              		.loc 1 2058 22 view .LVU1775
 5814 002e FFF7FEFF 		bl	ADC_Disable
 5815              	.LVL468:
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5816              		.loc 1 2061 5 is_stmt 1 view .LVU1776
2061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5817              		.loc 1 2061 8 is_stmt 0 view .LVU1777
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 355


 5818 0032 0028     		cmp	r0, #0
 5819 0034 F1D1     		bne	.L364
2069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5820              		.loc 1 2069 7 is_stmt 1 view .LVU1778
 5821 0036 636D     		ldr	r3, [r4, #84]
 5822 0038 23F48853 		bic	r3, r3, #4352
 5823 003c 23F00103 		bic	r3, r3, #1
 5824 0040 43F00103 		orr	r3, r3, #1
 5825 0044 6365     		str	r3, [r4, #84]
 5826 0046 E8E7     		b	.L364
 5827              	.LVL469:
 5828              	.L365:
 5829              		.cfi_def_cfa_offset 0
 5830              		.cfi_restore 4
 5831              		.cfi_restore 14
2040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5832              		.loc 1 2040 3 is_stmt 0 view .LVU1779
 5833 0048 0220     		movs	r0, #2
 5834              	.LVL470:
2081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5835              		.loc 1 2081 1 view .LVU1780
 5836 004a 7047     		bx	lr
 5837              		.cfi_endproc
 5838              	.LFE1113:
 5840              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5841              		.align	1
 5842              		.global	HAL_ADC_Stop_DMA
 5843              		.syntax unified
 5844              		.thumb
 5845              		.thumb_func
 5847              	HAL_ADC_Stop_DMA:
 5848              	.LVL471:
 5849              	.LFB1115:
2207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5850              		.loc 1 2207 1 is_stmt 1 view -0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 0
 5853              		@ frame_needed = 0, uses_anonymous_args = 0
2207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5854              		.loc 1 2207 1 is_stmt 0 view .LVU1782
 5855 0000 38B5     		push	{r3, r4, r5, lr}
 5856              		.cfi_def_cfa_offset 16
 5857              		.cfi_offset 3, -16
 5858              		.cfi_offset 4, -12
 5859              		.cfi_offset 5, -8
 5860              		.cfi_offset 14, -4
2208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5861              		.loc 1 2208 3 is_stmt 1 view .LVU1783
2211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5862              		.loc 1 2211 3 view .LVU1784
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5863              		.loc 1 2214 3 view .LVU1785
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5864              		.loc 1 2214 3 view .LVU1786
 5865 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5866 0006 012B     		cmp	r3, #1
 5867 0008 39D0     		beq	.L377
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 356


 5868 000a 0446     		mov	r4, r0
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5869              		.loc 1 2214 3 discriminator 2 view .LVU1787
 5870 000c 0123     		movs	r3, #1
 5871 000e 80F85030 		strb	r3, [r0, #80]
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5872              		.loc 1 2214 3 discriminator 2 view .LVU1788
2220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5873              		.loc 1 2220 3 discriminator 2 view .LVU1789
2220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5874              		.loc 1 2220 20 is_stmt 0 discriminator 2 view .LVU1790
 5875 0012 0321     		movs	r1, #3
 5876 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5877              	.LVL472:
2224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5878              		.loc 1 2224 3 is_stmt 1 discriminator 2 view .LVU1791
2224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****   {
 5879              		.loc 1 2224 6 is_stmt 0 discriminator 2 view .LVU1792
 5880 0018 0546     		mov	r5, r0
 5881 001a E8B9     		cbnz	r0, .L373
2230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 5882              		.loc 1 2230 5 is_stmt 1 view .LVU1793
 5883 001c 2268     		ldr	r2, [r4]
 5884 001e D368     		ldr	r3, [r2, #12]
 5885 0020 23F00103 		bic	r3, r3, #1
 5886 0024 D360     		str	r3, [r2, #12]
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5887              		.loc 1 2235 5 view .LVU1794
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5888              		.loc 1 2235 13 is_stmt 0 view .LVU1795
 5889 0026 E06C     		ldr	r0, [r4, #76]
 5890              	.LVL473:
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5891              		.loc 1 2235 25 view .LVU1796
 5892 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 5893 002c DBB2     		uxtb	r3, r3
2235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5894              		.loc 1 2235 8 view .LVU1797
 5895 002e 022B     		cmp	r3, #2
 5896 0030 17D0     		beq	.L379
 5897              	.L374:
 5898              	.LVL474:
2248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5899              		.loc 1 2248 5 is_stmt 1 view .LVU1798
 5900 0032 2268     		ldr	r2, [r4]
 5901 0034 5368     		ldr	r3, [r2, #4]
 5902 0036 23F01003 		bic	r3, r3, #16
 5903 003a 5360     		str	r3, [r2, #4]
2253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5904              		.loc 1 2253 5 view .LVU1799
2253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5905              		.loc 1 2253 8 is_stmt 0 view .LVU1800
 5906 003c DDB9     		cbnz	r5, .L375
2255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5907              		.loc 1 2255 7 is_stmt 1 view .LVU1801
2255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5908              		.loc 1 2255 24 is_stmt 0 view .LVU1802
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 357


 5909 003e 2046     		mov	r0, r4
 5910 0040 FFF7FEFF 		bl	ADC_Disable
 5911              	.LVL475:
 5912 0044 0546     		mov	r5, r0
 5913              	.LVL476:
 5914              	.L376:
2263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5915              		.loc 1 2263 5 is_stmt 1 view .LVU1803
2263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     {
 5916              		.loc 1 2263 8 is_stmt 0 view .LVU1804
 5917 0046 3DB9     		cbnz	r5, .L373
2271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5918              		.loc 1 2271 7 is_stmt 1 view .LVU1805
 5919 0048 636D     		ldr	r3, [r4, #84]
 5920 004a 23F48853 		bic	r3, r3, #4352
 5921 004e 23F00103 		bic	r3, r3, #1
 5922 0052 43F00103 		orr	r3, r3, #1
 5923 0056 6365     		str	r3, [r4, #84]
 5924              	.LVL477:
 5925              	.L373:
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5926              		.loc 1 2280 3 view .LVU1806
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5927              		.loc 1 2280 3 view .LVU1807
 5928 0058 0023     		movs	r3, #0
 5929 005a 84F85030 		strb	r3, [r4, #80]
2280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5930              		.loc 1 2280 3 view .LVU1808
2283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** }
 5931              		.loc 1 2283 3 view .LVU1809
 5932              	.LVL478:
 5933              	.L372:
2284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5934              		.loc 1 2284 1 is_stmt 0 view .LVU1810
 5935 005e 2846     		mov	r0, r5
 5936 0060 38BD     		pop	{r3, r4, r5, pc}
 5937              	.LVL479:
 5938              	.L379:
2237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5939              		.loc 1 2237 7 is_stmt 1 view .LVU1811
2237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5940              		.loc 1 2237 24 is_stmt 0 view .LVU1812
 5941 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 5942              	.LVL480:
2240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5943              		.loc 1 2240 7 is_stmt 1 view .LVU1813
2240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       {
 5944              		.loc 1 2240 10 is_stmt 0 view .LVU1814
 5945 0066 0546     		mov	r5, r0
 5946 0068 0028     		cmp	r0, #0
 5947 006a E2D0     		beq	.L374
2243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****       }
 5948              		.loc 1 2243 9 is_stmt 1 view .LVU1815
 5949 006c 636D     		ldr	r3, [r4, #84]
 5950 006e 43F04003 		orr	r3, r3, #64
 5951 0072 6365     		str	r3, [r4, #84]
 5952 0074 DDE7     		b	.L374
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 358


 5953              	.LVL481:
 5954              	.L375:
2259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5955              		.loc 1 2259 7 view .LVU1816
2259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c ****     }
 5956              		.loc 1 2259 13 is_stmt 0 view .LVU1817
 5957 0076 2046     		mov	r0, r4
 5958 0078 FFF7FEFF 		bl	ADC_Disable
 5959              	.LVL482:
 5960 007c E3E7     		b	.L376
 5961              	.LVL483:
 5962              	.L377:
2214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc.c **** 
 5963              		.loc 1 2214 3 view .LVU1818
 5964 007e 0225     		movs	r5, #2
 5965 0080 EDE7     		b	.L372
 5966              		.cfi_endproc
 5967              	.LFE1115:
 5969              		.text
 5970              	.Letext0:
 5971              		.file 4 "/Users/aeheigl/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 5972              		.file 5 "/Users/aeheigl/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 5973              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 5974              		.file 7 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wbxx.h"
 5975              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 5976              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 5977              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_adc.h"
 5978              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_adc_ex.h"
 5979              		.file 12 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 5980              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 359


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wbxx_hal_adc.c
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:20     .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:26     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:42     .text.HAL_ADC_Init:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:48     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:548    .text.HAL_ADC_Init:00000000000001c8 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:557    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:563    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:578    .text.HAL_ADC_PollForConversion:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:584    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:767    .text.HAL_ADC_PollForEvent:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:773    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:960    .text.HAL_ADC_GetValue:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:966    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:987    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:993    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1008   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1014   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1029   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1035   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1061   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1067   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1082   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1088   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1103   .text.HAL_ADC_IRQHandler:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1109   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1602   .text.ADC_DMAConvCplt:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1608   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1742   .text.ADC_DMAError:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1748   .text.ADC_DMAError:0000000000000000 ADC_DMAError
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1781   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:1787   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:2930   .text.HAL_ADC_ConfigChannel:0000000000000364 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:2944   .text.HAL_ADC_ConfigChannel:0000000000000388 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:3244   .text.HAL_ADC_ConfigChannel:0000000000000484 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:3252   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:3258   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4045   .text.HAL_ADC_AnalogWDGConfig:0000000000000318 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4053   .text.HAL_ADC_AnalogWDGConfig:0000000000000320 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4135   .text.HAL_ADC_GetState:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4141   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4160   .text.HAL_ADC_GetError:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4166   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4185   .text.ADC_ConversionStop:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4191   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4511   .text.ADC_ConversionStop:00000000000000fc $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4516   .text.ADC_Enable:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4522   .text.ADC_Enable:0000000000000000 ADC_Enable
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4736   .text.ADC_Enable:00000000000000c0 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4744   .text.HAL_ADC_Start:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4750   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4881   .text.HAL_ADC_Start_IT:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:4887   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5056   .text.HAL_ADC_Start_DMA:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5062   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5230   .text.HAL_ADC_Start_DMA:00000000000000b4 $d
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s 			page 360


/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5237   .text.ADC_Disable:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5243   .text.ADC_Disable:0000000000000000 ADC_Disable
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5410   .text.HAL_ADC_DeInit:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5416   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5664   .text.HAL_ADC_DeInit:0000000000000174 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5674   .text.HAL_ADC_Stop:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5680   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5755   .text.HAL_ADC_Stop_IT:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5761   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5841   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccobxniu.s:5847   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
