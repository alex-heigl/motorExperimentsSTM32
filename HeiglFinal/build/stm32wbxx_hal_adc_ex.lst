ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32wbxx_hal_adc_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_ADCEx_Calibration_Start
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADCEx_Calibration_Start:
  27              	.LVL0:
  28              	.LFB1104:
  29              		.file 1 "Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c"
   1:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
   2:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @file    stm32wbxx_hal_adc_ex.c
   4:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           + Operation functions
   9:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of ADC group injected,
  10:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *                using 2 possible modes: polling, interruption (not available on devices: STM32WB
  11:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *             ++ Calibration
  12:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *               +++ ADC automatic self-calibration
  13:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *               +++ Calibration factors get or set
  14:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           + Control functions
  15:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *             ++ Channels configuration on ADC group injected (not available on devices: STM32WB1
  16:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           + State functions
  17:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *             ++ ADC group injected contexts queue management (not available on devices: STM32WB1
  18:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  19:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          "stm32wbxx_hal_adc.c".
  20:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   ******************************************************************************
  21:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @attention
  22:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
  23:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * Copyright (c) 2019 STMicroelectronics.
  24:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * All rights reserved.
  25:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
  26:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  27:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * in the root directory of this software component.
  28:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  29:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 2


  30:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   ******************************************************************************
  31:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   @verbatim
  32:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   [..]
  33:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  34:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       available in file of generic functions "stm32wbxx_hal_adc.c".
  35:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   [..]
  36:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   @endverbatim
  37:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   ******************************************************************************
  38:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
  39:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  40:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  41:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #include "stm32wbxx_hal.h"
  42:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  43:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /** @addtogroup STM32WBxx_HAL_Driver
  44:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @{
  45:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
  46:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  47:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  48:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  49:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @{
  50:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
  51:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  52:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  53:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  54:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  55:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  56:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  57:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  58:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @{
  59:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
  60:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  61:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  62:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                            ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  63:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                            ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))  /*!< ADC_JSQR fields of parameters tha
  64:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                                                   once the ADC is enabled */
  65:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  66:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  67:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  68:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  69:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 46.9kHz (ADC clock     */
  70:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* source PLL SAI 12MHz, ADC clock prescaler 256), CPU frequency 64MHz.       */
  71:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  72:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /*                      = 158 379 CPU cycles                                  */
  73:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (158379UL)   /*!< ADC calibration time-out value (unit: CPU
  74:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
  75:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  76:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
  77:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @}
  78:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
  79:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  80:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  81:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  82:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  83:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  85:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  86:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @{
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 3


  87:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
  88:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  89:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  90:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  91:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
  92:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** @verbatim
  93:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****  ===============================================================================
  94:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       ##### IO operation functions #####
  95:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****  ===============================================================================
  96:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  97:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
  98:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  99:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
 100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
 101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected (not available on devices: STM32WB10xx, STM32WB15x
 103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected (not available on devices: STM32WB10xx, STM32WB15xx
 104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected (not available on devices: STM32WB10xx
 105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion (not available on devices: STM32WB10x
 106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions (not available on devices
 107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions (not available on devices
 108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** @endverbatim
 110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @{
 111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended (1)
 122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
 123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
 124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
 125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
  30              		.loc 1 127 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 127 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 24
 128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(SingleDiff);
 130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t calibration_index;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 4


 132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t calibration_factor_accumulated = 0;
 133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t backup_setting_cfgr1;
 134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tickstart;
 135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t adc_clk_async_presc;
 136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __IO uint32_t delay_cpu_cycles;
 137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  42              		.loc 1 139 3 is_stmt 1 view .LVU2
 140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  43              		.loc 1 140 3 view .LVU3
  44              		.loc 1 140 17 is_stmt 0 view .LVU4
  45 0004 0023     		movs	r3, #0
  46 0006 0193     		str	r3, [sp, #4]
 141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  47              		.loc 1 143 3 is_stmt 1 view .LVU5
 144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
  48              		.loc 1 144 3 view .LVU6
 145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
 147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  49              		.loc 1 147 3 view .LVU7
  50              		.loc 1 147 3 view .LVU8
  51 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
  52 000c 012B     		cmp	r3, #1
  53 000e 41D0     		beq	.L8
  54 0010 0446     		mov	r4, r0
  55 0012 0D46     		mov	r5, r1
  56              		.loc 1 147 3 discriminator 2 view .LVU9
  57 0014 0123     		movs	r3, #1
  58 0016 80F85030 		strb	r3, [r0, #80]
  59              		.loc 1 147 3 discriminator 2 view .LVU10
 148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  60              		.loc 1 152 3 discriminator 2 view .LVU11
  61              		.loc 1 152 20 is_stmt 0 discriminator 2 view .LVU12
  62 001a FFF7FEFF 		bl	ADC_Disable
  63              	.LVL1:
 153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  64              		.loc 1 155 3 is_stmt 1 discriminator 2 view .LVU13
  65              		.loc 1 155 6 is_stmt 0 discriminator 2 view .LVU14
  66 001e 80BB     		cbnz	r0, .L3
 156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Set ADC state */
 158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 5


  67              		.loc 1 163 5 is_stmt 1 view .LVU15
  68 0020 636D     		ldr	r3, [r4, #84]
  69 0022 23F48853 		bic	r3, r3, #4352
  70 0026 23F00203 		bic	r3, r3, #2
  71 002a 43F00203 		orr	r3, r3, #2
  72 002e 6365     		str	r3, [r4, #84]
 164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Manage settings impacting calibration */
 171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* - Disable ADC mode auto power-off */
 172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* - Disable ADC DMA transfer request during calibration */
 173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Note: Specificity of this STM32 series: Calibration factor is          */
 174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*       available in data register and also transferred by DMA.          */
 175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*       To not insert ADC calibration factor among ADC conversion data   */
 176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*       in array variable, DMA transfer must be disabled during          */
 177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*       calibration.                                                     */
 178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     backup_setting_cfgr1 = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC
 179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* ADC calibration procedure */
 182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Note: Perform an averaging of 8 calibrations for optimized accuracy */
 183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     for (calibration_index = 0UL; calibration_index < 8UL; calibration_index++)
 184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Start ADC calibration */
 186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       LL_ADC_StartCalibration(hadc->Instance);
 187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, SingleDiff);
  73              		.loc 1 189 5 view .LVU16
  74 0030 2268     		ldr	r2, [r4]
  75              	.LVL2:
  76              	.LBB232:
  77              	.LBI232:
  78              		.file 2 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h"
   1:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
   2:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @file    stm32wbxx_ll_adc.h
   4:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
   9:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
  12:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
  16:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  18:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  19:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 6


  20:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #ifndef STM32WBxx_LL_ADC_H
  21:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define STM32WBxx_LL_ADC_H
  22:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  23:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** extern "C" {
  25:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
  26:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  27:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #include "stm32wbxx.h"
  29:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  30:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @addtogroup STM32WBxx_LL_Driver
  31:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  32:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  33:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  34:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC1)
  35:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  36:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  38:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  39:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  40:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  43:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
  46:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
  47:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  48:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  53:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
  56:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* No register ADC_SQRx on this ADC peripheral version */
  57:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
  58:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  59:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  60:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  61:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  62:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  63:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  64:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  65:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
  66:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  67:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  68:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  69:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  70:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
  71:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ1" 
  72:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ2" 
  73:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ3" 
  74:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ4" 
  75:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ5" 
  76:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ6" 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 7


  77:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ7" 
  78:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ8" 
  79:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
  80:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  81:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  82:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  83:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  84:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  85:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  86:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  87:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  88:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  89:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  90:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  91:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  92:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  93:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  94:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  95:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  96:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
  97:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  98:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
  99:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - data register offset                                                     */
 103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
 110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - regular trigger source                                                   */
 128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - regular trigger edge                                                     */
 129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 8


 134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - injected trigger source                                                  */
 156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - injected trigger edge                                                    */
 157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel identifier defined by number                                     */
 187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 9


 191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
 202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 10


 248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* channels literals definition.                                              */
 289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 11


 305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
 311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* the relevant bits for:                                                     */
 314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   common sampling time available.                                          */
 319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* the relevant bits for:                                                     */
 328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*   selection on groups.                                                     */
 347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 12


 362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC registers bits positions */
 391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Value equivalent to bitfield "ADC_CFGR1_RES" p
 393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR1_AWDSGL
 394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16UL) /* Value equivalent to bitfield "ADC_TR_HT" posit
 395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Value equivalent to bitfield "ADC_SMPR_SMP1" p
 415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Value equivalent to bitfield "ADC_SMPR_SMP2" p
 416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Value equivalent to bitfield "ADC_SMPR_SMPSEL0
 417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ADC_CFGR1_RES_BITOFFSET_POS
 418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWDSGL_BITOFFSET_POS      ADC_CFGR1_AWDSGL_BITOFFSET_POS
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 13


 419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC registers bits groups */
 429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* ADC internal channels related definitions */
 437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3600UL)                     /* Analog voltage reference
 440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Temperature sensor */
 441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a register from a register basis from which an offset
 461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is applied.
 462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Pointer to register address
 465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 14


 476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and multimode
 483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sharing the same ADC common instance):
 487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         disabled.
 489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, this parameter has some cl
 528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              
 531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              For more details, refer to description of this functio
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 15


 533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions with prefix "REG").
 558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 16


 590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              data preserved or overwritten.
 606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions with prefix "INJ").
 621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is conditioned to ADC state:
 623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance must be disabled.
 624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to description of each function for setting
 632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         conditioned to ADC state.
 633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** typedef struct
 635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 17


 647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
 695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 18


 704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* DMA transfer.                                                              */
 732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* !ADC_SUPPORT_2_5_MSPS */
 746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 19


 761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 20


 818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
 836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** * @{
 838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** */
 839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if !defined(ADC_SUPPORT_2_5_MSPS)
 871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* !ADC_SUPPORT_2_5_MSPS */
 874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 21


 875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 22


 932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
 937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
 945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 23


 989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
 992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
 996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
 997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
 998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
1001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** * @{
1002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** */
1003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to full
1004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to not 
1005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
1015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
1016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
1017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
1018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
1019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
1020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
1021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
1022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
1029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
1045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 24


1046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 series, parame
1049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 series, parame
1050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
1061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
1087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 25


1103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 26


1160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
1192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
1193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
1194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
1195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
1196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
1197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
1198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
1199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 27


1217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (0x00000000UL)                                    /*!< A
1218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC analog watchdog 2 and 3" not available on ADC peripheral of this STM32WB device */
1233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
1247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
1248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
1249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
1250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
1251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
1252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
1253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
1254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
1255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
1256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
1257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
1258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
1259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
1260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
1261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
1262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
1263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
1264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
1265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
1266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
1267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
1268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
1269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 28


1274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 29


1331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined (ADC_SUPPORT_2_5_MSPS)
1349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )   /*!< ADC analog watchdog thres
1350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)   /*!< ADC analog watchdog thres
1351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)   /*!< ADC analog watchdog both 
1352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
1367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
1384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 30


1388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not timeout values.
1426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         above each literal definition.
1428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       not timeout values.                                                  */
1433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       STM32 series:                                                         */
1438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         cycles                                                             */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 31


1445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         configuration.                                                     */
1447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       ( 12UL)  /*!< Delay for internal voltage reference stabi
1460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* parameter "tSTART").                                                       */
1464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: us                                                                   */
1465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
1467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
1470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Write a value in ADC register
1497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register to be written
1499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
1501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 32


1502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Read a value in ADC register
1506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __REG__ Register to be read
1508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Register value
1509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
1513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
1517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Example:
1523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will return decimal number "4".
1525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number is returned, either defined with number
1527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (                                                                                     \
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 33


1559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      )                                                                                     \
1561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                       \
1562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (                                                                                       \
1563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    )                                                                                       \
1565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from number in decimal format.
1570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Example:
1571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (                                                                            \
1607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (                                                                                             
1614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 34


1616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      )                                                                                             
1618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (                                                                                               
1620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    )                                                                                               
1624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC internal channel:
1632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned from ADC registers,
1641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because internal and external channels share the same channel
1642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         parameters definitions of driver.
1644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 35


1673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a value defined from parameter definition of
1686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC registers.
1689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 36


1730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or a value from functions where a channel number is
1748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned from ADC registers,
1749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because internal and external channels share the same channel
1750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         parameters definitions of driver.
1752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (                                                                            \
1762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
1768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
1774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 37


1787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
1831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
1832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
1833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
1835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
1839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 38


1844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
1845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
1869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
1873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
1875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
1885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
1886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
1888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
1889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
1891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
1892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
1894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
1895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
1897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
1898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
1900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 39


1901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
1903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
1904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
1906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ         (1)
1907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
1909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
1910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
1912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
1913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
1915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
1916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
1918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
1919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
1921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
1922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
1924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
1925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
1927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
1928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
1930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
1931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
1933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
1934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
1936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
1937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
1939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
1940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
1942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
1943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
1944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
1947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
1948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
1949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
1950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
1951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
1952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
1953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
1954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
1955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 40


1958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    :                                                                                               
1963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
1965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
1966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         different of 12 bits.
1971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            (< ADCx param >,
1977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            );
1979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
1987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
1990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
1991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         different of 12 bits.
1994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *            );
2001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 41


2015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential ended to 0x2A:
2033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC1,
2035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC common register instance
2052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC123_COMMON)
2056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC12_COMMON)
2059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (ADC1_COMMON)
2062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC common instance are disabled.
2067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 42


2072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are disabled.
2078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled.
2080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif
2094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (refer to reference manual).
2101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a resolution to another resolution.
2114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 43


2129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((__DATA__)                                                                 \
2133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                       (unit: digital value).
2146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       __ADC_DATA__,\
2155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         reference VrefInt.
2164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         stored in system memory for each device during production.
2166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         connected to pin Vref+.
2168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal voltage reference VrefInt.
2174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 44


2186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       (__ADC_RESOLUTION__),                    \
2190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                       LL_ADC_RESOLUTION_12B))
2191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         stored in system memory for each device during production.
2197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calculation formula:
2198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  parameters are correct (address and data).
2210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  less accurate than calibrated values),
2213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor.
2223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                 sensor voltage has been measured.
2230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 45


2243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (refer to device datasheet).
2256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calculation formula:
2257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   (unit: digital value)
2261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  of the current device has characteristics in line with
2267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  datasheet typical values.
2268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                       On STM32WB, refer to device datasheet parameter "Avg_Slop
2282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                       On STM32WB, refer to device datasheet parameter "V30" (co
2284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This parameter can be one of the following values:
2289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 46


2300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   ((( (                                                                        \
2302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                  * 1000UL)                                                     \
2305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        -                                                                       \
2306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                  * 1000UL)                                                     \
2308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       )                                                                        \
2309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   )
2312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   These ADC registers are data registers:
2339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example:
2344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
2354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 47


2357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval ADC register address
2358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
2360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(Register);
2363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve address of register DR */
2365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
2366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC clock source and prescaler must be selected in function of system clock to not exce
2379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: STM32WB55xx ADC maximum frequency is 64MHz (corresponding to 4.27Msmp/s maximu
2380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: STM32WB50xx ADC maximum frequency is 32MHz (corresponding to 2.13Msmp/s maximu
2381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC maximum frequency, refer to datasheet of the selected device.
2382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         must be respected.
2385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual.
2386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (*)
2398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2 (*)
2399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4 (*)
2400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (*) Value available on all STM32 devices except: STM32W10xxx, STM32W15xxx.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 48


2414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
2420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (*)
2433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2 (*)
2434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4 (*)
2435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (*) Value available on all STM32 devices except: STM32W10xxx, STM32W15xxx.
2449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
2451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
2454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The values not selected are removed from configuration.
2467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor stabilization time.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 49


2471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC conversion of internal channels,
2476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a sampling time minimum value is required.
2477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Add paths to the current configuration.
2505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor stabilization time.
2512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For ADC conversion of internal channels,
2517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a sampling time minimum value is required.
2518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
2519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 50


2528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Remove paths to the current configuration.
2546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
2576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 51


2585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
2590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
2596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
2600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
2605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled.
2608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
2609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
2611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         
2616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
2617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
2618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             cycle).
2623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Refer to reference manual.
2624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
2627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
2629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
2633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
2634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
2639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
2640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         
2641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 52


2642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
2643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
2644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
2645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
2646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
2647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             cycle).
2648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Refer to reference manual.
2649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
2651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
2653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without having to perform a new calibration using
2662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
2669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         both calibration factors must be concatenated.
2672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         To perform this processing, use helper macro
2673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on group regular.
2678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
2685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
2688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              CalibrationFactor);
2689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without having to perform a new calibration using
2696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 53


2699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
2703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         both calibration factors must be concatenated.
2706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         To perform this processing, use helper macro
2707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on group regular.
2712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED     (1)
2718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED (1)
2719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
2721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx)
2747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
2749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 54


2756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
2757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
2758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
2759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
2768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "SingleDiff".                                                            */
2771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC resolution.
2778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC resolution.
2804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 55


2813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
2815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
2858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 56


2870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           in order to reduce power consumption.
2872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           has been retrieved by user software.
2876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           other conversion.
2878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           applications.
2882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           How to use this low power mode:
2883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC conversion start.
2894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of delay during which ADC was idle.
2903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
2906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
2908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
2910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF          (1)
2916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF (1)
2917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter available only on devices: STM32WB10xx, STM32WB15xx, S
2919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
2920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 57


2927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           in order to reduce power consumption.
2936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           has been retrieved by user software.
2940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           other conversion.
2942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           applications.
2946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           How to use this low power mode:
2947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC conversion start.
2958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of delay during which ADC was idle.
2967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
2970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
2972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF          (1)
2976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF (1)
2977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
2978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter available only on devices: STM32WB10xx, STM32WB15xx, S
2979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
2980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
2981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
2982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
2983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 58


2984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
2985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
2987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
2988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
2989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
2990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
2991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
3000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
3001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
3002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
3003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
3008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
3010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
3011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
3012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
3015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
3017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
3021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
3022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
3025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
3026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
3028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
3030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
3034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
3036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
3037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
3038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Sampling time common to all channels, independently
3039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channels mapped on ADC group regular or injected.
3040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 59


3041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
3043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
3046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
3048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
3050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
3051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
3052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
3053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
3054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
3057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
3058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
3063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
3064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
3069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
3070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
3071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
3072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
3073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
3074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
3075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
3076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
3077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
3080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
3083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
3084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
3088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
3089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
3090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Sampling time common to all channels, independently
3091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channels mapped on ADC group regular or injected.
3092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
3093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
3095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
3096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
3097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 60


3098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
3099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
3100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
3101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
3107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
3108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
3109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
3110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
3111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
3112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
3113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
3114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
3116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
3118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
3119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
3124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC offset" not available on ADC peripheral of this STM32WB device */
3125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or group injected)
3132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           converted data).
3134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are set to 0.
3137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
3146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 61


3155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
3190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or group injected)
3208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 62


3212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
3216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
3218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
3220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
3252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
3256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
3258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
3259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 63


3269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted data).
3272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are set to 0.
3275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         force offset state disable or enable
3297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without modifying offset channel or offset value.
3298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
3305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 64


3326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              OffsetState);
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         offset state disabled or enabled.
3332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
3347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
3357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
3361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
3367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         also set trigger polarity to rising edge
3369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx, STM32WB1Mxx: ADC trigger frequency mode must be se
3374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
3375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function
3376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "LL_ADC_SetTriggerFrequencyMode()".
3377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
3379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 65


3383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO  (1)
3389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1   (1)
3391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2   (1)
3392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3   (1)
3393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4   (2)
3394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3   (2)
3397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4   (2)
3398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB series, parameter available only devices: STM32WB10xx, STM32WB15xx, STM3
3402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
3408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
3417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or external, without detail
3419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (equivalent to
3421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
3425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO  (1)
3431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1   (1)
3433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2   (1)
3434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3   (1)
3435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4   (2)
3436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3   (2)
3439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4   (2)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 66


3440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB series, parameter available only devices: STM32WB10xx, STM32WB15xx, STM3
3444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
3446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
3449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
3452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
3453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
3455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
3457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
3458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
3459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
3460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
3470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
3473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or external.
3479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
3488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
3491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 67


3497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
3515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
3531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
3534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if   defined(ADC_SUPPORT_2_5_MSPS)
3540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
3542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
3544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available:
3545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
3546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank
3547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           affectation to a channel are configurable.
3548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
3550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
3551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are fixed by channel HW number.
3553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 68


3554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
3555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
3560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
3562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
3563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
3564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
3567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
3569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
3573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
3575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available:
3576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
3577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank
3578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           affectation to a channel are configurable.
3579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
3581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
3582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are fixed by channel HW number.
3584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Refer to description of function
3585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
3586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
3587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
3590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
3591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
3593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
3595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are configurable.
3605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function performs configuration of:
3606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 69


3611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are defined by channel number.
3615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function performs configuration of:
3616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             highest channel number).
3623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           To set scan direction differently, refer to function
3626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           "LL_ADC_REG_SetSequencerScanDirection()".
3627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx, STM32WB1Mxx: after calling functions
3628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
3630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using "LL_ADC_IsActiveFlag_CCRDY()".
3632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
3633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
3634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for more details.
3635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
3642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
3643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
3644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
3645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
3646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
3647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
3648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
3649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (1)
3660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (1)
3661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (1)
3662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (1)
3663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (1)
3664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (1)
3665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (1)
3666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (1)
3667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 70


3668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
3675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are configurable.
3687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function retrieves:
3688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are defined by channel number.
3697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This function retrieves:
3698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             highest channel number).
3705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Sequencer ranks are selected using
3706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *          To set scan direction differently, refer to function
3708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *          "LL_ADC_REG_SetSequencerScanDirection()".
3709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
3712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
3713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
3714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
3715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
3716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
3717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
3718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
3719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 71


3725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (1)
3730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (1)
3731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (1)
3732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (1)
3733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (1)
3734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (1)
3735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (1)
3736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (1)
3737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
3741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t ChannelsRanks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
3744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
3745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t RankIndex;
3746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
3747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
3748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   for(RankIndex = 0UL; RankIndex < (32U - 4U); RankIndex+=4U)
3749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
3750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if((ChannelsRanks & (ADC_CHSELR_SQ2 << RankIndex)) == (ADC_CHSELR_SQ2 << RankIndex))
3751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
3752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       SequencerLength = (ADC_CHSELR_SQ2 << RankIndex);
3753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       break;
3754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
3755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
3756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
3757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return SequencerLength;
3758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
3766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
3767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to mode not fully configurable,
3768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
3770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the default scan direction is forward.
3771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
3776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
3778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 72


3782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
3783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
3785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
3789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
3790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the default scan direction is forward.
3791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
3792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
3795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
3796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
3798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
3800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
3807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
3813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS (1)
3822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS (1)
3823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS (1)
3824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS (1)
3825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS (1)
3826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS (1)
3827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS (1)
3828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
3836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 73


3839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
3845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS (1)
3852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS (1)
3853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS (1)
3854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS (1)
3855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS (1)
3856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS (1)
3857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS (1)
3858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
3862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
3865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         scan sequence rank.
3873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs configuration of:
3874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         affectation to a channel are configurable.
3879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
3885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On devices STM32WB10xx, STM32WB15xx, STM32WB1Mxx: after calling functions
3887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
3889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using "LL_ADC_IsActiveFlag_CCRDY()".
3891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
3892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
3893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to reference manual for more details.
3894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 74


3896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
3898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
3915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9  (1)
3925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10 (1)
3926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11 (1)
3927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12 (1)
3928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13 (1)
3929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14 (1)
3930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15 (1)
3931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16 (1)
3932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
3934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 75


3953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
3958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
3959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
3961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
3962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
3964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
3965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
3967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
3970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
3972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
3973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
3980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
3983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
3984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
3985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
3986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         scan sequence rank.
3988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         affectation to a channel are configurable.
3991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
4002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
4003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
4004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 76


4010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9  (1)
4032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10 (1)
4033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11 (1)
4034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12 (1)
4035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13 (1)
4036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14 (1)
4037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15 (1)
4038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16 (1)
4039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
4041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
4062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 77


4067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t) ((READ_BIT(ADCx->CHSELR,
4075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
4076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                       >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
4077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     );
4079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
4086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
4090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
4092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
4098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
4121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
4122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
4123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 78


4124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
4125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
4126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
4127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
4128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
4129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
4130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
4131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
4132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
4133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
4134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
4135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
4136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
4137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
4138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
4139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
4169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
4177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 79


4181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
4183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
4206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
4207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
4208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
4209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
4210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
4211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
4212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
4213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
4214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
4215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
4216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
4217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
4218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
4219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
4220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
4221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
4222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
4223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
4224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 80


4238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
4254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
4262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
4268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           configuration.
4269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
4289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
4291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
4292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
4293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
4294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 81


4295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
4296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
4297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
4298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
4299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
4300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
4301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
4302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
4303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
4304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
4305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
4306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
4307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
4308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
4309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
4339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
4343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
4347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel number.
4348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs:
4349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
4350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
4351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 82


4352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
4353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
4354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are available, they can be chosen using
4355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
4356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
4357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
4358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
4359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be retrieved.
4372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
4374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
4375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
4376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
4377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
4378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
4379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
4380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
4381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
4382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
4383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
4384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
4385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
4386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
4387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
4388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
4389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
4390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
4391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
4392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
4394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 83


4409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
4421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
4423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
4425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
4426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
4427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
4428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
4429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
4430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
4431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
4432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
4433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
4434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
4435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
4436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
4437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
4438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
4439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
4440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
4441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
4442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
4443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
4444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - single mode: one conversion per trigger
4450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           conversions launched successively automatically.
4452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 84


4466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
4469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - single mode: one conversion per trigger
4478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           conversions launched successively automatically.
4480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
4487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
4490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode:
4500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           when number of DMA data transfers (number of
4502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions) is reached.
4503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions).
4507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode non-circular:
4510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
4519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 85


4523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
4532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode:
4542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           when number of DMA data transfers (number of
4544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions) is reached.
4545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           ADC conversions).
4549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         mode non-circular:
4552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
4566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
4569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         data preserved or overwritten.
4578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         other devices without this feature have a behavior
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 86


4580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         equivalent to data overwritten.
4581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         overrun should be set to data overwritten.
4584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
4588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
4599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         data preserved or overwritten.
4607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
4614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
4617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
4620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
4624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
4627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
4628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
4629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
4631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 87


4637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         also set trigger polarity to rising edge
4639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
4645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external interrupt line).
4671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal (SW start) or external, without detail
4673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (equivalent to
4675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         depends on timers availability on the selected device.
4679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
4692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 88


4694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((TriggerSource
4702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          );
4705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             or external
4710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 89


4751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
4754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function performs configuration of:
4761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function retrieves:
4787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
4801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 90


4808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
4809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         number of ranks.
4827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence rank.
4841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
4846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
4848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
4853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 91


4865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
4884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
4885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
4886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sequence rank.
4905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
4908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
4915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
4916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
4917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 92


4922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (4)
4949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
4952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
4953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (4) For ADC channel read back from ADC register,
4955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
4956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
4964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
4965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
4966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
4967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent or from ADC group regular.
4969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC group injected.
4975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent trigger.
4978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 93


4979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         from ADC group regular.
4983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
4987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
4989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
4991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
4995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
4996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
4998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         independent or from ADC group regular.
5004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - group injected trigger
5019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer length
5020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer ranks
5021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         If contexts queue is disabled:
5022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - only 1 sequence can be configured
5023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           and is active perpetually.
5024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         If contexts queue is enabled:
5025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - up to 2 contexts can be queued
5026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           into the queue).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 94


5036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         contexts queue.
5079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - group injected trigger
5081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer length
5082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - sequencer ranks
5083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         cannot be used):
5087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 95


5093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         enabled separately.
5096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx), some fast channels 
5098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
5099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on going on either groups regular or injected.
5103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 96


5150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 97


5207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t TriggerSource,
5239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_JSQR_JL,
5261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 98


5264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SequencerNbRanks
5268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
5273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
5278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
5288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
5291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
5293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
5302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
5303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 99


5321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
5354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
5355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
5356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
5363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
5364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
5365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         converted:
5375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         setting).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 100


5378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TS_temp, ...).
5380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required.
5389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet.
5390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 101


5435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
5457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
5458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
5459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****             );
5460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
5468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
5475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 102


5492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
5531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
5534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
5535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
5539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
5541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
5542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
5543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
5544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
5546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
5547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
5548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 103


5549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Unit: ADC clock cycles.
5553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
5602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
5603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
5604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (7) On STM32WB devices (except devices: STM32WB10xx, STM32WB15xx, STM32WB1Mxx) fast cha
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 104


5606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
5621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
5623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
5624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
5625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
5626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
5627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
5628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
5629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
5630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
5637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC channel differential mode" not available on ADC peripheral of this STM32WB device *
5643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
5647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC group regular or injected.
5649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available in differential mode.
5655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not available in differential mode.
5657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB, channels 16, 17, 18 of ADC1
5660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 105


5663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
5667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected.
5668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC channel.
5705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         available in differential mode.
5713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         not available in differential mode.
5715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On STM32WB, channels 16, 17, 18 of ADC1
5718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 106


5720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
5743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
5750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
5754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled.
5762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
5767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
5772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 107


5777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
5780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
5786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
5805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
5806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
5808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
5809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
5811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
5812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
5814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
5815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
5817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
5818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
5820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
5821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
5823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
5824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
5826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ          (1)
5827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
5829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
5830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
5832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
5833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 108


5834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
5835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
5836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
5838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
5839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
5841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
5842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
5844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
5845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
5847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
5848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
5850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
5851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
5853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
5854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
5856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
5857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
5859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
5860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
5862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
5863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)
5867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)
5870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
5874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
5875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
5876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
5877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
5879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
5880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
5881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
5882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
5884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (LL_ADC_AWD1 & ADC_AWD_CR_ALL_CHANNEL_MASK),
5885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDChannelGroup & LL_ADC_AWD1);
5886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
5887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 109


5891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
5895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDChannelGroup & AWDy);
5897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
5898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
5899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
5900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
5901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Usage of the returned channel number:
5903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           as parameter for another function.
5910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - To get the channel number in decimal format:
5911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           process the returned value with the helper macro
5912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           one channel.
5915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
5917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
5922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
5927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
5930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
5936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
5938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
5940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
5947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 110


5948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)(2)
5950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)(2)
5951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
5952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             by bitfield.
5957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (2) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
5958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)(1)
5962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ       (1)
5963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)(1)
5965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ          (1)
5966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)(1)
5968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ          (1)
5969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)(1)
5971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ          (1)
5972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)(1)
5974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ          (1)
5975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)(1)
5977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ          (1)
5978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)(1)
5980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ          (1)
5981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)(1)
5983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ         (1)
5984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)(1)
5986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ          (1)
5987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)(1)
5989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ          (1)
5990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)(1)
5992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ          (1)
5993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)(1)
5995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ         (1)
5996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)(1)
5998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ         (1)
5999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
6000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)(1)
6001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ         (1)
6002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
6003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)(1)
6004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ         (1)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 111


6005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
6006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)(1)
6007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ         (1)
6008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
6009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)(1)
6010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ         (1)
6011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
6012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)(1)
6013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ         (1)
6014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
6015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)(1)
6016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ         (1)
6017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
6018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)(1)
6019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ         (1)
6020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6021:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (0) On STM32WB, parameter available only on analog watchdog number: AWD1.
6022:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6023:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6024:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
6025:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6026:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6027:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6028:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6029:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6030:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(ADCx->CFGR1, LL_ADC_AWD1) & LL_ADC_AWD1 & ADC_AWD_CR_A
6031:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
6032:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
6033:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6034:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6035:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* or a single channel.                                                     */
6036:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   if(AnalogWDMonitChannels != 0UL)
6037:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
6038:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if((AnalogWDMonitChannels & ADC_CFGR1_AWD1SGL) == 0UL)
6039:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6040:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       /* AWD monitoring a group of channels */
6041:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       AnalogWDMonitChannels = (AnalogWDMonitChannels
6042:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                & (~(ADC_CFGR1_AWD1CH))
6043:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               );
6044:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6045:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     else
6046:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6047:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       /* AWD monitoring a single channel */
6048:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       AnalogWDMonitChannels = (AnalogWDMonitChannels
6049:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                | (0x01UL << (AnalogWDMonitChannels >> ADC_CFGR1_AWD1CH_Pos))
6050:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                               );
6051:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6052:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
6053:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   
6054:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return AnalogWDMonitChannels;
6055:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
6057:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
6058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6059:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
6060:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6061:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 112


6062:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
6063:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
6064:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* or a single channel.                                                     */
6065:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
6066:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   {
6067:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
6068:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6069:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
6070:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6071:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6072:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
6073:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
6074:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  )
6075:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
6076:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6077:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6078:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       else
6079:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6080:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a single channel */
6081:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
6082:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
6083:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6084:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6085:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6086:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     else
6087:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     {
6088:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6089:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6090:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6091:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
6092:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6093:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6094:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6095:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       else
6096:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       {
6097:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a single channel */
6098:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         /* AWD monitoring a group of channels */
6099:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
6100:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6101:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
6102:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                 );
6103:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****       }
6104:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****     }
6105:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   }
6106:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6107:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return AnalogWDMonitChannels;
6108:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6109:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6110:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6111:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6112:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6113:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         high and low.
6114:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6115:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6116:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6117:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6118:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 113


6119:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6120:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
6121:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6122:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6123:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6124:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6125:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
6126:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6127:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6128:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6129:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6130:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
6131:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6132:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6133:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
6134:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6135:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6136:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6137:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6138:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6139:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
6140:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6141:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6142:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6143:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6144:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6145:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6146:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6147:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6148:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6149:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6150:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6151:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6152:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6153:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6154:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note For devices STM32WB15xx and STM32WB10xx, register ADC_TR is equivalent to ADC_TR1 (generi
6155:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6156:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6157:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6158:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6159:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6160:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6161:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6162:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6163:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6164:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6165:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6166:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6167:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6168:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6169:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6170:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6171:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "AWDy".                                                                  */
6172:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6173:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6174:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
6175:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 114


6176:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6177:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6178:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
6179:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
6180:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
6181:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6182:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
6183:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6184:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
6185:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6186:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6187:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6188:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6189:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6190:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6191:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6192:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         high or low.
6193:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
6195:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6197:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6199:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         instance:
6200:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6202:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6203:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6204:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             ADC resolution configured).
6205:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6206:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6207:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6208:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6209:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             be selected. For example:
6210:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6211:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6212:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             groups regular and injected).
6213:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6214:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6215:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6216:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6217:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6218:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *             the 2 LSB are ignored.
6219:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6220:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6221:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6222:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6223:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6224:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6225:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6226:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either ADC groups regular or injected.
6227:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6228:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6229:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6230:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6231:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6232:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 115


6233:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note For devices STM32WB15xx and STM32WB10xx, register ADC_TR is equivalent to ADC_TR1 (generi
6234:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6235:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6236:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6237:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6238:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6239:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6240:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32, STM32WB1
6241:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6242:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6243:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6244:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6245:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6246:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6247:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6248:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6249:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6250:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6251:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6252:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6253:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6254:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6255:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
6256:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6257:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6258:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6259:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
6260:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdsHighLow,
6261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6262:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
6264:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(*preg,
6266:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdsHighLow,
6267:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6268:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6269:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6270:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6271:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6272:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6273:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6274:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         concatenated.
6275:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6276:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6277:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         using helper macro:
6278:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6279:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6280:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6281:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6282:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6283:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6284:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6285:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6286:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6287:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6288:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note For devices STM32WB15xx and STM32WB10xx, register ADC_TR is equivalent to ADC_TR1 (generi
6289:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 116


6290:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6291:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6292:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
6293:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
6294:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6295:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6296:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6297:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6298:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6299:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6300:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6301:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6302:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx, uint32_t AWDy, uint3
6303:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6304:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if  defined(ADC_SUPPORT_2_5_MSPS)
6305:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6306:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   (void)(AWDy);
6307:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6308:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
6309:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
6310:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6311:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
6312:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6313:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) 
6314:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6315:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6316:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6317:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6318:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****                    );
6319:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6321:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6323:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6325:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6326:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC oversampling" not available on ADC peripheral of this STM32WB device */
6328:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6329:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6330:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6331:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6332:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6333:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6334:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6335:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6336:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6337:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6338:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6339:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6340:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6341:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (oversampler buffer reset).
6342:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6343:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6344:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6345:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6346:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 117


6347:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6348:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6349:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6350:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6351:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6352:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6353:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED (1)
6354:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED        (1)
6355:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED (1)
6356:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6357:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6358:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6359:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6360:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6361:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6362:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6363:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
6364:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6365:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6366:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6367:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6368:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6369:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6370:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6371:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6372:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6373:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6374:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6375:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6376:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6377:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (oversampler buffer reset).
6378:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6379:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6380:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6381:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6382:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6383:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6384:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6385:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED (1)
6386:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED        (1)
6387:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED (1)
6388:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *
6389:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
6390:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6391:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
6392:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6393:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6394:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
6395:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6396:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6397:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6398:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6399:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6400:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6401:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6402:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on the selected ADC group.
6403:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 118


6404:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6405:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are done from 1 trigger)
6406:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6407:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           needs a trigger)
6408:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6409:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6410:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6411:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on group regular.
6412:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6413:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6414:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6415:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6416:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6417:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6418:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6419:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6420:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6421:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6422:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6423:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6424:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6425:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
6426:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6427:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6428:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6429:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6430:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6431:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6432:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6433:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on the selected ADC group.
6434:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6435:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6436:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           are done from 1 trigger)
6437:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6438:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           needs a trigger)
6439:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6440:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6441:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6442:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6443:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6444:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6445:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
6446:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6447:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6448:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
6449:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6450:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6452:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6453:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6454:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6455:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Set ADC oversampling
6456:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6457:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6458:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - ratio
6459:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - shift
6460:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 119


6461:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6462:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6463:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6464:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6466:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6468:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6469:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6470:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6472:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6473:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6474:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6475:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6476:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6477:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6478:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6479:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6480:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6481:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6482:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6483:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6484:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6485:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6486:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6488:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6489:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6490:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6491:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6493:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6494:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6495:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6497:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6500:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6501:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6502:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6503:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6504:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6505:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6506:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6507:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6508:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
6509:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6510:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6511:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6512:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6513:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6514:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6515:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6516:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6517:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 120


6518:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6519:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6520:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6521:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6522:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6523:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6524:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6525:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6526:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6527:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6528:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6529:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
6530:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6531:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6532:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6533:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6534:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6535:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6536:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6537:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6538:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6539:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6540:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6541:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6542:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6543:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6544:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC deep power down" not available on ADC peripheral of this STM32WB device */
6545:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6546:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6547:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6548:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6549:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6550:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6551:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6552:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6553:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6554:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6555:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6556:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6557:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6558:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6560:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6561:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6562:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6563:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6565:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6566:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_DEEPPWD);
6567:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6568:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6569:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6570:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6571:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6572:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6573:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6574:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 121


6575:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6576:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6577:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6578:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6579:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6580:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6581:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6582:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6583:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6584:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6585:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6586:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6587:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6588:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6590:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6592:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6593:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6594:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6595:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6596:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
6597:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6598:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6599:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6600:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6601:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6602:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6603:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6604:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6605:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6606:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6607:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6608:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6609:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6610:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6611:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6612:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6613:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6614:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6615:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6616:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6617:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6618:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6619:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6620:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6621:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6622:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6623:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADVREGEN);
6624:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6625:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6626:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6627:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6628:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6629:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6630:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6631:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 122


6632:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6633:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6634:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6636:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6638:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6639:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6640:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6641:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6642:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6643:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6644:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6645:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6646:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
6647:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6648:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6649:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6650:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6651:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6652:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6653:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6654:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6655:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC conversion start.
6656:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6657:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6658:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6659:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6660:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6661:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6662:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6663:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6664:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6665:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6666:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6667:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6668:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6669:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6670:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6671:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6672:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6673:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6674:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADEN);
6675:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6676:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6677:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6678:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6679:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6680:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6681:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6682:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         on either groups regular or injected.
6683:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6684:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6685:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6686:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6687:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6688:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 123


6689:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6690:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6691:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6693:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6694:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADDIS);
6695:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6696:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6698:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6699:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6700:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6701:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6702:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6703:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6704:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6705:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
6707:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6709:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6710:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6711:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6712:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6713:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6714:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6715:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6716:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6717:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
6718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6719:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6721:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6722:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6723:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6725:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6727:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6728:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
6730:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
6731:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
6732:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration run must be performed for each of these
6733:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6734:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
6735:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6736:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6737:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6738:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
6739:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         This mode must be disabled during calibration
6740:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
6741:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6742:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6743:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6744:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6745:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 124


6746:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
6747:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6748:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6749:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6750:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6751:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6752:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6753:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCAL);
6754:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6755:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6756:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6757:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6758:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6759:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6760:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6761:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6762:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with differential mode available:
6763:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         Calibration of offset is specific to each of
6764:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         single-ended and differential modes
6765:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         (calibration run must be performed for each of these
6766:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         requires their calibration).
6768:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6769:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6770:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be ADC disabled.
6771:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6772:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6774:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6775:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6776:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6777:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6778:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6779:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
  79              		.loc 2 6779 22 view .LVU17
  80              	.LBB233:
6780:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6781:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6782:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6783:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6784:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
  81              		.loc 2 6784 3 view .LVU18
  82 0032 9368     		ldr	r3, [r2, #8]
  83 0034 23F04043 		bic	r3, r3, #-1073741824
  84 0038 23F03F03 		bic	r3, r3, #63
  85 003c 05F08045 		and	r5, r5, #1073741824
  86              	.LVL3:
  87              		.loc 2 6784 3 is_stmt 0 view .LVU19
  88 0040 2B43     		orrs	r3, r3, r5
  89 0042 43F00043 		orr	r3, r3, #-2147483648
  90 0046 9360     		str	r3, [r2, #8]
  91              	.LVL4:
  92              	.L4:
  93              		.loc 2 6784 3 view .LVU20
  94              	.LBE233:
  95              	.LBE232:
 190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 125


 191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Wait for calibration completion */
 193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
  96              		.loc 1 193 56 is_stmt 1 view .LVU21
  97              		.loc 1 193 44 is_stmt 0 view .LVU22
  98 0048 2368     		ldr	r3, [r4]
  99              	.LVL5:
 100              	.LBB234:
 101              	.LBI234:
6785:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6786:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6787:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6788:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
6789:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6790:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6791:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC calibration state.
6792:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6793:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6794:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6795:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6796:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
 102              		.loc 2 6796 26 is_stmt 1 view .LVU23
 103              	.LBB235:
6797:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6798:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 104              		.loc 2 6798 3 view .LVU24
 105              		.loc 2 6798 12 is_stmt 0 view .LVU25
 106 004a 9B68     		ldr	r3, [r3, #8]
 107              	.LVL6:
 108              		.loc 2 6798 70 view .LVU26
 109 004c 002B     		cmp	r3, #0
 110 004e 06DB     		blt	.L10
 111              	.LVL7:
 112              		.loc 2 6798 70 view .LVU27
 113              	.LBE235:
 114              	.LBE234:
 194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       wait_loop_index++;
 196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Process unlocked */
 204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         return HAL_ERROR;
 207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       calibration_factor_accumulated += LL_ADC_GetCalibrationFactor(hadc->Instance);
 211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Compute average */
 213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     calibration_factor_accumulated /= calibration_index;
 214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Apply calibration factor (requires ADC enable and disable process) */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 126


 215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_Enable(hadc->Instance);
 216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Case of ADC clocked at low frequency: Delay required between ADC enable and disable actions 
 218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if(LL_ADC_GetClock(hadc->Instance) == LL_ADC_CLOCK_ASYNC)
 219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       adc_clk_async_presc = LL_ADC_GetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(adc_clk_async_presc >= LL_ADC_CLOCK_ASYNC_DIV16)
 223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Delay loop initialization and execution */
 225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Delay depends on ADC clock prescaler: Compute ADC clock asynchronous prescaler to decima
 226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         delay_cpu_cycles = (1U << ((adc_clk_async_presc >> ADC_CCR_PRESC_Pos) - 3U));
 227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Divide variable by 2 to compensate partially CPU processing cycles */
 228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         delay_cpu_cycles >>= 1U;
 229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         while(delay_cpu_cycles != 0)
 231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
 232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           delay_cpu_cycles--;
 233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
 234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, calibration_factor_accumulated);
 238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled before changing configuration */
 241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Get tick count */
 242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     while (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
 251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           /* Set ADC error code to ADC peripheral internal error */
 255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           return HAL_ERROR;
 258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
 259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Restore configuration after calibration */
 263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR1, backup_setting_cfgr1);
 264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Set ADC state */
 267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 115              		.loc 1 267 5 is_stmt 1 view .LVU28
 116 0050 636D     		ldr	r3, [r4, #84]
 117 0052 23F00303 		bic	r3, r3, #3
 118 0056 43F00103 		orr	r3, r3, #1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 127


 119 005a 6365     		str	r3, [r4, #84]
 120 005c 15E0     		b	.L7
 121              	.LVL8:
 122              	.L10:
 195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 123              		.loc 1 195 7 view .LVU29
 195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 124              		.loc 1 195 22 is_stmt 0 view .LVU30
 125 005e 019B     		ldr	r3, [sp, #4]
 126 0060 0133     		adds	r3, r3, #1
 127 0062 0193     		str	r3, [sp, #4]
 196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 128              		.loc 1 196 7 is_stmt 1 view .LVU31
 196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 129              		.loc 1 196 27 is_stmt 0 view .LVU32
 130 0064 019A     		ldr	r2, [sp, #4]
 196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 131              		.loc 1 196 10 view .LVU33
 132 0066 0C4B     		ldr	r3, .L11
 133 0068 9A42     		cmp	r2, r3
 134 006a EDD9     		bls	.L4
 199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 135              		.loc 1 199 9 is_stmt 1 view .LVU34
 136 006c 636D     		ldr	r3, [r4, #84]
 137 006e 23F01203 		bic	r3, r3, #18
 138 0072 43F01003 		orr	r3, r3, #16
 139 0076 6365     		str	r3, [r4, #84]
 204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 140              		.loc 1 204 9 view .LVU35
 204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 141              		.loc 1 204 9 view .LVU36
 142 0078 0023     		movs	r3, #0
 143 007a 84F85030 		strb	r3, [r4, #80]
 204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 144              		.loc 1 204 9 view .LVU37
 206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 145              		.loc 1 206 9 view .LVU38
 206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 146              		.loc 1 206 16 is_stmt 0 view .LVU39
 147 007e 0120     		movs	r0, #1
 148              	.LVL9:
 206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 149              		.loc 1 206 16 view .LVU40
 150 0080 06E0     		b	.L2
 151              	.LVL10:
 152              	.L3:
 268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
 272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 153              		.loc 1 273 5 is_stmt 1 view .LVU41
 154 0082 636D     		ldr	r3, [r4, #84]
 155 0084 43F01003 		orr	r3, r3, #16
 156 0088 6365     		str	r3, [r4, #84]
 157              	.LVL11:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 128


 158              	.L7:
 274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
 280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 159              		.loc 1 280 3 view .LVU42
 160              		.loc 1 280 3 view .LVU43
 161 008a 0023     		movs	r3, #0
 162 008c 84F85030 		strb	r3, [r4, #80]
 163              		.loc 1 280 3 view .LVU44
 281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
 283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 164              		.loc 1 283 3 view .LVU45
 165              	.LVL12:
 166              	.L2:
 284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 167              		.loc 1 284 1 is_stmt 0 view .LVU46
 168 0090 03B0     		add	sp, sp, #12
 169              		.cfi_remember_state
 170              		.cfi_def_cfa_offset 12
 171              		@ sp needed
 172 0092 30BD     		pop	{r4, r5, pc}
 173              	.LVL13:
 174              	.L8:
 175              		.cfi_restore_state
 147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 176              		.loc 1 147 3 view .LVU47
 177 0094 0220     		movs	r0, #2
 178              	.LVL14:
 147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 179              		.loc 1 147 3 view .LVU48
 180 0096 FBE7     		b	.L2
 181              	.L12:
 182              		.align	2
 183              	.L11:
 184 0098 AA6A0200 		.word	158378
 185              		.cfi_endproc
 186              	.LFE1104:
 188              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_ADCEx_Calibration_GetValue
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	HAL_ADCEx_Calibration_GetValue:
 196              	.LVL15:
 197              	.LFB1105:
 285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle.
 289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 129


 291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended (1)
 292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
 293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
 294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval Calibration value.
 295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(const ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 198              		.loc 1 297 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(SingleDiff);
 300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   
 302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 203              		.loc 1 303 3 view .LVU50
 304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 204              		.loc 1 304 3 view .LVU51
 305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance);
 309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance, SingleDiff);
 205              		.loc 1 310 3 view .LVU52
 206              		.loc 1 310 42 is_stmt 0 view .LVU53
 207 0000 0368     		ldr	r3, [r0]
 208              	.LVL16:
 209              	.LBB236:
 210              	.LBI236:
2767:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 211              		.loc 2 2767 26 is_stmt 1 view .LVU54
 212              	.LBB237:
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 213              		.loc 2 2773 3 view .LVU55
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 214              		.loc 2 2773 21 is_stmt 0 view .LVU56
 215 0002 D3F8B400 		ldr	r0, [r3, #180]
 216              	.LVL17:
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 217              		.loc 2 2773 21 view .LVU57
 218 0006 0840     		ands	r0, r0, r1
 219 0008 00F07F10 		and	r0, r0, #8323199
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 220              		.loc 2 2773 147 view .LVU58
 221 000c 090B     		lsrs	r1, r1, #12
 222              	.LVL18:
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 223              		.loc 2 2773 147 view .LVU59
 224 000e 01F01001 		and	r1, r1, #16
 225              	.LVL19:
2773:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 226              		.loc 2 2773 147 view .LVU60
 227              	.LBE237:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 130


 228              	.LBE236:
 311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 229              		.loc 1 312 1 view .LVU61
 230 0012 C840     		lsrs	r0, r0, r1
 231 0014 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE1105:
 235              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 236              		.align	1
 237              		.global	HAL_ADCEx_Calibration_SetValue
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	HAL_ADCEx_Calibration_SetValue:
 243              	.LVL20:
 244              	.LFB1106:
 313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended (1)
 321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
 322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         (1) On STM32WB series, parameter not available on devices: STM32WB10xx, STM32WB15xx, ST
 323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL state
 325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff, uint
 327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 245              		.loc 1 327 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              		.loc 1 327 1 is_stmt 0 view .LVU63
 251 0000 0346     		mov	r3, r0
 328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(SingleDiff);
 330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 252              		.loc 1 332 3 is_stmt 1 view .LVU64
 253              	.LVL21:
 333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 254              		.loc 1 333 3 view .LVU65
 334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 255              		.loc 1 337 3 view .LVU66
 338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 131


 256              		.loc 1 341 3 view .LVU67
 342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 257              		.loc 1 342 3 view .LVU68
 343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 258              		.loc 1 343 3 view .LVU69
 344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
 346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 259              		.loc 1 346 3 view .LVU70
 260              		.loc 1 346 3 view .LVU71
 261 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 262              	.LVL22:
 263              		.loc 1 346 3 is_stmt 0 view .LVU72
 264 0006 0128     		cmp	r0, #1
 265 0008 35D0     		beq	.L20
 327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 266              		.loc 1 327 1 discriminator 2 view .LVU73
 267 000a 70B4     		push	{r4, r5, r6}
 268              		.cfi_def_cfa_offset 12
 269              		.cfi_offset 4, -12
 270              		.cfi_offset 5, -8
 271              		.cfi_offset 6, -4
 272              		.loc 1 346 3 is_stmt 1 discriminator 2 view .LVU74
 273 000c 0120     		movs	r0, #1
 274 000e 83F85000 		strb	r0, [r3, #80]
 275              		.loc 1 346 3 discriminator 2 view .LVU75
 347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 276              		.loc 1 350 3 discriminator 2 view .LVU76
 277              		.loc 1 350 79 is_stmt 0 discriminator 2 view .LVU77
 278 0012 1D68     		ldr	r5, [r3]
 279              	.LVL23:
 280              	.LBB246:
 281              	.LBI246:
6799:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6800:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6801:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6802:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6803:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6804:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6805:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6806:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6807:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6808:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6809:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6810:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6811:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6812:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6813:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6814:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           starts immediately.
6815:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6816:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6817:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           following the ADC start conversion command.
6818:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6819:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 132


6820:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6821:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6822:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6823:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6824:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6825:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6826:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6827:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6828:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6829:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6830:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6831:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6832:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6833:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6834:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADSTART);
6835:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6836:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6837:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6838:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6839:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6840:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6841:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6842:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6843:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6844:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6845:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6846:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6847:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6848:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6849:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6850:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6851:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6852:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6853:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6854:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_ADSTP);
6855:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6856:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6857:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6858:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6859:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6860:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6861:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6862:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
 282              		.loc 2 6863 26 is_stmt 1 discriminator 2 view .LVU78
 283              	.LBB247:
6864:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 284              		.loc 2 6865 3 discriminator 2 view .LVU79
 285              		.loc 2 6865 12 is_stmt 0 discriminator 2 view .LVU80
 286 0014 A868     		ldr	r0, [r5, #8]
 287              		.loc 2 6865 74 discriminator 2 view .LVU81
 288 0016 10F00400 		ands	r0, r0, #4
 289 001a 00D0     		beq	.L16
 290              		.loc 2 6865 74 view .LVU82
 291 001c 0120     		movs	r0, #1
 292              	.L16:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 133


 293              	.LVL24:
 294              		.loc 2 6865 74 view .LVU83
 295              	.LBE247:
 296              	.LBE246:
 351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 297              		.loc 1 354 3 is_stmt 1 view .LVU84
 298              	.LBB248:
 299              	.LBI248:
6866:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6867:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6868:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6869:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6870:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6871:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6872:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6873:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6874:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
6875:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6876:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6877:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6878:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6879:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6880:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6881:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6882:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         all oversampling increased data width (for devices
6883:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         with feature oversampling).
6884:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6885:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6886:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6887:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6888:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
6889:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6890:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6891:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6892:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6893:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6894:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6895:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 12 bits.
6896:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6897:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6898:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6899:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6900:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6901:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6902:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6903:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
6904:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6905:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6906:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6907:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6908:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6909:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6910:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 10 bits.
6911:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 134


6912:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6913:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6914:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6915:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6916:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6917:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6918:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
6919:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6920:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6921:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6922:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6923:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6924:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6925:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 8 bits.
6926:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6927:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6928:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6929:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6930:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6931:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6932:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6933:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
6934:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6935:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6936:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6937:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6938:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6939:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6940:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC resolution 6 bits.
6941:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6942:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         can increase data width, function for extended range
6943:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6944:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6945:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6946:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6947:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6948:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
6949:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6950:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6951:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6952:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6953:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6954:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @}
6955:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6956:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6957:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #if defined(ADC_SUPPORT_2_5_MSPS)
6958:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
6959:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #else
6960:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6961:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @{
6962:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6963:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6964:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6965:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6966:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6967:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6968:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 135


6969:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           starts immediately.
6970:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6971:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6972:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *           following the ADC start conversion command.
6973:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6974:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6975:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6976:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6977:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6978:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6979:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
6980:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
6981:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
6982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6983:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
6984:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6985:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6986:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6988:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6989:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_JADSTART);
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
6991:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
6992:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
6993:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6994:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6995:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC state:
6996:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6997:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   *         without ADC disable command on going.
6998:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6999:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7000:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval None
7001:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7002:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7003:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7004:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7005:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7006:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7007:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7008:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7009:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_JADSTP);
7010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
7011:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
7012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** /**
7013:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7014:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7015:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @param  ADCx ADC instance
7016:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7017:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   */
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
 300              		.loc 2 7018 26 view .LVU85
 301              	.LBB249:
7019:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
7020:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 302              		.loc 2 7020 3 view .LVU86
 303              		.loc 2 7020 12 is_stmt 0 view .LVU87
 304 001e AC68     		ldr	r4, [r5, #8]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 136


 305              		.loc 2 7020 76 view .LVU88
 306 0020 14F00804 		ands	r4, r4, #8
 307 0024 00D0     		beq	.L17
 308 0026 0124     		movs	r4, #1
 309              	.L17:
 310              	.LVL25:
 311              		.loc 2 7020 76 view .LVU89
 312              	.LBE249:
 313              	.LBE248:
 355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 314              		.loc 1 357 3 is_stmt 1 view .LVU90
 315              	.LBB250:
 316              	.LBI250:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 317              		.loc 2 6706 26 view .LVU91
 318              	.LBB251:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 319              		.loc 2 6708 3 view .LVU92
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 320              		.loc 2 6708 12 is_stmt 0 view .LVU93
 321 0028 AE68     		ldr	r6, [r5, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 322              		.loc 2 6708 68 view .LVU94
 323 002a 16F0010F 		tst	r6, #1
 324 002e 01D0     		beq	.L18
 325              	.LVL26:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 326              		.loc 2 6708 68 view .LVU95
 327              	.LBE251:
 328              	.LBE250:
 358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 329              		.loc 1 358 7 view .LVU96
 330 0030 00B9     		cbnz	r0, .L18
 359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 331              		.loc 1 362 7 view .LVU97
 332 0032 6CB1     		cbz	r4, .L25
 333              	.L18:
 363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      )
 365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
 368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, CalibrationFactor);
 369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
 374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Update ADC state machine */
 376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 334              		.loc 1 376 5 is_stmt 1 view .LVU98
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 137


 335 0034 5A6D     		ldr	r2, [r3, #84]
 336              	.LVL27:
 337              		.loc 1 376 5 is_stmt 0 view .LVU99
 338 0036 42F02002 		orr	r2, r2, #32
 339 003a 5A65     		str	r2, [r3, #84]
 377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Update ADC error code */
 378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 340              		.loc 1 378 5 is_stmt 1 view .LVU100
 341 003c 9A6D     		ldr	r2, [r3, #88]
 342 003e 42F00102 		orr	r2, r2, #1
 343 0042 9A65     		str	r2, [r3, #88]
 379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 344              		.loc 1 381 5 view .LVU101
 345              	.LVL28:
 346              		.loc 1 381 20 is_stmt 0 view .LVU102
 347 0044 0120     		movs	r0, #1
 348              	.LVL29:
 349              	.L19:
 382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
 385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 350              		.loc 1 385 3 is_stmt 1 view .LVU103
 351              		.loc 1 385 3 view .LVU104
 352 0046 0022     		movs	r2, #0
 353 0048 83F85020 		strb	r2, [r3, #80]
 354              		.loc 1 385 3 view .LVU105
 386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
 388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 355              		.loc 1 388 3 view .LVU106
 389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 356              		.loc 1 389 1 is_stmt 0 view .LVU107
 357 004c 70BC     		pop	{r4, r5, r6}
 358              		.cfi_remember_state
 359              		.cfi_restore 6
 360              		.cfi_restore 5
 361              		.cfi_restore 4
 362              		.cfi_def_cfa_offset 0
 363 004e 7047     		bx	lr
 364              	.LVL30:
 365              	.L25:
 366              		.cfi_restore_state
 370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 367              		.loc 1 370 5 is_stmt 1 view .LVU108
 368              	.LBB252:
 369              	.LBI252:
2724:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 370              		.loc 2 2724 22 view .LVU109
 371              	.LBB253:
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 372              		.loc 2 2726 3 view .LVU110
 373 0050 D5F8B440 		ldr	r4, [r5, #180]
 374              	.LVL31:
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 138


 375              		.loc 2 2726 3 is_stmt 0 view .LVU111
 376 0054 01F07F10 		and	r0, r1, #8323199
 377              	.LVL32:
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 378              		.loc 2 2726 3 view .LVU112
 379 0058 24EA0004 		bic	r4, r4, r0
 380 005c 01F07F00 		and	r0, r1, #127
 381 0060 C043     		mvns	r0, r0
 382 0062 00EA1131 		and	r1, r0, r1, lsr #12
 383              	.LVL33:
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 384              		.loc 2 2726 3 view .LVU113
 385 0066 01F01001 		and	r1, r1, #16
 386 006a 8A40     		lsls	r2, r2, r1
 387              	.LVL34:
2726:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 388              		.loc 2 2726 3 view .LVU114
 389 006c 2243     		orrs	r2, r2, r4
 390 006e C5F8B420 		str	r2, [r5, #180]
 391              	.LBE253:
 392              	.LBE252:
 332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 393              		.loc 1 332 21 view .LVU115
 394 0072 0020     		movs	r0, #0
 395              	.LBB255:
 396              	.LBB254:
2729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 397              		.loc 2 2729 1 view .LVU116
 398 0074 E7E7     		b	.L19
 399              	.LVL35:
 400              	.L20:
 401              		.cfi_def_cfa_offset 0
 402              		.cfi_restore 4
 403              		.cfi_restore 5
 404              		.cfi_restore 6
2729:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 405              		.loc 2 2729 1 view .LVU117
 406              	.LBE254:
 407              	.LBE255:
 346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 408              		.loc 1 346 3 view .LVU118
 409 0076 0220     		movs	r0, #2
 410              		.loc 1 389 1 view .LVU119
 411 0078 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE1106:
 415              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 416              		.align	1
 417              		.global	HAL_ADCEx_InjectedStart
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	HAL_ADCEx_InjectedStart:
 423              	.LVL36:
 424              	.LFB1107:
 390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 139


 392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle.
 398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
 399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 425              		.loc 1 401 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 429              		.loc 1 402 3 view .LVU121
 403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 430              		.loc 1 403 3 view .LVU122
 404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 431              		.loc 1 406 3 view .LVU123
 407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 432              		.loc 1 408 3 view .LVU124
 433              		.loc 1 408 42 is_stmt 0 view .LVU125
 434 0000 0368     		ldr	r3, [r0]
 435              	.LVL37:
 436              	.LBB256:
 437              	.LBI256:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 438              		.loc 2 7018 26 is_stmt 1 view .LVU126
 439              	.LBB257:
 440              		.loc 2 7020 3 view .LVU127
 441              		.loc 2 7020 12 is_stmt 0 view .LVU128
 442 0002 9A68     		ldr	r2, [r3, #8]
 443              		.loc 2 7020 76 view .LVU129
 444 0004 12F0080F 		tst	r2, #8
 445 0008 44D1     		bne	.L33
 446              	.LBE257:
 447              	.LBE256:
 401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 448              		.loc 1 401 1 view .LVU130
 449 000a 10B5     		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453 000c 0446     		mov	r4, r0
 454              	.LVL38:
 409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     return HAL_BUSY;
 411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
 413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 140


 417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****          the queue is empty */
 421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 455              		.loc 1 421 5 is_stmt 1 view .LVU131
 456              		.loc 1 421 33 is_stmt 0 view .LVU132
 457 000e DA68     		ldr	r2, [r3, #12]
 458              	.LVL39:
 422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 459              		.loc 1 423 5 is_stmt 1 view .LVU133
 460              		.loc 1 423 10 is_stmt 0 view .LVU134
 461 0010 DB6C     		ldr	r3, [r3, #76]
 462              		.loc 1 423 8 view .LVU135
 463 0012 13F0C00F 		tst	r3, #192
 464 0016 01D1     		bne	.L28
 424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 465              		.loc 1 424 9 view .LVU136
 466 0018 002A     		cmp	r2, #0
 467 001a 2EDA     		bge	.L39
 468              	.L28:
 425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        )
 426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       return HAL_ERROR;
 429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Process locked */
 432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 469              		.loc 1 432 5 is_stmt 1 view .LVU137
 470              		.loc 1 432 5 view .LVU138
 471 001c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 472 0020 012B     		cmp	r3, #1
 473 0022 39D0     		beq	.L34
 474              		.loc 1 432 5 discriminator 2 view .LVU139
 475 0024 0123     		movs	r3, #1
 476 0026 84F85030 		strb	r3, [r4, #80]
 477              		.loc 1 432 5 discriminator 2 view .LVU140
 433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 478              		.loc 1 435 5 discriminator 2 view .LVU141
 479              		.loc 1 435 22 is_stmt 0 discriminator 2 view .LVU142
 480 002a 2046     		mov	r0, r4
 481              	.LVL40:
 482              		.loc 1 435 22 discriminator 2 view .LVU143
 483 002c FFF7FEFF 		bl	ADC_Enable
 484              	.LVL41:
 436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 485              		.loc 1 438 5 is_stmt 1 discriminator 2 view .LVU144
 486              		.loc 1 438 8 is_stmt 0 discriminator 2 view .LVU145
 487 0030 60BB     		cbnz	r0, .L29
 439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 141


 441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 488              		.loc 1 441 7 is_stmt 1 view .LVU146
 489              		.loc 1 441 16 is_stmt 0 view .LVU147
 490 0032 636D     		ldr	r3, [r4, #84]
 491              		.loc 1 441 10 view .LVU148
 492 0034 13F4807F 		tst	r3, #256
 493 0038 25D0     		beq	.L30
 442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 494              		.loc 1 444 9 is_stmt 1 view .LVU149
 495 003a A36D     		ldr	r3, [r4, #88]
 496 003c 23F00803 		bic	r3, r3, #8
 497 0040 A365     		str	r3, [r4, #88]
 498              	.L31:
 445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
 447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC error code to none */
 449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 499              		.loc 1 455 7 view .LVU150
 500 0042 636D     		ldr	r3, [r4, #84]
 501 0044 23F44053 		bic	r3, r3, #12288
 502 0048 23F00103 		bic	r3, r3, #1
 503 004c 43F48053 		orr	r3, r3, #4096
 504 0050 6365     		str	r3, [r4, #84]
 456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 505              		.loc 1 461 7 view .LVU151
 506 0052 2368     		ldr	r3, [r4]
 507 0054 6022     		movs	r2, #96
 508 0056 1A60     		str	r2, [r3]
 462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Process unlocked */
 464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 509              		.loc 1 466 7 view .LVU152
 510              		.loc 1 466 7 view .LVU153
 511 0058 0023     		movs	r3, #0
 512 005a 84F85030 		strb	r3, [r4, #80]
 513              		.loc 1 466 7 view .LVU154
 467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* is disabled.                                                           */
 470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 142


 472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* trigger event.                                                         */
 473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 514              		.loc 1 473 7 view .LVU155
 515              		.loc 1 473 37 is_stmt 0 view .LVU156
 516 005e 2268     		ldr	r2, [r4]
 517              	.LVL42:
 518              	.LBB258:
 519              	.LBI258:
5010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 520              		.loc 2 5010 26 is_stmt 1 view .LVU157
 521              	.LBB259:
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 522              		.loc 2 5012 3 view .LVU158
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 523              		.loc 2 5012 21 is_stmt 0 view .LVU159
 524 0060 D368     		ldr	r3, [r2, #12]
 525              	.LVL43:
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 526              		.loc 2 5012 21 view .LVU160
 527              	.LBE259:
 528              	.LBE258:
 529              		.loc 1 473 9 view .LVU161
 530 0062 13F0007F 		tst	r3, #33554432
 531 0066 18D1     		bne	.L27
 474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 532              		.loc 1 476 9 is_stmt 1 view .LVU162
 533              	.LVL44:
 534              	.LBB260:
 535              	.LBI260:
6982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 536              		.loc 2 6982 22 view .LVU163
 537              	.LBB261:
6987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 538              		.loc 2 6987 3 view .LVU164
 539 0068 9368     		ldr	r3, [r2, #8]
 540 006a 23F00043 		bic	r3, r3, #-2147483648
 541 006e 23F03F03 		bic	r3, r3, #63
 542 0072 43F00803 		orr	r3, r3, #8
 543 0076 9360     		str	r3, [r2, #8]
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 544              		.loc 2 6990 1 is_stmt 0 view .LVU165
 545 0078 0FE0     		b	.L27
 546              	.LVL45:
 547              	.L39:
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 548              		.loc 2 6990 1 view .LVU166
 549              	.LBE261:
 550              	.LBE260:
 427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       return HAL_ERROR;
 551              		.loc 1 427 7 is_stmt 1 view .LVU167
 552 007a 436D     		ldr	r3, [r0, #84]
 553 007c 43F02003 		orr	r3, r3, #32
 554 0080 4365     		str	r3, [r0, #84]
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 555              		.loc 1 428 7 view .LVU168
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 143


 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 556              		.loc 1 428 14 is_stmt 0 view .LVU169
 557 0082 0120     		movs	r0, #1
 558              	.LVL46:
 428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 559              		.loc 1 428 14 view .LVU170
 560 0084 09E0     		b	.L27
 561              	.LVL47:
 562              	.L30:
 449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 563              		.loc 1 449 9 is_stmt 1 view .LVU171
 564 0086 0023     		movs	r3, #0
 565 0088 A365     		str	r3, [r4, #88]
 566 008a DAE7     		b	.L31
 567              	.L29:
 477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
 480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Process unlocked */
 482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 568              		.loc 1 482 7 view .LVU172
 569              		.loc 1 482 7 view .LVU173
 570 008c 0023     		movs	r3, #0
 571 008e 84F85030 		strb	r3, [r4, #80]
 572              		.loc 1 482 7 view .LVU174
 483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Return function status */
 486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     return tmp_hal_status;
 573              		.loc 1 486 5 view .LVU175
 574              		.loc 1 486 12 is_stmt 0 view .LVU176
 575 0092 02E0     		b	.L27
 576              	.LVL48:
 577              	.L33:
 578              		.cfi_def_cfa_offset 0
 579              		.cfi_restore 4
 580              		.cfi_restore 14
 410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 581              		.loc 1 410 12 view .LVU177
 582 0094 0220     		movs	r0, #2
 583              	.LVL49:
 487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 584              		.loc 1 488 1 view .LVU178
 585 0096 7047     		bx	lr
 586              	.LVL50:
 587              	.L34:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 4, -8
 590              		.cfi_offset 14, -4
 432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 591              		.loc 1 432 5 view .LVU179
 592 0098 0220     		movs	r0, #2
 593              	.LVL51:
 594              	.L27:
 595              		.loc 1 488 1 view .LVU180
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 144


 596 009a 10BD     		pop	{r4, pc}
 597              		.loc 1 488 1 view .LVU181
 598              		.cfi_endproc
 599              	.LFE1107:
 601              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 602              		.align	1
 603              		.global	HAL_ADCEx_InjectedStop
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	HAL_ADCEx_InjectedStop:
 609              	.LVL52:
 610              	.LFB1108:
 489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         no regular conversion is on going.
 493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle.
 499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
 500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 611              		.loc 1 502 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 615              		.loc 1 503 3 view .LVU183
 504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 616              		.loc 1 506 3 view .LVU184
 507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
 509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 617              		.loc 1 509 3 view .LVU185
 618              		.loc 1 509 3 view .LVU186
 619 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 620 0004 012B     		cmp	r3, #1
 621 0006 23D0     		beq	.L44
 502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 622              		.loc 1 502 1 is_stmt 0 discriminator 2 view .LVU187
 623 0008 10B5     		push	{r4, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 627 000a 0446     		mov	r4, r0
 628              		.loc 1 509 3 is_stmt 1 discriminator 2 view .LVU188
 629 000c 0123     		movs	r3, #1
 630 000e 80F85030 		strb	r3, [r0, #80]
 631              		.loc 1 509 3 discriminator 2 view .LVU189
 510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 145


 511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 632              		.loc 1 512 3 discriminator 2 view .LVU190
 633              		.loc 1 512 20 is_stmt 0 discriminator 2 view .LVU191
 634 0012 0221     		movs	r1, #2
 635 0014 FFF7FEFF 		bl	ADC_ConversionStop
 636              	.LVL53:
 513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 637              		.loc 1 516 3 is_stmt 1 discriminator 2 view .LVU192
 638              		.loc 1 516 6 is_stmt 0 discriminator 2 view .LVU193
 639 0018 40B9     		cbnz	r0, .L42
 517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 640              		.loc 1 518 5 is_stmt 1 view .LVU194
 641              		.loc 1 518 44 is_stmt 0 view .LVU195
 642 001a 2368     		ldr	r3, [r4]
 643              	.LVL54:
 644              	.LBB262:
 645              	.LBI262:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 646              		.loc 2 6863 26 is_stmt 1 view .LVU196
 647              	.LBB263:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 648              		.loc 2 6865 3 view .LVU197
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 649              		.loc 2 6865 12 is_stmt 0 view .LVU198
 650 001c 9B68     		ldr	r3, [r3, #8]
 651              	.LVL55:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 652              		.loc 2 6865 74 view .LVU199
 653 001e 13F0040F 		tst	r3, #4
 654 0022 07D0     		beq	.L43
 655              	.LVL56:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 656              		.loc 2 6865 74 view .LVU200
 657              	.LBE263:
 658              	.LBE262:
 519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC state */
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
 535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 146


 536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set ADC state */
 537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 659              		.loc 1 537 7 is_stmt 1 view .LVU201
 660 0024 636D     		ldr	r3, [r4, #84]
 661 0026 23F48053 		bic	r3, r3, #4096
 662 002a 6365     		str	r3, [r4, #84]
 663              	.L42:
 538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
 542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 664              		.loc 1 542 3 view .LVU202
 665              		.loc 1 542 3 view .LVU203
 666 002c 0023     		movs	r3, #0
 667 002e 84F85030 		strb	r3, [r4, #80]
 668              		.loc 1 542 3 view .LVU204
 543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
 545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 669              		.loc 1 545 3 view .LVU205
 546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 670              		.loc 1 546 1 is_stmt 0 view .LVU206
 671 0032 10BD     		pop	{r4, pc}
 672              	.LVL57:
 673              	.L43:
 521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 674              		.loc 1 521 7 is_stmt 1 view .LVU207
 521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 675              		.loc 1 521 24 is_stmt 0 view .LVU208
 676 0034 2046     		mov	r0, r4
 677              	.LVL58:
 521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 678              		.loc 1 521 24 view .LVU209
 679 0036 FFF7FEFF 		bl	ADC_Disable
 680              	.LVL59:
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 681              		.loc 1 524 7 is_stmt 1 view .LVU210
 524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 682              		.loc 1 524 10 is_stmt 0 view .LVU211
 683 003a 0028     		cmp	r0, #0
 684 003c F6D1     		bne	.L42
 527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 685              		.loc 1 527 9 is_stmt 1 view .LVU212
 686 003e 636D     		ldr	r3, [r4, #84]
 687 0040 23F48853 		bic	r3, r3, #4352
 688 0044 23F00103 		bic	r3, r3, #1
 689 0048 43F00103 		orr	r3, r3, #1
 690 004c 6365     		str	r3, [r4, #84]
 691 004e EDE7     		b	.L42
 692              	.LVL60:
 693              	.L44:
 694              		.cfi_def_cfa_offset 0
 695              		.cfi_restore 4
 696              		.cfi_restore 14
 509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 697              		.loc 1 509 3 is_stmt 0 view .LVU213
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 147


 698 0050 0220     		movs	r0, #2
 699              	.LVL61:
 700              		.loc 1 546 1 view .LVU214
 701 0052 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE1108:
 705              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 706              		.align	1
 707              		.global	HAL_ADCEx_InjectedPollForConversion
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 712              	HAL_ADCEx_InjectedPollForConversion:
 713              	.LVL62:
 714              	.LFB1109:
 547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
 555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 715              		.loc 1 557 1 is_stmt 1 view -0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		.loc 1 557 1 is_stmt 0 view .LVU216
 720 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 721              		.cfi_def_cfa_offset 24
 722              		.cfi_offset 3, -24
 723              		.cfi_offset 4, -20
 724              		.cfi_offset 5, -16
 725              		.cfi_offset 6, -12
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 0446     		mov	r4, r0
 729 0004 0D46     		mov	r5, r1
 558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tickstart;
 730              		.loc 1 558 3 is_stmt 1 view .LVU217
 559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_Flag_End;
 731              		.loc 1 559 3 view .LVU218
 560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 732              		.loc 1 560 3 view .LVU219
 561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 733              		.loc 1 561 3 view .LVU220
 562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 734              		.loc 1 562 3 view .LVU221
 563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 735              		.loc 1 565 3 view .LVU222
 566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* If end of sequence selected */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 148


 568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 736              		.loc 1 568 3 view .LVU223
 737              		.loc 1 568 17 is_stmt 0 view .LVU224
 738 0006 4369     		ldr	r3, [r0, #20]
 739              		.loc 1 568 6 view .LVU225
 740 0008 082B     		cmp	r3, #8
 741 000a 1ED0     		beq	.L66
 569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else /* end of conversion selected */
 573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 742              		.loc 1 574 18 view .LVU226
 743 000c 2026     		movs	r6, #32
 744              	.L50:
 745              	.LVL63:
 575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Get timeout */
 578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 746              		.loc 1 578 3 is_stmt 1 view .LVU227
 747              		.loc 1 578 15 is_stmt 0 view .LVU228
 748 000e FFF7FEFF 		bl	HAL_GetTick
 749              	.LVL64:
 750              		.loc 1 578 15 view .LVU229
 751 0012 0746     		mov	r7, r0
 752              	.LVL65:
 579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 753              		.loc 1 581 3 is_stmt 1 view .LVU230
 754              	.L52:
 755              		.loc 1 581 47 view .LVU231
 756              		.loc 1 581 15 is_stmt 0 view .LVU232
 757 0014 2368     		ldr	r3, [r4]
 758              		.loc 1 581 25 view .LVU233
 759 0016 1A68     		ldr	r2, [r3]
 760              		.loc 1 581 47 view .LVU234
 761 0018 3242     		tst	r2, r6
 762 001a 18D1     		bne	.L67
 582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 763              		.loc 1 584 5 is_stmt 1 view .LVU235
 764              		.loc 1 584 8 is_stmt 0 view .LVU236
 765 001c B5F1FF3F 		cmp	r5, #-1
 766 0020 F8D0     		beq	.L52
 585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 767              		.loc 1 586 7 is_stmt 1 view .LVU237
 768              		.loc 1 586 13 is_stmt 0 view .LVU238
 769 0022 FFF7FEFF 		bl	HAL_GetTick
 770              	.LVL66:
 771              		.loc 1 586 27 view .LVU239
 772 0026 C31B     		subs	r3, r0, r7
 773              		.loc 1 586 10 view .LVU240
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 149


 774 0028 AB42     		cmp	r3, r5
 775 002a 01D8     		bhi	.L53
 776              		.loc 1 586 51 discriminator 1 view .LVU241
 777 002c 002D     		cmp	r5, #0
 778 002e F1D1     		bne	.L52
 779              	.L53:
 587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 780              		.loc 1 589 9 is_stmt 1 view .LVU242
 781              		.loc 1 589 18 is_stmt 0 view .LVU243
 782 0030 2368     		ldr	r3, [r4]
 783              		.loc 1 589 28 view .LVU244
 784 0032 1B68     		ldr	r3, [r3]
 785              		.loc 1 589 12 view .LVU245
 786 0034 3342     		tst	r3, r6
 787 0036 EDD1     		bne	.L52
 590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
 591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 788              		.loc 1 592 11 is_stmt 1 view .LVU246
 789 0038 636D     		ldr	r3, [r4, #84]
 790 003a 43F00403 		orr	r3, r3, #4
 791 003e 6365     		str	r3, [r4, #84]
 593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           /* Process unlocked */
 595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 792              		.loc 1 595 11 view .LVU247
 793              		.loc 1 595 11 view .LVU248
 794 0040 0023     		movs	r3, #0
 795 0042 84F85030 		strb	r3, [r4, #80]
 796              		.loc 1 595 11 view .LVU249
 596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 797              		.loc 1 597 11 view .LVU250
 798              		.loc 1 597 18 is_stmt 0 view .LVU251
 799 0046 0320     		movs	r0, #3
 800 0048 31E0     		b	.L54
 801              	.LVL67:
 802              	.L66:
 570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 803              		.loc 1 570 18 view .LVU252
 804 004a 4026     		movs	r6, #64
 805 004c DFE7     		b	.L50
 806              	.LVL68:
 807              	.L67:
 598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
 599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 808              		.loc 1 604 3 is_stmt 1 view .LVU253
 809              	.LBB264:
 810              	.LBI264:
4718:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 150


 811              		.loc 2 4718 26 view .LVU254
 812              	.LBB265:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 813              		.loc 2 4720 3 view .LVU255
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 814              		.loc 2 4720 12 is_stmt 0 view .LVU256
 815 004e DA6C     		ldr	r2, [r3, #76]
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 816              		.loc 2 4720 105 view .LVU257
 817 0050 12F0C00F 		tst	r2, #192
 818 0054 2CD1     		bne	.L62
 819 0056 0121     		movs	r1, #1
 820              	.L56:
 821              	.LVL69:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 822              		.loc 2 4720 105 view .LVU258
 823              	.LBE265:
 824              	.LBE264:
 605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 825              		.loc 1 605 3 is_stmt 1 view .LVU259
 826              	.LBB267:
 827              	.LBI267:
3487:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 828              		.loc 2 3487 26 view .LVU260
 829              	.LBB268:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 830              		.loc 2 3492 3 view .LVU261
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 831              		.loc 2 3492 12 is_stmt 0 view .LVU262
 832 0058 DA68     		ldr	r2, [r3, #12]
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 833              		.loc 2 3492 103 view .LVU263
 834 005a 12F4406F 		tst	r2, #3072
 835 005e 29D1     		bne	.L63
 836 0060 0125     		movs	r5, #1
 837              	.LVL70:
 838              	.L57:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 839              		.loc 2 3492 103 view .LVU264
 840              	.LBE268:
 841              	.LBE267:
 606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 842              		.loc 1 606 3 is_stmt 1 view .LVU265
 843              		.loc 1 606 12 is_stmt 0 view .LVU266
 844 0062 D868     		ldr	r0, [r3, #12]
 845              	.LVL71:
 607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Update ADC state machine */
 609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 846              		.loc 1 609 3 is_stmt 1 view .LVU267
 847 0064 626D     		ldr	r2, [r4, #84]
 848 0066 42F40052 		orr	r2, r2, #8192
 849 006a 6265     		str	r2, [r4, #84]
 610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* from group regular.                                                      */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 151


 614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 850              		.loc 1 614 3 view .LVU268
 851              		.loc 1 614 6 is_stmt 0 view .LVU269
 852 006c 31B9     		cbnz	r1, .L58
 853              		.loc 1 614 66 discriminator 1 view .LVU270
 854 006e 10F0007F 		tst	r0, #33554432
 855 0072 17D1     		bne	.L59
 615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 856              		.loc 1 615 57 view .LVU271
 857 0074 B5B1     		cbz	r5, .L59
 616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 858              		.loc 1 616 58 view .LVU272
 859 0076 10F4005F 		tst	r0, #8192
 860 007a 13D1     		bne	.L59
 861              	.L58:
 617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 862              		.loc 1 620 5 is_stmt 1 view .LVU273
 863              		.loc 1 620 9 is_stmt 0 view .LVU274
 864 007c 1A68     		ldr	r2, [r3]
 865              		.loc 1 620 8 view .LVU275
 866 007e 12F0400F 		tst	r2, #64
 867 0082 0FD0     		beq	.L59
 621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM) == 0UL)
 868              		.loc 1 628 7 is_stmt 1 view .LVU276
 869              		.loc 1 628 11 is_stmt 0 view .LVU277
 870 0084 DA68     		ldr	r2, [r3, #12]
 871              		.loc 1 628 10 view .LVU278
 872 0086 12F4001F 		tst	r2, #2097152
 873 008a 0BD1     		bne	.L59
 629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC state */
 631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 874              		.loc 1 631 9 is_stmt 1 view .LVU279
 875 008c 626D     		ldr	r2, [r4, #84]
 876 008e 22F48052 		bic	r2, r2, #4096
 877 0092 6265     		str	r2, [r4, #84]
 632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 878              		.loc 1 633 9 view .LVU280
 879              		.loc 1 633 18 is_stmt 0 view .LVU281
 880 0094 626D     		ldr	r2, [r4, #84]
 881              		.loc 1 633 12 view .LVU282
 882 0096 12F4807F 		tst	r2, #256
 883 009a 03D1     		bne	.L59
 634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
 635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 884              		.loc 1 635 11 is_stmt 1 view .LVU283
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 152


 885 009c 626D     		ldr	r2, [r4, #84]
 886 009e 42F00102 		orr	r2, r2, #1
 887 00a2 6265     		str	r2, [r4, #84]
 888              	.L59:
 636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
 637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Clear polled flag */
 642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 889              		.loc 1 642 3 view .LVU284
 890              		.loc 1 642 6 is_stmt 0 view .LVU285
 891 00a4 402E     		cmp	r6, #64
 892 00a6 07D0     		beq	.L68
 643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* cleared.                                                               */
 648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_AUTDLY) == 0UL)
 649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
 654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 893              		.loc 1 655 5 is_stmt 1 view .LVU286
 894 00a8 2022     		movs	r2, #32
 895 00aa 1A60     		str	r2, [r3]
 656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return API HAL status */
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return HAL_OK;
 896              		.loc 1 659 10 is_stmt 0 view .LVU287
 897 00ac 0020     		movs	r0, #0
 898              	.LVL72:
 899              	.L54:
 660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 900              		.loc 1 660 1 view .LVU288
 901 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 902              	.LVL73:
 903              	.L62:
 904              	.LBB270:
 905              	.LBB266:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 906              		.loc 2 4720 105 view .LVU289
 907 00b0 0021     		movs	r1, #0
 908 00b2 D1E7     		b	.L56
 909              	.LVL74:
 910              	.L63:
4720:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 911              		.loc 2 4720 105 view .LVU290
 912              	.LBE266:
 913              	.LBE270:
 914              	.LBB271:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 153


 915              	.LBB269:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 916              		.loc 2 3492 103 view .LVU291
 917 00b4 0025     		movs	r5, #0
 918              	.LVL75:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 919              		.loc 2 3492 103 view .LVU292
 920 00b6 D4E7     		b	.L57
 921              	.LVL76:
 922              	.L68:
3492:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 923              		.loc 2 3492 103 view .LVU293
 924              	.LBE269:
 925              	.LBE271:
 648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 926              		.loc 1 648 5 is_stmt 1 view .LVU294
 648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 927              		.loc 1 648 9 is_stmt 0 view .LVU295
 928 00b8 DA68     		ldr	r2, [r3, #12]
 648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 929              		.loc 1 648 8 view .LVU296
 930 00ba 12F4804F 		tst	r2, #16384
 931 00be 03D1     		bne	.L64
 650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 932              		.loc 1 650 7 is_stmt 1 view .LVU297
 933 00c0 6022     		movs	r2, #96
 934 00c2 1A60     		str	r2, [r3]
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 935              		.loc 1 659 10 is_stmt 0 view .LVU298
 936 00c4 0020     		movs	r0, #0
 937              	.LVL77:
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 938              		.loc 1 659 10 view .LVU299
 939 00c6 F2E7     		b	.L54
 940              	.LVL78:
 941              	.L64:
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 942              		.loc 1 659 10 view .LVU300
 943 00c8 0020     		movs	r0, #0
 944              	.LVL79:
 659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 945              		.loc 1 659 10 view .LVU301
 946 00ca F0E7     		b	.L54
 947              		.cfi_endproc
 948              	.LFE1109:
 950              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 951              		.align	1
 952              		.global	HAL_ADCEx_InjectedStart_IT
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 957              	HAL_ADCEx_InjectedStart_IT:
 958              	.LVL80:
 959              	.LFB1110:
 661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 154


 664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle.
 667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status.
 668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 960              		.loc 1 670 1 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 964              		.loc 1 671 3 view .LVU303
 672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 965              		.loc 1 672 3 view .LVU304
 673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 966              		.loc 1 675 3 view .LVU305
 676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 967              		.loc 1 677 3 view .LVU306
 968              		.loc 1 677 42 is_stmt 0 view .LVU307
 969 0000 0368     		ldr	r3, [r0]
 970              	.LVL81:
 971              	.LBB272:
 972              	.LBI272:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 973              		.loc 2 7018 26 is_stmt 1 view .LVU308
 974              	.LBB273:
 975              		.loc 2 7020 3 view .LVU309
 976              		.loc 2 7020 12 is_stmt 0 view .LVU310
 977 0002 9A68     		ldr	r2, [r3, #8]
 978              		.loc 2 7020 76 view .LVU311
 979 0004 12F0080F 		tst	r2, #8
 980 0008 66D1     		bne	.L79
 981              	.LBE273:
 982              	.LBE272:
 670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 983              		.loc 1 670 1 view .LVU312
 984 000a 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 000c 0446     		mov	r4, r0
 989              	.LVL82:
 678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     return HAL_BUSY;
 680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
 682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 155


 689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****          the queue is empty */
 690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 990              		.loc 1 690 5 is_stmt 1 view .LVU313
 991              		.loc 1 690 33 is_stmt 0 view .LVU314
 992 000e DA68     		ldr	r2, [r3, #12]
 993              	.LVL83:
 691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 994              		.loc 1 692 5 is_stmt 1 view .LVU315
 995              		.loc 1 692 10 is_stmt 0 view .LVU316
 996 0010 DB6C     		ldr	r3, [r3, #76]
 997              		.loc 1 692 8 view .LVU317
 998 0012 13F0C00F 		tst	r3, #192
 999 0016 01D1     		bne	.L71
 693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1000              		.loc 1 693 9 view .LVU318
 1001 0018 002A     		cmp	r2, #0
 1002 001a 45DA     		bge	.L85
 1003              	.L71:
 694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****        )
 695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       return HAL_ERROR;
 698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Process locked */
 701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1004              		.loc 1 701 5 is_stmt 1 view .LVU319
 1005              		.loc 1 701 5 view .LVU320
 1006 001c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1007 0020 012B     		cmp	r3, #1
 1008 0022 5BD0     		beq	.L80
 1009              		.loc 1 701 5 discriminator 2 view .LVU321
 1010 0024 0123     		movs	r3, #1
 1011 0026 84F85030 		strb	r3, [r4, #80]
 1012              		.loc 1 701 5 discriminator 2 view .LVU322
 702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1013              		.loc 1 704 5 discriminator 2 view .LVU323
 1014              		.loc 1 704 22 is_stmt 0 discriminator 2 view .LVU324
 1015 002a 2046     		mov	r0, r4
 1016              	.LVL84:
 1017              		.loc 1 704 22 discriminator 2 view .LVU325
 1018 002c FFF7FEFF 		bl	ADC_Enable
 1019              	.LVL85:
 705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1020              		.loc 1 707 5 is_stmt 1 discriminator 2 view .LVU326
 1021              		.loc 1 707 8 is_stmt 0 discriminator 2 view .LVU327
 1022 0030 0028     		cmp	r0, #0
 1023 0032 4DD1     		bne	.L72
 708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1024              		.loc 1 710 7 is_stmt 1 view .LVU328
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 156


 1025              		.loc 1 710 16 is_stmt 0 view .LVU329
 1026 0034 636D     		ldr	r3, [r4, #84]
 1027              		.loc 1 710 10 view .LVU330
 1028 0036 13F4807F 		tst	r3, #256
 1029 003a 3BD0     		beq	.L73
 711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1030              		.loc 1 713 9 is_stmt 1 view .LVU331
 1031 003c A36D     		ldr	r3, [r4, #88]
 1032 003e 23F00803 		bic	r3, r3, #8
 1033 0042 A365     		str	r3, [r4, #88]
 1034              	.L74:
 714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
 716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC error code to none */
 718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1035              		.loc 1 724 7 view .LVU332
 1036 0044 636D     		ldr	r3, [r4, #84]
 1037 0046 23F44053 		bic	r3, r3, #12288
 1038 004a 23F00103 		bic	r3, r3, #1
 1039 004e 43F48053 		orr	r3, r3, #4096
 1040 0052 6365     		str	r3, [r4, #84]
 725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1041              		.loc 1 730 7 view .LVU333
 1042 0054 2368     		ldr	r3, [r4]
 1043 0056 6022     		movs	r2, #96
 1044 0058 1A60     		str	r2, [r3]
 731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Process unlocked */
 733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1045              		.loc 1 735 7 view .LVU334
 1046              		.loc 1 735 7 view .LVU335
 1047 005a 0023     		movs	r3, #0
 1048 005c 84F85030 		strb	r3, [r4, #80]
 1049              		.loc 1 735 7 view .LVU336
 736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* is enabled.                                                            */
 739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 1050              		.loc 1 739 7 view .LVU337
 1051              		.loc 1 739 16 is_stmt 0 view .LVU338
 1052 0060 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 157


 1053              		.loc 1 739 26 view .LVU339
 1054 0062 DA68     		ldr	r2, [r3, #12]
 1055              		.loc 1 739 10 view .LVU340
 1056 0064 12F4001F 		tst	r2, #2097152
 1057 0068 03D0     		beq	.L75
 740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 1058              		.loc 1 741 9 is_stmt 1 view .LVU341
 1059 006a 5A68     		ldr	r2, [r3, #4]
 1060 006c 42F48062 		orr	r2, r2, #1024
 1061 0070 5A60     		str	r2, [r3, #4]
 1062              	.L75:
 742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 1063              		.loc 1 745 7 view .LVU342
 1064              		.loc 1 745 25 is_stmt 0 view .LVU343
 1065 0072 6369     		ldr	r3, [r4, #20]
 1066              		.loc 1 745 7 view .LVU344
 1067 0074 082B     		cmp	r3, #8
 1068 0076 20D0     		beq	.L86
 746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           break;
 751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         default:
 753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 1069              		.loc 1 753 11 is_stmt 1 view .LVU345
 1070 0078 2268     		ldr	r2, [r4]
 1071 007a 5368     		ldr	r3, [r2, #4]
 1072 007c 23F04003 		bic	r3, r3, #64
 1073 0080 5360     		str	r3, [r2, #4]
 754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1074              		.loc 1 754 11 view .LVU346
 1075 0082 2268     		ldr	r2, [r4]
 1076 0084 5368     		ldr	r3, [r2, #4]
 1077 0086 43F02003 		orr	r3, r3, #32
 1078 008a 5360     		str	r3, [r2, #4]
 755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           break;
 1079              		.loc 1 755 11 view .LVU347
 1080              	.L77:
 756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* is disabled.                                                           */
 760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* trigger event.                                                         */
 763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 1081              		.loc 1 763 7 view .LVU348
 1082              		.loc 1 763 37 is_stmt 0 view .LVU349
 1083 008c 2268     		ldr	r2, [r4]
 1084              	.LVL86:
 1085              	.LBB274:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 158


 1086              	.LBI274:
5010:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1087              		.loc 2 5010 26 is_stmt 1 view .LVU350
 1088              	.LBB275:
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1089              		.loc 2 5012 3 view .LVU351
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1090              		.loc 2 5012 21 is_stmt 0 view .LVU352
 1091 008e D368     		ldr	r3, [r2, #12]
 1092              	.LVL87:
5012:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1093              		.loc 2 5012 21 view .LVU353
 1094              	.LBE275:
 1095              	.LBE274:
 1096              		.loc 1 763 9 view .LVU354
 1097 0090 13F0007F 		tst	r3, #33554432
 1098 0094 23D1     		bne	.L70
 764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 1099              		.loc 1 766 9 is_stmt 1 view .LVU355
 1100              	.LVL88:
 1101              	.LBB276:
 1102              	.LBI276:
6982:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1103              		.loc 2 6982 22 view .LVU356
 1104              	.LBB277:
6987:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1105              		.loc 2 6987 3 view .LVU357
 1106 0096 9368     		ldr	r3, [r2, #8]
 1107 0098 23F00043 		bic	r3, r3, #-2147483648
 1108 009c 23F03F03 		bic	r3, r3, #63
 1109 00a0 43F00803 		orr	r3, r3, #8
 1110 00a4 9360     		str	r3, [r2, #8]
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1111              		.loc 2 6990 1 is_stmt 0 view .LVU358
 1112 00a6 1AE0     		b	.L70
 1113              	.LVL89:
 1114              	.L85:
6990:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 1115              		.loc 2 6990 1 view .LVU359
 1116              	.LBE277:
 1117              	.LBE276:
 696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       return HAL_ERROR;
 1118              		.loc 1 696 7 is_stmt 1 view .LVU360
 1119 00a8 436D     		ldr	r3, [r0, #84]
 1120 00aa 43F02003 		orr	r3, r3, #32
 1121 00ae 4365     		str	r3, [r0, #84]
 697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 1122              		.loc 1 697 7 view .LVU361
 697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 1123              		.loc 1 697 14 is_stmt 0 view .LVU362
 1124 00b0 0120     		movs	r0, #1
 1125              	.LVL90:
 697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 1126              		.loc 1 697 14 view .LVU363
 1127 00b2 14E0     		b	.L70
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 159


 1128              	.LVL91:
 1129              	.L73:
 718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1130              		.loc 1 718 9 is_stmt 1 view .LVU364
 1131 00b4 0023     		movs	r3, #0
 1132 00b6 A365     		str	r3, [r4, #88]
 1133 00b8 C4E7     		b	.L74
 1134              	.L86:
 748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 1135              		.loc 1 748 11 view .LVU365
 1136 00ba 2268     		ldr	r2, [r4]
 1137 00bc 5368     		ldr	r3, [r2, #4]
 1138 00be 23F02003 		bic	r3, r3, #32
 1139 00c2 5360     		str	r3, [r2, #4]
 749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           break;
 1140              		.loc 1 749 11 view .LVU366
 1141 00c4 2268     		ldr	r2, [r4]
 1142 00c6 5368     		ldr	r3, [r2, #4]
 1143 00c8 43F04003 		orr	r3, r3, #64
 1144 00cc 5360     		str	r3, [r2, #4]
 750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 1145              		.loc 1 750 11 view .LVU367
 1146 00ce DDE7     		b	.L77
 1147              	.L72:
 767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
 770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Process unlocked */
 772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1148              		.loc 1 772 7 view .LVU368
 1149              		.loc 1 772 7 view .LVU369
 1150 00d0 0023     		movs	r3, #0
 1151 00d2 84F85030 		strb	r3, [r4, #80]
 1152              		.loc 1 772 7 view .LVU370
 773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Return function status */
 776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     return tmp_hal_status;
 1153              		.loc 1 776 5 view .LVU371
 1154              		.loc 1 776 12 is_stmt 0 view .LVU372
 1155 00d6 02E0     		b	.L70
 1156              	.LVL92:
 1157              	.L79:
 1158              		.cfi_def_cfa_offset 0
 1159              		.cfi_restore 4
 1160              		.cfi_restore 14
 679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 1161              		.loc 1 679 12 view .LVU373
 1162 00d8 0220     		movs	r0, #2
 1163              	.LVL93:
 777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1164              		.loc 1 778 1 view .LVU374
 1165 00da 7047     		bx	lr
 1166              	.LVL94:
 1167              	.L80:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 160


 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 4, -8
 1170              		.cfi_offset 14, -4
 701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1171              		.loc 1 701 5 view .LVU375
 1172 00dc 0220     		movs	r0, #2
 1173              	.LVL95:
 1174              	.L70:
 1175              		.loc 1 778 1 view .LVU376
 1176 00de 10BD     		pop	{r4, pc}
 1177              		.loc 1 778 1 view .LVU377
 1178              		.cfi_endproc
 1179              	.LFE1110:
 1181              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1182              		.align	1
 1183              		.global	HAL_ADCEx_InjectedStop_IT
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1188              	HAL_ADCEx_InjectedStop_IT:
 1189              	.LVL96:
 1190              	.LFB1111:
 779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         is on going.
 784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
 792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1191              		.loc 1 794 1 is_stmt 1 view -0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1195              		.loc 1 795 3 view .LVU379
 796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1196              		.loc 1 798 3 view .LVU380
 799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
 801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1197              		.loc 1 801 3 view .LVU381
 1198              		.loc 1 801 3 view .LVU382
 1199 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1200 0004 012B     		cmp	r3, #1
 1201 0006 28D0     		beq	.L91
 794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 161


 1202              		.loc 1 794 1 is_stmt 0 discriminator 2 view .LVU383
 1203 0008 10B5     		push	{r4, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 4, -8
 1206              		.cfi_offset 14, -4
 1207 000a 0446     		mov	r4, r0
 1208              		.loc 1 801 3 is_stmt 1 discriminator 2 view .LVU384
 1209 000c 0123     		movs	r3, #1
 1210 000e 80F85030 		strb	r3, [r0, #80]
 1211              		.loc 1 801 3 discriminator 2 view .LVU385
 802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1212              		.loc 1 804 3 discriminator 2 view .LVU386
 1213              		.loc 1 804 20 is_stmt 0 discriminator 2 view .LVU387
 1214 0012 0221     		movs	r1, #2
 1215 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1216              	.LVL97:
 805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* continue.                                                                */
 809:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1217              		.loc 1 809 3 is_stmt 1 discriminator 2 view .LVU388
 1218              		.loc 1 809 6 is_stmt 0 discriminator 2 view .LVU389
 1219 0018 68B9     		cbnz	r0, .L89
 810:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 811:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 812:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 1220              		.loc 1 812 5 is_stmt 1 view .LVU390
 1221 001a 2268     		ldr	r2, [r4]
 1222 001c 5368     		ldr	r3, [r2, #4]
 1223 001e 23F48C63 		bic	r3, r3, #1120
 1224 0022 5360     		str	r3, [r2, #4]
 813:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 814:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1225              		.loc 1 814 5 view .LVU391
 1226              		.loc 1 814 44 is_stmt 0 view .LVU392
 1227 0024 2368     		ldr	r3, [r4]
 1228              	.LVL98:
 1229              	.LBB278:
 1230              	.LBI278:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1231              		.loc 2 6863 26 is_stmt 1 view .LVU393
 1232              	.LBB279:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1233              		.loc 2 6865 3 view .LVU394
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1234              		.loc 2 6865 12 is_stmt 0 view .LVU395
 1235 0026 9B68     		ldr	r3, [r3, #8]
 1236              	.LVL99:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 1237              		.loc 2 6865 74 view .LVU396
 1238 0028 13F0040F 		tst	r3, #4
 1239 002c 07D0     		beq	.L90
 1240              	.LVL100:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 162


 1241              		.loc 2 6865 74 view .LVU397
 1242              	.LBE279:
 1243              	.LBE278:
 815:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 816:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 818:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 819:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 821:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 822:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC state */
 823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 824:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 825:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 826:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 827:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 828:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 829:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 830:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
 831:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 832:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set ADC state */
 833:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1244              		.loc 1 833 7 is_stmt 1 view .LVU398
 1245 002e 636D     		ldr	r3, [r4, #84]
 1246 0030 23F48053 		bic	r3, r3, #4096
 1247 0034 6365     		str	r3, [r4, #84]
 1248              	.L89:
 834:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 835:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 836:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 837:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
 838:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1249              		.loc 1 838 3 view .LVU399
 1250              		.loc 1 838 3 view .LVU400
 1251 0036 0023     		movs	r3, #0
 1252 0038 84F85030 		strb	r3, [r4, #80]
 1253              		.loc 1 838 3 view .LVU401
 839:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 840:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
 841:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 1254              		.loc 1 841 3 view .LVU402
 842:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1255              		.loc 1 842 1 is_stmt 0 view .LVU403
 1256 003c 10BD     		pop	{r4, pc}
 1257              	.LVL101:
 1258              	.L90:
 817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1259              		.loc 1 817 7 is_stmt 1 view .LVU404
 817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1260              		.loc 1 817 24 is_stmt 0 view .LVU405
 1261 003e 2046     		mov	r0, r4
 1262              	.LVL102:
 817:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1263              		.loc 1 817 24 view .LVU406
 1264 0040 FFF7FEFF 		bl	ADC_Disable
 1265              	.LVL103:
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 163


 1266              		.loc 1 820 7 is_stmt 1 view .LVU407
 820:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1267              		.loc 1 820 10 is_stmt 0 view .LVU408
 1268 0044 0028     		cmp	r0, #0
 1269 0046 F6D1     		bne	.L89
 823:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1270              		.loc 1 823 9 is_stmt 1 view .LVU409
 1271 0048 636D     		ldr	r3, [r4, #84]
 1272 004a 23F48853 		bic	r3, r3, #4352
 1273 004e 23F00103 		bic	r3, r3, #1
 1274 0052 43F00103 		orr	r3, r3, #1
 1275 0056 6365     		str	r3, [r4, #84]
 1276 0058 EDE7     		b	.L89
 1277              	.LVL104:
 1278              	.L91:
 1279              		.cfi_def_cfa_offset 0
 1280              		.cfi_restore 4
 1281              		.cfi_restore 14
 801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1282              		.loc 1 801 3 is_stmt 0 view .LVU410
 1283 005a 0220     		movs	r0, #2
 1284              	.LVL105:
 1285              		.loc 1 842 1 view .LVU411
 1286 005c 7047     		bx	lr
 1287              		.cfi_endproc
 1288              	.LFE1111:
 1290              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1291              		.align	1
 1292              		.global	HAL_ADCEx_InjectedGetValue
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1297              	HAL_ADCEx_InjectedGetValue:
 1298              	.LVL106:
 1299              	.LFB1112:
 843:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 844:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 845:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 846:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 847:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 848:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 849:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
 850:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
 851:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
 852:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
 853:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
 854:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
 855:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
 856:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            to flag JEOC.
 857:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
 858:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
 859:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
 860:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
 861:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         it would not be compliant with low power features
 862:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
 863:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         To clear this flag, either use function:
 864:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 164


 865:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
 866:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
 867:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 868:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
 869:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 870:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
 871:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
 872:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
 873:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
 874:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
 875:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 876:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(const ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
 877:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1300              		.loc 1 877 1 is_stmt 1 view -0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 878:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_jdr;
 1305              		.loc 1 878 3 view .LVU413
 879:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 880:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
 881:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1306              		.loc 1 881 3 view .LVU414
 882:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 1307              		.loc 1 882 3 view .LVU415
 883:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 884:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Get ADC converted value */
 885:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   switch (InjectedRank)
 1308              		.loc 1 885 3 view .LVU416
 1309 0000 B1F5057F 		cmp	r1, #532
 1310 0004 0ED0     		beq	.L97
 1311 0006 40F21A33 		movw	r3, #794
 1312 000a 9942     		cmp	r1, r3
 1313 000c 06D0     		beq	.L98
 1314 000e B1F5877F 		cmp	r1, #270
 1315 0012 0BD0     		beq	.L103
 886:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
 887:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
 888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 890:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 893:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 896:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 897:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     default:
 898:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1316              		.loc 1 898 7 view .LVU417
 1317              		.loc 1 898 21 is_stmt 0 view .LVU418
 1318 0014 0368     		ldr	r3, [r0]
 1319              		.loc 1 898 15 view .LVU419
 1320 0016 D3F88000 		ldr	r0, [r3, #128]
 1321              	.LVL107:
 899:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 165


 1322              		.loc 1 899 7 is_stmt 1 view .LVU420
 900:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
 901:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 902:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return ADC converted value */
 903:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_jdr;
 1323              		.loc 1 903 3 view .LVU421
 904:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1324              		.loc 1 904 1 is_stmt 0 view .LVU422
 1325 001a 7047     		bx	lr
 1326              	.LVL108:
 1327              	.L98:
 888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1328              		.loc 1 888 7 is_stmt 1 view .LVU423
 888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1329              		.loc 1 888 21 is_stmt 0 view .LVU424
 1330 001c 0368     		ldr	r3, [r0]
 888:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1331              		.loc 1 888 15 view .LVU425
 1332 001e D3F88C00 		ldr	r0, [r3, #140]
 1333              	.LVL109:
 889:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 1334              		.loc 1 889 7 is_stmt 1 view .LVU426
 1335 0022 7047     		bx	lr
 1336              	.LVL110:
 1337              	.L97:
 891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1338              		.loc 1 891 7 view .LVU427
 891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1339              		.loc 1 891 21 is_stmt 0 view .LVU428
 1340 0024 0368     		ldr	r3, [r0]
 891:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1341              		.loc 1 891 15 view .LVU429
 1342 0026 D3F88800 		ldr	r0, [r3, #136]
 1343              	.LVL111:
 892:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 1344              		.loc 1 892 7 is_stmt 1 view .LVU430
 1345 002a 7047     		bx	lr
 1346              	.LVL112:
 1347              	.L103:
 894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1348              		.loc 1 894 7 view .LVU431
 894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1349              		.loc 1 894 21 is_stmt 0 view .LVU432
 1350 002c 0368     		ldr	r3, [r0]
 894:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       break;
 1351              		.loc 1 894 15 view .LVU433
 1352 002e D3F88400 		ldr	r0, [r3, #132]
 1353              	.LVL113:
 895:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 1354              		.loc 1 895 7 is_stmt 1 view .LVU434
 1355 0032 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE1112:
 1359              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1360              		.align	1
 1361              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1362              		.syntax unified
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 166


 1363              		.thumb
 1364              		.thumb_func
 1366              	HAL_ADCEx_InjectedConvCpltCallback:
 1367              	.LVL114:
 1368              	.LFB1113:
 905:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 906:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 907:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
 908:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 909:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval None
 910:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 911:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
 912:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1369              		.loc 1 912 1 view -0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              		@ link register save eliminated.
 913:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 914:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(hadc);
 1374              		.loc 1 914 3 view .LVU436
 915:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 916:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 917:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
 918:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 919:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1375              		.loc 1 919 1 is_stmt 0 view .LVU437
 1376 0000 7047     		bx	lr
 1377              		.cfi_endproc
 1378              	.LFE1113:
 1380              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 1381              		.align	1
 1382              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 1383              		.syntax unified
 1384              		.thumb
 1385              		.thumb_func
 1387              	HAL_ADCEx_InjectedQueueOverflowCallback:
 1388              	.LVL115:
 1389              	.LFB1114:
 920:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 921:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 922:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
 923:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
 924:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
 925:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
 926:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             contexts).
 927:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 928:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval None
 929:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 930:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
 931:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1390              		.loc 1 931 1 is_stmt 1 view -0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 0
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              		@ link register save eliminated.
 932:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 167


 933:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(hadc);
 1395              		.loc 1 933 3 view .LVU439
 934:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 935:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 936:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
 937:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 938:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1396              		.loc 1 938 1 is_stmt 0 view .LVU440
 1397 0000 7047     		bx	lr
 1398              		.cfi_endproc
 1399              	.LFE1114:
 1401              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 1402              		.align	1
 1403              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 1404              		.syntax unified
 1405              		.thumb
 1406              		.thumb_func
 1408              	HAL_ADCEx_LevelOutOfWindow2Callback:
 1409              	.LVL116:
 1410              	.LFB1115:
 939:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
 940:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 941:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 942:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
 943:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 944:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval None
 945:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 946:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
 947:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1411              		.loc 1 947 1 is_stmt 1 view -0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415              		@ link register save eliminated.
 948:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 949:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(hadc);
 1416              		.loc 1 949 3 view .LVU442
 950:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 951:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 952:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
 953:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 954:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1417              		.loc 1 954 1 is_stmt 0 view .LVU443
 1418 0000 7047     		bx	lr
 1419              		.cfi_endproc
 1420              	.LFE1115:
 1422              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 1423              		.align	1
 1424              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1429              	HAL_ADCEx_LevelOutOfWindow3Callback:
 1430              	.LVL117:
 1431              	.LFB1116:
 955:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 956:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 168


 957:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
 958:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 959:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval None
 960:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 961:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
 962:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1432              		.loc 1 962 1 is_stmt 1 view -0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
 963:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 964:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(hadc);
 1437              		.loc 1 964 3 view .LVU445
 965:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 966:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 967:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
 968:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 969:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1438              		.loc 1 969 1 is_stmt 0 view .LVU446
 1439 0000 7047     		bx	lr
 1440              		.cfi_endproc
 1441              	.LFE1116:
 1443              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 1444              		.align	1
 1445              		.weak	HAL_ADCEx_EndOfSamplingCallback
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1450              	HAL_ADCEx_EndOfSamplingCallback:
 1451              	.LVL118:
 1452              	.LFB1117:
 970:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 971:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 972:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 973:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
 974:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 975:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval None
 976:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 977:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
 978:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1453              		.loc 1 978 1 is_stmt 1 view -0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 979:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 980:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   UNUSED(hadc);
 1458              		.loc 1 980 3 view .LVU448
 981:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 982:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 983:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
 984:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 985:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1459              		.loc 1 985 1 is_stmt 0 view .LVU449
 1460 0000 7047     		bx	lr
 1461              		.cfi_endproc
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 169


 1462              	.LFE1117:
 1464              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 1465              		.align	1
 1466              		.global	HAL_ADCEx_RegularStop
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1471              	HAL_ADCEx_RegularStop:
 1472              	.LVL119:
 1473              	.LFB1118:
 986:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 987:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
 988:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
 989:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
 990:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
 991:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
 992:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
 993:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         conversion is on going on injected group.
 994:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
 995:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status.
 996:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
 997:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
 998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1474              		.loc 1 998 1 is_stmt 1 view -0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 999:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1478              		.loc 1 999 3 view .LVU451
1000:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1001:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1002:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1479              		.loc 1 1002 3 view .LVU452
1003:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1004:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
1005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1480              		.loc 1 1005 3 view .LVU453
 1481              		.loc 1 1005 3 view .LVU454
 1482 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1483 0004 012B     		cmp	r3, #1
 1484 0006 26D0     		beq	.L113
 998:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1485              		.loc 1 998 1 is_stmt 0 discriminator 2 view .LVU455
 1486 0008 10B5     		push	{r4, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 000a 0446     		mov	r4, r0
 1491              		.loc 1 1005 3 is_stmt 1 discriminator 2 view .LVU456
 1492 000c 0121     		movs	r1, #1
 1493 000e 80F85010 		strb	r1, [r0, #80]
 1494              		.loc 1 1005 3 discriminator 2 view .LVU457
1006:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1007:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1008:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1495              		.loc 1 1008 3 discriminator 2 view .LVU458
 1496              		.loc 1 1008 20 is_stmt 0 discriminator 2 view .LVU459
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 170


 1497 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1498              	.LVL120:
1009:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1010:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1011:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1012:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1499              		.loc 1 1012 3 is_stmt 1 discriminator 2 view .LVU460
 1500              		.loc 1 1012 6 is_stmt 0 discriminator 2 view .LVU461
 1501 0016 60B9     		cbnz	r0, .L111
1013:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1014:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1015:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1502              		.loc 1 1015 5 is_stmt 1 view .LVU462
 1503 0018 636D     		ldr	r3, [r4, #84]
 1504 001a 23F48073 		bic	r3, r3, #256
 1505 001e 6365     		str	r3, [r4, #84]
1016:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1017:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1506              		.loc 1 1017 5 view .LVU463
 1507              		.loc 1 1017 44 is_stmt 0 view .LVU464
 1508 0020 2368     		ldr	r3, [r4]
 1509              	.LVL121:
 1510              	.LBB280:
 1511              	.LBI280:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1512              		.loc 2 7018 26 is_stmt 1 view .LVU465
 1513              	.LBB281:
 1514              		.loc 2 7020 3 view .LVU466
 1515              		.loc 2 7020 12 is_stmt 0 view .LVU467
 1516 0022 9B68     		ldr	r3, [r3, #8]
 1517              	.LVL122:
 1518              		.loc 2 7020 76 view .LVU468
 1519 0024 13F0080F 		tst	r3, #8
 1520 0028 07D0     		beq	.L112
 1521              	.LVL123:
 1522              		.loc 2 7020 76 view .LVU469
 1523              	.LBE281:
 1524              	.LBE280:
1018:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1019:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1021:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1022:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1024:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1025:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC state */
1026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1027:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1028:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1029:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1030:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1031:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1032:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1033:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1034:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1035:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1525              		.loc 1 1035 7 is_stmt 1 view .LVU470
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 171


 1526 002a 636D     		ldr	r3, [r4, #84]
 1527 002c 43F48053 		orr	r3, r3, #4096
 1528 0030 6365     		str	r3, [r4, #84]
 1529              	.L111:
1036:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1037:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1038:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1039:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
1040:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1530              		.loc 1 1040 3 view .LVU471
 1531              		.loc 1 1040 3 view .LVU472
 1532 0032 0023     		movs	r3, #0
 1533 0034 84F85030 		strb	r3, [r4, #80]
 1534              		.loc 1 1040 3 view .LVU473
1041:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1042:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
1043:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 1535              		.loc 1 1043 3 view .LVU474
1044:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1536              		.loc 1 1044 1 is_stmt 0 view .LVU475
 1537 0038 10BD     		pop	{r4, pc}
 1538              	.LVL124:
 1539              	.L112:
1020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1540              		.loc 1 1020 7 is_stmt 1 view .LVU476
1020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1541              		.loc 1 1020 24 is_stmt 0 view .LVU477
 1542 003a 2046     		mov	r0, r4
 1543              	.LVL125:
1020:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1544              		.loc 1 1020 24 view .LVU478
 1545 003c FFF7FEFF 		bl	ADC_Disable
 1546              	.LVL126:
1023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1547              		.loc 1 1023 7 is_stmt 1 view .LVU479
1023:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1548              		.loc 1 1023 10 is_stmt 0 view .LVU480
 1549 0040 0028     		cmp	r0, #0
 1550 0042 F6D1     		bne	.L111
1026:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1551              		.loc 1 1026 9 is_stmt 1 view .LVU481
 1552 0044 636D     		ldr	r3, [r4, #84]
 1553 0046 23F48053 		bic	r3, r3, #4096
 1554 004a 23F00103 		bic	r3, r3, #1
 1555 004e 43F00103 		orr	r3, r3, #1
 1556 0052 6365     		str	r3, [r4, #84]
 1557 0054 EDE7     		b	.L111
 1558              	.LVL127:
 1559              	.L113:
 1560              		.cfi_def_cfa_offset 0
 1561              		.cfi_restore 4
 1562              		.cfi_restore 14
1005:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1563              		.loc 1 1005 3 is_stmt 0 view .LVU482
 1564 0056 0220     		movs	r0, #2
 1565              	.LVL128:
 1566              		.loc 1 1044 1 view .LVU483
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 172


 1567 0058 7047     		bx	lr
 1568              		.cfi_endproc
 1569              	.LFE1118:
 1571              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 1572              		.align	1
 1573              		.global	HAL_ADCEx_RegularStop_IT
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1578              	HAL_ADCEx_RegularStop_IT:
 1579              	.LVL129:
 1580              	.LFB1119:
1045:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1046:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1047:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1048:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1049:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1050:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1051:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         on injected group.
1052:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1053:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status.
1054:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1055:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1581              		.loc 1 1056 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
1057:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1585              		.loc 1 1057 3 view .LVU485
1058:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1059:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1060:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1586              		.loc 1 1060 3 view .LVU486
1061:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1062:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
1063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1587              		.loc 1 1063 3 view .LVU487
 1588              		.loc 1 1063 3 view .LVU488
 1589 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1590 0004 012B     		cmp	r3, #1
 1591 0006 2BD0     		beq	.L122
1056:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1592              		.loc 1 1056 1 is_stmt 0 discriminator 2 view .LVU489
 1593 0008 10B5     		push	{r4, lr}
 1594              		.cfi_def_cfa_offset 8
 1595              		.cfi_offset 4, -8
 1596              		.cfi_offset 14, -4
 1597 000a 0446     		mov	r4, r0
 1598              		.loc 1 1063 3 is_stmt 1 discriminator 2 view .LVU490
 1599 000c 0121     		movs	r1, #1
 1600 000e 80F85010 		strb	r1, [r0, #80]
 1601              		.loc 1 1063 3 discriminator 2 view .LVU491
1064:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1065:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1066:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1602              		.loc 1 1066 3 discriminator 2 view .LVU492
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 173


 1603              		.loc 1 1066 20 is_stmt 0 discriminator 2 view .LVU493
 1604 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1605              	.LVL130:
1067:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1068:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1069:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1070:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1606              		.loc 1 1070 3 is_stmt 1 discriminator 2 view .LVU494
 1607              		.loc 1 1070 6 is_stmt 0 discriminator 2 view .LVU495
 1608 0016 88B9     		cbnz	r0, .L120
1071:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1072:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1073:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1609              		.loc 1 1073 5 is_stmt 1 view .LVU496
 1610 0018 636D     		ldr	r3, [r4, #84]
 1611 001a 23F48073 		bic	r3, r3, #256
 1612 001e 6365     		str	r3, [r4, #84]
1074:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1075:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1076:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 1613              		.loc 1 1076 5 view .LVU497
 1614 0020 2268     		ldr	r2, [r4]
 1615 0022 5368     		ldr	r3, [r2, #4]
 1616 0024 23F01C03 		bic	r3, r3, #28
 1617 0028 5360     		str	r3, [r2, #4]
1077:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1078:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1079:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1618              		.loc 1 1079 5 view .LVU498
 1619              		.loc 1 1079 44 is_stmt 0 view .LVU499
 1620 002a 2368     		ldr	r3, [r4]
 1621              	.LVL131:
 1622              	.LBB282:
 1623              	.LBI282:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1624              		.loc 2 7018 26 is_stmt 1 view .LVU500
 1625              	.LBB283:
 1626              		.loc 2 7020 3 view .LVU501
 1627              		.loc 2 7020 12 is_stmt 0 view .LVU502
 1628 002c 9B68     		ldr	r3, [r3, #8]
 1629              	.LVL132:
 1630              		.loc 2 7020 76 view .LVU503
 1631 002e 13F0080F 		tst	r3, #8
 1632 0032 07D0     		beq	.L121
 1633              	.LVL133:
 1634              		.loc 2 7020 76 view .LVU504
 1635              	.LBE283:
 1636              	.LBE282:
1080:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1082:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* if no issue reported */
1083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1084:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1085:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC state */
1086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1087:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1088:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 174


1089:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1090:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1091:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1092:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1093:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1637              		.loc 1 1093 7 is_stmt 1 view .LVU505
 1638 0034 636D     		ldr	r3, [r4, #84]
 1639 0036 43F48053 		orr	r3, r3, #4096
 1640 003a 6365     		str	r3, [r4, #84]
 1641              	.L120:
1094:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1095:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1096:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1097:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
1098:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1642              		.loc 1 1098 3 view .LVU506
 1643              		.loc 1 1098 3 view .LVU507
 1644 003c 0023     		movs	r3, #0
 1645 003e 84F85030 		strb	r3, [r4, #80]
 1646              		.loc 1 1098 3 view .LVU508
1099:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1100:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
1101:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 1647              		.loc 1 1101 3 view .LVU509
1102:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1648              		.loc 1 1102 1 is_stmt 0 view .LVU510
 1649 0042 10BD     		pop	{r4, pc}
 1650              	.LVL134:
 1651              	.L121:
1081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* if no issue reported */
 1652              		.loc 1 1081 7 is_stmt 1 view .LVU511
1081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* if no issue reported */
 1653              		.loc 1 1081 24 is_stmt 0 view .LVU512
 1654 0044 2046     		mov	r0, r4
 1655              	.LVL135:
1081:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* if no issue reported */
 1656              		.loc 1 1081 24 view .LVU513
 1657 0046 FFF7FEFF 		bl	ADC_Disable
 1658              	.LVL136:
1083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1659              		.loc 1 1083 7 is_stmt 1 view .LVU514
1083:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1660              		.loc 1 1083 10 is_stmt 0 view .LVU515
 1661 004a 0028     		cmp	r0, #0
 1662 004c F6D1     		bne	.L120
1086:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1663              		.loc 1 1086 9 is_stmt 1 view .LVU516
 1664 004e 636D     		ldr	r3, [r4, #84]
 1665 0050 23F48053 		bic	r3, r3, #4096
 1666 0054 23F00103 		bic	r3, r3, #1
 1667 0058 43F00103 		orr	r3, r3, #1
 1668 005c 6365     		str	r3, [r4, #84]
 1669 005e EDE7     		b	.L120
 1670              	.LVL137:
 1671              	.L122:
 1672              		.cfi_def_cfa_offset 0
 1673              		.cfi_restore 4
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 175


 1674              		.cfi_restore 14
1063:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1675              		.loc 1 1063 3 is_stmt 0 view .LVU517
 1676 0060 0220     		movs	r0, #2
 1677              	.LVL138:
 1678              		.loc 1 1102 1 view .LVU518
 1679 0062 7047     		bx	lr
 1680              		.cfi_endproc
 1681              	.LFE1119:
 1683              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 1684              		.align	1
 1685              		.global	HAL_ADCEx_RegularStop_DMA
 1686              		.syntax unified
 1687              		.thumb
 1688              		.thumb_func
 1690              	HAL_ADCEx_RegularStop_DMA:
 1691              	.LVL139:
 1692              	.LFB1120:
1103:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1104:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1105:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1106:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1107:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1108:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         on injected group.
1109:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1110:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status.
1111:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1112:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1113:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1693              		.loc 1 1113 1 is_stmt 1 view -0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 0
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697              		.loc 1 1113 1 is_stmt 0 view .LVU520
 1698 0000 38B5     		push	{r3, r4, r5, lr}
 1699              		.cfi_def_cfa_offset 16
 1700              		.cfi_offset 3, -16
 1701              		.cfi_offset 4, -12
 1702              		.cfi_offset 5, -8
 1703              		.cfi_offset 14, -4
1114:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1704              		.loc 1 1114 3 is_stmt 1 view .LVU521
1115:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1116:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1117:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1705              		.loc 1 1117 3 view .LVU522
1118:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1119:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
1120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1706              		.loc 1 1120 3 view .LVU523
 1707              		.loc 1 1120 3 view .LVU524
 1708 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1709 0006 012B     		cmp	r3, #1
 1710 0008 41D0     		beq	.L134
 1711 000a 0446     		mov	r4, r0
 1712              		.loc 1 1120 3 discriminator 2 view .LVU525
 1713 000c 0121     		movs	r1, #1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 176


 1714 000e 80F85010 		strb	r1, [r0, #80]
 1715              		.loc 1 1120 3 discriminator 2 view .LVU526
1121:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1122:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1123:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1716              		.loc 1 1123 3 discriminator 2 view .LVU527
 1717              		.loc 1 1123 20 is_stmt 0 discriminator 2 view .LVU528
 1718 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1719              	.LVL140:
1124:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1125:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1126:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1127:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1720              		.loc 1 1127 3 is_stmt 1 discriminator 2 view .LVU529
 1721              		.loc 1 1127 6 is_stmt 0 discriminator 2 view .LVU530
 1722 0016 0546     		mov	r5, r0
 1723 0018 20B1     		cbz	r0, .L136
 1724              	.LVL141:
 1725              	.L129:
1128:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1129:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1131:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1132:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1134:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1135:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1136:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1138:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1139:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1141:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1142:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1144:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1145:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1146:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1148:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1149:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1150:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1151:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1153:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1155:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1157:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1158:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
1159:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1161:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1162:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1163:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1165:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 177


1166:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Set ADC state */
1167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1168:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1169:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1170:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1171:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1172:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1173:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1175:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1176:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1177:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1178:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
1179:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1726              		.loc 1 1179 3 is_stmt 1 view .LVU531
 1727              		.loc 1 1179 3 view .LVU532
 1728 001a 0023     		movs	r3, #0
 1729 001c 84F85030 		strb	r3, [r4, #80]
 1730              		.loc 1 1179 3 view .LVU533
1180:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1181:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
1182:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 1731              		.loc 1 1182 3 view .LVU534
 1732              	.LVL142:
 1733              	.L128:
1183:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 1734              		.loc 1 1183 1 is_stmt 0 view .LVU535
 1735 0020 2846     		mov	r0, r5
 1736 0022 38BD     		pop	{r3, r4, r5, pc}
 1737              	.LVL143:
 1738              	.L136:
1130:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1739              		.loc 1 1130 5 is_stmt 1 view .LVU536
 1740 0024 636D     		ldr	r3, [r4, #84]
 1741 0026 23F48073 		bic	r3, r3, #256
 1742 002a 6365     		str	r3, [r4, #84]
1133:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1743              		.loc 1 1133 5 view .LVU537
 1744 002c 2268     		ldr	r2, [r4]
 1745 002e D368     		ldr	r3, [r2, #12]
 1746 0030 23F00103 		bic	r3, r3, #1
 1747 0034 D360     		str	r3, [r2, #12]
1137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1748              		.loc 1 1137 5 view .LVU538
1137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1749              		.loc 1 1137 22 is_stmt 0 view .LVU539
 1750 0036 E06C     		ldr	r0, [r4, #76]
 1751              	.LVL144:
1137:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1752              		.loc 1 1137 22 view .LVU540
 1753 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1754              	.LVL145:
1140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1755              		.loc 1 1140 5 is_stmt 1 view .LVU541
1140:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1756              		.loc 1 1140 8 is_stmt 0 view .LVU542
 1757 003c 0546     		mov	r5, r0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 178


 1758 003e 18B1     		cbz	r0, .L130
1143:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 1759              		.loc 1 1143 7 is_stmt 1 view .LVU543
 1760 0040 636D     		ldr	r3, [r4, #84]
 1761 0042 43F04003 		orr	r3, r3, #64
 1762 0046 6365     		str	r3, [r4, #84]
 1763              	.L130:
1147:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1764              		.loc 1 1147 5 view .LVU544
 1765 0048 2268     		ldr	r2, [r4]
 1766 004a 5368     		ldr	r3, [r2, #4]
 1767 004c 23F01003 		bic	r3, r3, #16
 1768 0050 5360     		str	r3, [r2, #4]
1152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1769              		.loc 1 1152 5 view .LVU545
1152:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1770              		.loc 1 1152 44 is_stmt 0 view .LVU546
 1771 0052 2368     		ldr	r3, [r4]
 1772              	.LVL146:
 1773              	.LBB284:
 1774              	.LBI284:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1775              		.loc 2 7018 26 is_stmt 1 view .LVU547
 1776              	.LBB285:
 1777              		.loc 2 7020 3 view .LVU548
 1778              		.loc 2 7020 12 is_stmt 0 view .LVU549
 1779 0054 9B68     		ldr	r3, [r3, #8]
 1780              	.LVL147:
 1781              		.loc 2 7020 76 view .LVU550
 1782 0056 13F0080F 		tst	r3, #8
 1783 005a 04D0     		beq	.L131
 1784              	.LVL148:
 1785              		.loc 2 7020 76 view .LVU551
 1786              	.LBE285:
 1787              	.LBE284:
1174:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 1788              		.loc 1 1174 7 is_stmt 1 view .LVU552
 1789 005c 636D     		ldr	r3, [r4, #84]
 1790 005e 43F48053 		orr	r3, r3, #4096
 1791 0062 6365     		str	r3, [r4, #84]
 1792 0064 D9E7     		b	.L129
 1793              	.LVL149:
 1794              	.L131:
1154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1795              		.loc 1 1154 7 view .LVU553
1154:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1796              		.loc 1 1154 10 is_stmt 0 view .LVU554
 1797 0066 75B9     		cbnz	r5, .L132
1156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1798              		.loc 1 1156 9 is_stmt 1 view .LVU555
1156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1799              		.loc 1 1156 26 is_stmt 0 view .LVU556
 1800 0068 2046     		mov	r0, r4
 1801              	.LVL150:
1156:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1802              		.loc 1 1156 26 view .LVU557
 1803 006a FFF7FEFF 		bl	ADC_Disable
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 179


 1804              	.LVL151:
 1805 006e 0546     		mov	r5, r0
 1806              	.LVL152:
 1807              	.L133:
1164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1808              		.loc 1 1164 7 is_stmt 1 view .LVU558
1164:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 1809              		.loc 1 1164 10 is_stmt 0 view .LVU559
 1810 0070 002D     		cmp	r5, #0
 1811 0072 D2D1     		bne	.L129
1167:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1812              		.loc 1 1167 9 is_stmt 1 view .LVU560
 1813 0074 636D     		ldr	r3, [r4, #84]
 1814 0076 23F48053 		bic	r3, r3, #4096
 1815 007a 23F00103 		bic	r3, r3, #1
 1816 007e 43F00103 		orr	r3, r3, #1
 1817 0082 6365     		str	r3, [r4, #84]
 1818 0084 C9E7     		b	.L129
 1819              	.LVL153:
 1820              	.L132:
1160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1821              		.loc 1 1160 9 view .LVU561
1160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1822              		.loc 1 1160 15 is_stmt 0 view .LVU562
 1823 0086 2046     		mov	r0, r4
 1824              	.LVL154:
1160:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 1825              		.loc 1 1160 15 view .LVU563
 1826 0088 FFF7FEFF 		bl	ADC_Disable
 1827              	.LVL155:
 1828 008c F0E7     		b	.L133
 1829              	.LVL156:
 1830              	.L134:
1120:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 1831              		.loc 1 1120 3 view .LVU564
 1832 008e 0225     		movs	r5, #2
 1833 0090 C6E7     		b	.L128
 1834              		.cfi_endproc
 1835              	.LFE1120:
 1837              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1838              		.align	1
 1839              		.global	HAL_ADCEx_InjectedConfigChannel
 1840              		.syntax unified
 1841              		.thumb
 1842              		.thumb_func
 1844              	HAL_ADCEx_InjectedConfigChannel:
 1845              	.LVL157:
 1846              	.LFB1121:
1184:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1185:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1186:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1187:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @}
1188:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1189:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1190:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1191:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1192:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 180


1193:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1194:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1195:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *
1196:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** @verbatim
1197:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****  ===============================================================================
1198:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1199:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****  ===============================================================================
1200:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1201:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Configure channels on injected group
1202:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1203:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1204:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1205:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1206:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** @endverbatim
1207:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @{
1208:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1209:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1210:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1211:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1212:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1213:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1214:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1215:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1216:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1217:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1218:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1219:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1220:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1221:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1222:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1223:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1224:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1225:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1226:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1227:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1228:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1229:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1230:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1231:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1232:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1233:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1234:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1235:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1236:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1237:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1238:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1239:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1240:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param sConfigInjected Structure of ADC injected group and ADC channel for
1241:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         injected group.
1242:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
1243:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1244:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc, const ADC_InjectionConfT
1245:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 1847              		.loc 1 1245 1 is_stmt 1 view -0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 8
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 181


 1851              		@ link register save eliminated.
 1852              		.loc 1 1245 1 is_stmt 0 view .LVU566
 1853 0000 F0B4     		push	{r4, r5, r6, r7}
 1854              		.cfi_def_cfa_offset 16
 1855              		.cfi_offset 4, -16
 1856              		.cfi_offset 5, -12
 1857              		.cfi_offset 6, -8
 1858              		.cfi_offset 7, -4
 1859 0002 82B0     		sub	sp, sp, #8
 1860              		.cfi_def_cfa_offset 24
 1861 0004 0346     		mov	r3, r0
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1862              		.loc 1 1246 3 is_stmt 1 view .LVU567
 1863              	.LVL158:
1247:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 1864              		.loc 1 1247 3 view .LVU568
1248:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
 1865              		.loc 1 1248 3 view .LVU569
1249:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1866              		.loc 1 1249 3 view .LVU570
1250:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1867              		.loc 1 1250 3 view .LVU571
1251:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1868              		.loc 1 1251 3 view .LVU572
 1869              		.loc 1 1251 17 is_stmt 0 view .LVU573
 1870 0006 0022     		movs	r2, #0
 1871 0008 0192     		str	r2, [sp, #4]
1252:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
 1872              		.loc 1 1253 3 is_stmt 1 view .LVU574
 1873              	.LVL159:
1254:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1255:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1256:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1874              		.loc 1 1256 3 view .LVU575
1257:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 1875              		.loc 1 1257 3 view .LVU576
1258:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
 1876              		.loc 1 1258 3 view .LVU577
1259:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 1877              		.loc 1 1259 3 view .LVU578
1260:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
 1878              		.loc 1 1260 3 view .LVU579
1261:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
 1879              		.loc 1 1261 3 view .LVU580
1262:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(hadc, sConfigInjected->ExternalTrigInjecConv));
 1880              		.loc 1 1262 3 view .LVU581
1263:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
 1881              		.loc 1 1263 3 view .LVU582
1264:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 1882              		.loc 1 1264 3 view .LVU583
1265:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
 1883              		.loc 1 1265 3 view .LVU584
1266:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1267:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 1884              		.loc 1 1267 3 view .LVU585
 1885              		.loc 1 1267 17 is_stmt 0 view .LVU586
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 182


 1886 000a 0069     		ldr	r0, [r0, #16]
 1887              	.LVL160:
1268:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1269:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 1888              		.loc 1 1269 5 is_stmt 1 view .LVU587
1270:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 1889              		.loc 1 1270 5 view .LVU588
1271:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 1890              		.loc 1 1271 5 view .LVU589
1272:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1273:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1274:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1275:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1276:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      ignored (considered as reset) */
1277:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE) && (sConfigInjected->In
 1891              		.loc 1 1277 3 view .LVU590
1278:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1279:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1280:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
 1892              		.loc 1 1280 3 view .LVU591
1281:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1282:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1283:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
 1893              		.loc 1 1283 3 view .LVU592
1284:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1285:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Verification of channel number */
1286:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 1894              		.loc 1 1286 3 view .LVU593
1287:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1288:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfigInjected->InjectedChannel));
1289:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1290:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
1291:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1292:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfigInjected->InjectedChannel));
 1895              		.loc 1 1292 5 view .LVU594
1293:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1294:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1295:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process locked */
1296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1896              		.loc 1 1296 3 view .LVU595
 1897              		.loc 1 1296 3 view .LVU596
 1898 000c 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 1899 0010 012A     		cmp	r2, #1
 1900 0012 00F0BB82 		beq	.L205
 1901              		.loc 1 1296 3 discriminator 2 view .LVU597
 1902 0016 0122     		movs	r2, #1
 1903 0018 83F85020 		strb	r2, [r3, #80]
 1904              		.loc 1 1296 3 discriminator 2 view .LVU598
1297:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1298:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1299:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1300:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1301:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*                                                                          */
1302:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1303:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1304:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1305:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 183


1306:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1307:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1308:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1309:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1310:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1311:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1312:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1313:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1314:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1315:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1316:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1317:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1318:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 1905              		.loc 1 1319 3 discriminator 2 view .LVU599
 1906              		.loc 1 1319 6 is_stmt 0 discriminator 2 view .LVU600
 1907 001c A8B1     		cbz	r0, .L139
1320:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 1908              		.loc 1 1320 23 discriminator 1 view .LVU601
 1909 001e 8A69     		ldr	r2, [r1, #24]
1319:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 1910              		.loc 1 1319 54 discriminator 1 view .LVU602
 1911 0020 012A     		cmp	r2, #1
 1912 0022 12D0     		beq	.L139
1321:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1322:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1323:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1324:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1325:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1326:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1327:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1328:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1330:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1331:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1332:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* software start.                                                      */
1333:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1334:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1335:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*       software start.                                                */
1336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1337:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
1340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
1341:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                           );
1342:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1343:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
1344:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1346:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1347:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
1349:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
1351:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1352:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1353:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 184


1354:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
1355:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1356:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1357:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* sequencer.                                                             */
1358:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*                                                                        */
1359:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1360:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1361:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1362:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1363:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1364:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1365:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1366:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 1913              		.loc 1 1366 5 is_stmt 1 view .LVU603
 1914              		.loc 1 1366 30 is_stmt 0 view .LVU604
 1915 0024 186E     		ldr	r0, [r3, #96]
 1916              		.loc 1 1366 8 view .LVU605
 1917 0026 0028     		cmp	r0, #0
 1918 0028 40F0A080 		bne	.L206
1367:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1368:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1369:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  being built                                                         */
1370:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 1919              		.loc 1 1370 7 is_stmt 1 view .LVU606
 1920              		.loc 1 1370 42 is_stmt 0 view .LVU607
 1921 002c 1A66     		str	r2, [r3, #96]
1371:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1372:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1373:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1374:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 1922              		.loc 1 1374 7 is_stmt 1 view .LVU608
 1923              		.loc 1 1374 42 is_stmt 0 view .LVU609
 1924 002e 0022     		movs	r2, #0
 1925 0030 DA65     		str	r2, [r3, #92]
1375:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1376:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1377:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1378:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1379:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1380:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1381:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1382:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* software start.                                                      */
1383:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1384:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1385:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*       software start.                                                */
1386:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 1926              		.loc 1 1386 7 is_stmt 1 view .LVU610
 1927              		.loc 1 1386 26 is_stmt 0 view .LVU611
 1928 0032 0A6A     		ldr	r2, [r1, #32]
 1929              		.loc 1 1386 10 view .LVU612
 1930 0034 002A     		cmp	r2, #0
 1931 0036 00F09680 		beq	.L145
1387:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U)
 1932              		.loc 1 1388 9 is_stmt 1 view .LVU613
 1933              		.loc 1 1388 60 is_stmt 0 view .LVU614
 1934 003a 8869     		ldr	r0, [r1, #24]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 185


 1935              		.loc 1 1388 86 view .LVU615
 1936 003c 0138     		subs	r0, r0, #1
1389:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1937              		.loc 1 1389 86 view .LVU616
 1938 003e 02F03C02 		and	r2, r2, #60
 1939              		.loc 1 1389 44 view .LVU617
 1940 0042 1043     		orrs	r0, r0, r2
1390:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 1941              		.loc 1 1390 61 view .LVU618
 1942 0044 4A6A     		ldr	r2, [r1, #36]
1388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1943              		.loc 1 1388 41 view .LVU619
 1944 0046 1043     		orrs	r0, r0, r2
 1945              	.LVL161:
1388:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1946              		.loc 1 1388 41 view .LVU620
 1947 0048 91E0     		b	.L144
 1948              	.LVL162:
 1949              	.L139:
1329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1950              		.loc 1 1329 5 is_stmt 1 view .LVU621
1329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1951              		.loc 1 1329 24 is_stmt 0 view .LVU622
 1952 004a 4A68     		ldr	r2, [r1, #4]
1329:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 1953              		.loc 1 1329 8 view .LVU623
 1954 004c 082A     		cmp	r2, #8
 1955 004e 6AD0     		beq	.L221
 1956              	.LVL163:
 1957              	.L141:
1391:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                           );
1392:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1393:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
1394:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U));
1396:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1397:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1398:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1399:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1400:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1401:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1402:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1404:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1405:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
1407:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1408:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Decrease channel count  */
1409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1410:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1411:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1412:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1413:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
1415:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1416:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1417:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 186


1418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
1419:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
1421:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1422:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1423:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1424:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1425:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1426:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1427:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
1428:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1429:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1430:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1431:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1958              		.loc 1 1431 3 is_stmt 1 view .LVU624
 1959              		.loc 1 1431 42 is_stmt 0 view .LVU625
 1960 0050 1A68     		ldr	r2, [r3]
 1961              	.LVL164:
 1962              	.LBB380:
 1963              	.LBI380:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1964              		.loc 2 7018 26 is_stmt 1 view .LVU626
 1965              	.LBB381:
 1966              		.loc 2 7020 3 view .LVU627
 1967              		.loc 2 7020 12 is_stmt 0 view .LVU628
 1968 0052 9068     		ldr	r0, [r2, #8]
 1969              		.loc 2 7020 76 view .LVU629
 1970 0054 10F0080F 		tst	r0, #8
 1971 0058 0DD1     		bne	.L146
 1972              	.LVL165:
 1973              		.loc 2 7020 76 view .LVU630
 1974              	.LBE381:
 1975              	.LBE380:
1432:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1433:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
1434:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 1976              		.loc 1 1434 5 is_stmt 1 view .LVU631
 1977              		.loc 1 1434 24 is_stmt 0 view .LVU632
 1978 005a 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 1979              		.loc 1 1434 8 view .LVU633
 1980 005c 0028     		cmp	r0, #0
 1981 005e 40F0A480 		bne	.L147
1435:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1436:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 1982              		.loc 1 1436 7 is_stmt 1 view .LVU634
 1983 0062 D068     		ldr	r0, [r2, #12]
 1984 0064 20F44010 		bic	r0, r0, #3145728
 1985 0068 8D7F     		ldrb	r5, [r1, #30]	@ zero_extendqisi2
 1986 006a 0C7F     		ldrb	r4, [r1, #28]	@ zero_extendqisi2
 1987 006c 2405     		lsls	r4, r4, #20
 1988 006e 44EA4554 		orr	r4, r4, r5, lsl #21
 1989 0072 2043     		orrs	r0, r0, r4
 1990 0074 D060     		str	r0, [r2, #12]
 1991              	.L146:
1437:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1438:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext)    
1439:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)sConfigInjected->InjectedDiscontinuousCon
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 187


1440:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1441:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
1442:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* discarded.                                                             */
1443:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1444:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
1446:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1447:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext));
1448:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1449:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1450:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1451:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1452:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1453:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1454:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1455:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1456:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
1457:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1458:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1459:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 1992              		.loc 1 1459 3 view .LVU635
 1993              		.loc 1 1459 79 is_stmt 0 view .LVU636
 1994 0076 1C68     		ldr	r4, [r3]
 1995              	.LVL166:
 1996              	.LBB382:
 1997              	.LBI382:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 1998              		.loc 2 6863 26 is_stmt 1 view .LVU637
 1999              	.LBB383:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2000              		.loc 2 6865 3 view .LVU638
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2001              		.loc 2 6865 12 is_stmt 0 view .LVU639
 2002 0078 A268     		ldr	r2, [r4, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2003              		.loc 2 6865 74 view .LVU640
 2004 007a 12F00402 		ands	r2, r2, #4
 2005 007e 00D0     		beq	.L148
 2006 0080 0122     		movs	r2, #1
 2007              	.L148:
 2008              	.LVL167:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2009              		.loc 2 6865 74 view .LVU641
 2010              	.LBE383:
 2011              	.LBE382:
1460:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2012              		.loc 1 1460 3 is_stmt 1 view .LVU642
 2013              	.LBB384:
 2014              	.LBI384:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2015              		.loc 2 7018 26 view .LVU643
 2016              	.LBB385:
 2017              		.loc 2 7020 3 view .LVU644
 2018              		.loc 2 7020 12 is_stmt 0 view .LVU645
 2019 0082 A068     		ldr	r0, [r4, #8]
 2020              		.loc 2 7020 76 view .LVU646
 2021 0084 10F00800 		ands	r0, r0, #8
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 188


 2022 0088 00D0     		beq	.L149
 2023 008a 0120     		movs	r0, #1
 2024              	.L149:
 2025              	.LVL168:
 2026              		.loc 2 7020 76 view .LVU647
 2027              	.LBE385:
 2028              	.LBE384:
1461:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1462:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2029              		.loc 1 1462 3 is_stmt 1 view .LVU648
 2030              		.loc 1 1462 6 is_stmt 0 view .LVU649
 2031 008c 002A     		cmp	r2, #0
 2032 008e 40F01B81 		bne	.L207
1463:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2033              		.loc 1 1463 7 view .LVU650
 2034 0092 0028     		cmp	r0, #0
 2035 0094 40F06481 		bne	.L208
1464:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      )
1465:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1466:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1467:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1468:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 2036              		.loc 1 1468 5 is_stmt 1 view .LVU651
 2037              		.loc 1 1468 25 is_stmt 0 view .LVU652
 2038 0098 0A6A     		ldr	r2, [r1, #32]
 2039              	.LVL169:
 2040              		.loc 1 1468 8 view .LVU653
 2041 009a 1AB1     		cbz	r2, .L151
1469:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 2042              		.loc 1 1469 28 view .LVU654
 2043 009c 4A6A     		ldr	r2, [r1, #36]
 2044              		.loc 1 1469 9 view .LVU655
 2045 009e 002A     		cmp	r2, #0
 2046 00a0 40F09180 		bne	.L152
 2047              	.L151:
1470:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1471:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 2048              		.loc 1 1471 7 is_stmt 1 view .LVU656
 2049              		.loc 1 1471 26 is_stmt 0 view .LVU657
 2050 00a4 4A7F     		ldrb	r2, [r1, #29]	@ zero_extendqisi2
 2051              		.loc 1 1471 10 view .LVU658
 2052 00a6 012A     		cmp	r2, #1
 2053 00a8 00F08780 		beq	.L222
1472:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1474:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1475:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
1476:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1477:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 2054              		.loc 1 1477 9 is_stmt 1 view .LVU659
 2055 00ac E268     		ldr	r2, [r4, #12]
 2056 00ae 22F00072 		bic	r2, r2, #33554432
 2057 00b2 E260     		str	r2, [r4, #12]
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2058              		.loc 1 1246 21 is_stmt 0 view .LVU660
 2059 00b4 0020     		movs	r0, #0
 2060              	.LVL170:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 189


 2061              	.L154:
1478:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1479:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1480:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
1481:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
1482:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1483:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
1485:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1486:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1488:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1490:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1491:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
1492:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1494:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1495:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1496:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1497:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 2062              		.loc 1 1497 5 is_stmt 1 view .LVU661
 2063              		.loc 1 1497 24 is_stmt 0 view .LVU662
 2064 00b6 91F82820 		ldrb	r2, [r1, #40]	@ zero_extendqisi2
 2065              		.loc 1 1497 8 view .LVU663
 2066 00ba 012A     		cmp	r2, #1
 2067 00bc 00F09180 		beq	.L223
1498:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
1500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
1501:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1502:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
1503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS) == (ADC_CFG
1504:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1505:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
1506:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
1507:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
1508:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1509:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Enable OverSampling mode */
1510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
1511:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
1512:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR2_OVSR  |
1513:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR2_OVSS,
1514:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE                                  |
1515:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.Ratio         |
1516:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.RightBitShift
1517:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                 );
1518:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1519:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1520:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1521:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
1522:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 2068              		.loc 1 1522 7 is_stmt 1 view .LVU664
 2069 00c0 1C68     		ldr	r4, [r3]
 2070 00c2 2269     		ldr	r2, [r4, #16]
 2071 00c4 22F00202 		bic	r2, r2, #2
 2072 00c8 2261     		str	r2, [r4, #16]
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 190


 2073              	.L157:
1523:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1524:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1525:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1526:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInject
 2074              		.loc 1 1526 7 view .LVU665
 2075 00ca 1A68     		ldr	r2, [r3]
 2076              		.loc 1 1526 68 is_stmt 0 view .LVU666
 2077 00cc 0E68     		ldr	r6, [r1]
 2078              		.loc 1 1526 102 view .LVU667
 2079 00ce 8D68     		ldr	r5, [r1, #8]
 2080              	.LVL171:
 2081              	.LBB386:
 2082              	.LBI386:
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2083              		.loc 2 5451 22 is_stmt 1 view .LVU668
 2084              	.LBB387:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2085              		.loc 2 5465 3 view .LVU669
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2086              		.loc 2 5465 25 is_stmt 0 view .LVU670
 2087 00d0 02F1140C 		add	ip, r2, #20
 2088 00d4 720E     		lsrs	r2, r6, #25
 2089              	.LVL172:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2090              		.loc 2 5465 25 view .LVU671
 2091 00d6 9200     		lsls	r2, r2, #2
 2092 00d8 02F00402 		and	r2, r2, #4
 2093              	.LVL173:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2094              		.loc 2 5467 3 is_stmt 1 view .LVU672
 2095 00dc 5CF80240 		ldr	r4, [ip, r2]
 2096 00e0 C6F30456 		ubfx	r6, r6, #20, #5
 2097              	.LVL174:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2098              		.loc 2 5467 3 is_stmt 0 view .LVU673
 2099 00e4 0727     		movs	r7, #7
 2100 00e6 B740     		lsls	r7, r7, r6
 2101 00e8 24EA0704 		bic	r4, r4, r7
 2102 00ec B540     		lsls	r5, r5, r6
 2103              	.LVL175:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2104              		.loc 2 5467 3 view .LVU674
 2105 00ee 2C43     		orrs	r4, r4, r5
 2106 00f0 4CF80240 		str	r4, [ip, r2]
 2107              	.LVL176:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2108              		.loc 2 5467 3 view .LVU675
 2109              	.LBE387:
 2110              	.LBE386:
1527:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1528:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
1529:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1530:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
1531:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
1532:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 2111              		.loc 1 1532 5 is_stmt 1 view .LVU676
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 191


 2112              		.loc 1 1532 24 is_stmt 0 view .LVU677
 2113 00f4 4D69     		ldr	r5, [r1, #20]
 2114 00f6 1C68     		ldr	r4, [r3]
 2115 00f8 E268     		ldr	r2, [r4, #12]
 2116 00fa C2F3C102 		ubfx	r2, r2, #3, #2
 2117 00fe 5200     		lsls	r2, r2, #1
 2118              		.loc 1 1532 22 view .LVU678
 2119 0100 9540     		lsls	r5, r5, r2
 2120              	.LVL177:
1533:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1534:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 2121              		.loc 1 1534 5 is_stmt 1 view .LVU679
 2122              		.loc 1 1534 24 is_stmt 0 view .LVU680
 2123 0102 0E69     		ldr	r6, [r1, #16]
 2124              		.loc 1 1534 8 view .LVU681
 2125 0104 042E     		cmp	r6, #4
 2126 0106 78D0     		beq	.L158
1535:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1536:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set ADC selected offset number */
1537:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected->Inje
 2127              		.loc 1 1537 7 is_stmt 1 view .LVU682
 2128              	.LVL178:
 2129              	.LBB388:
 2130              	.LBI388:
3194:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2131              		.loc 2 3194 22 view .LVU683
 2132              	.LBB389:
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2133              		.loc 2 3196 3 view .LVU684
3196:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2134              		.loc 2 3196 25 is_stmt 0 view .LVU685
 2135 0108 6034     		adds	r4, r4, #96
 2136              	.LVL179:
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2137              		.loc 2 3198 3 is_stmt 1 view .LVU686
 2138 010a 54F82670 		ldr	r7, [r4, r6, lsl #2]
 2139 010e 954A     		ldr	r2, .L231
 2140 0110 3A40     		ands	r2, r2, r7
 2141 0112 0F68     		ldr	r7, [r1]
 2142 0114 07F0F847 		and	r7, r7, #2080374784
 2143 0118 3D43     		orrs	r5, r5, r7
 2144              	.LVL180:
3198:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2145              		.loc 2 3198 3 is_stmt 0 view .LVU687
 2146 011a 2A43     		orrs	r2, r2, r5
 2147 011c 42F00042 		orr	r2, r2, #-2147483648
 2148 0120 44F82620 		str	r2, [r4, r6, lsl #2]
 2149              	.LVL181:
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2150              		.loc 2 3201 1 view .LVU688
 2151 0124 D1E0     		b	.L150
 2152              	.LVL182:
 2153              	.L221:
3201:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2154              		.loc 2 3201 1 view .LVU689
 2155              	.LBE389:
 2156              	.LBE388:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 192


1336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 2157              		.loc 1 1336 7 is_stmt 1 view .LVU690
1336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 2158              		.loc 1 1336 26 is_stmt 0 view .LVU691
 2159 0126 086A     		ldr	r0, [r1, #32]
1336:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 2160              		.loc 1 1336 10 view .LVU692
 2161 0128 B8B1     		cbz	r0, .L142
1338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2162              		.loc 1 1338 9 is_stmt 1 view .LVU693
1338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2163              		.loc 1 1338 44 is_stmt 0 view .LVU694
 2164 012a 0A68     		ldr	r2, [r1]
 2165 012c 920E     		lsrs	r2, r2, #26
 2166 012e 1202     		lsls	r2, r2, #8
 2167 0130 02F4F852 		and	r2, r2, #7936
1339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 2168              		.loc 1 1339 86 view .LVU695
 2169 0134 00F03C00 		and	r0, r0, #60
1339:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 2170              		.loc 1 1339 44 view .LVU696
 2171 0138 0243     		orrs	r2, r2, r0
1340:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                           );
 2172              		.loc 1 1340 61 view .LVU697
 2173 013a 486A     		ldr	r0, [r1, #36]
1338:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2174              		.loc 1 1338 41 view .LVU698
 2175 013c 0243     		orrs	r2, r2, r0
 2176              	.LVL183:
 2177              	.L143:
1348:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 2178              		.loc 1 1348 7 is_stmt 1 view .LVU699
 2179 013e 1C68     		ldr	r4, [r3]
 2180 0140 E06C     		ldr	r0, [r4, #76]
 2181 0142 20F0FB40 		bic	r0, r0, #2105540608
 2182 0146 20F4EF00 		bic	r0, r0, #7831552
 2183 014a 20F4BF40 		bic	r0, r0, #24448
 2184 014e 20F07F00 		bic	r0, r0, #127
 2185 0152 1043     		orrs	r0, r0, r2
 2186 0154 E064     		str	r0, [r4, #76]
1350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2187              		.loc 1 1350 7 view .LVU700
1350:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2188              		.loc 1 1350 42 is_stmt 0 view .LVU701
 2189 0156 DA65     		str	r2, [r3, #92]
 2190 0158 7AE7     		b	.L141
 2191              	.LVL184:
 2192              	.L142:
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2193              		.loc 1 1345 9 is_stmt 1 view .LVU702
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2194              		.loc 1 1345 44 is_stmt 0 view .LVU703
 2195 015a 0A68     		ldr	r2, [r1]
 2196 015c 920E     		lsrs	r2, r2, #26
 2197 015e 1202     		lsls	r2, r2, #8
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2198              		.loc 1 1345 41 view .LVU704
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 193


 2199 0160 02F4F852 		and	r2, r2, #7936
 2200              	.LVL185:
1345:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2201              		.loc 1 1345 41 view .LVU705
 2202 0164 EBE7     		b	.L143
 2203              	.LVL186:
 2204              	.L145:
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2205              		.loc 1 1395 9 is_stmt 1 view .LVU706
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2206              		.loc 1 1395 60 is_stmt 0 view .LVU707
 2207 0166 8869     		ldr	r0, [r1, #24]
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2208              		.loc 1 1395 41 view .LVU708
 2209 0168 0138     		subs	r0, r0, #1
 2210              	.LVL187:
1395:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2211              		.loc 1 1395 41 view .LVU709
 2212 016a 00E0     		b	.L144
 2213              	.LVL188:
 2214              	.L206:
1253:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2215              		.loc 1 1253 12 view .LVU710
 2216 016c 0020     		movs	r0, #0
 2217              	.LVL189:
 2218              	.L144:
1403:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2219              		.loc 1 1403 5 is_stmt 1 view .LVU711
1406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2220              		.loc 1 1406 5 view .LVU712
1406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2221              		.loc 1 1406 40 is_stmt 0 view .LVU713
 2222 016e 0A68     		ldr	r2, [r1]
 2223 0170 C2F38462 		ubfx	r2, r2, #26, #5
 2224 0174 4C68     		ldr	r4, [r1, #4]
 2225 0176 04F01F04 		and	r4, r4, #31
 2226 017a A240     		lsls	r2, r2, r4
1406:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2227              		.loc 1 1406 37 view .LVU714
 2228 017c 0243     		orrs	r2, r2, r0
 2229              	.LVL190:
1409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2230              		.loc 1 1409 5 is_stmt 1 view .LVU715
1409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2231              		.loc 1 1409 26 is_stmt 0 view .LVU716
 2232 017e 186E     		ldr	r0, [r3, #96]
1409:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2233              		.loc 1 1409 39 view .LVU717
 2234 0180 0138     		subs	r0, r0, #1
 2235 0182 1866     		str	r0, [r3, #96]
1414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2236              		.loc 1 1414 5 is_stmt 1 view .LVU718
1414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2237              		.loc 1 1414 40 is_stmt 0 view .LVU719
 2238 0184 DC6D     		ldr	r4, [r3, #92]
 2239 0186 2243     		orrs	r2, r2, r4
 2240              	.LVL191:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 194


1414:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2241              		.loc 1 1414 40 view .LVU720
 2242 0188 DA65     		str	r2, [r3, #92]
1418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 2243              		.loc 1 1418 5 is_stmt 1 view .LVU721
1418:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
 2244              		.loc 1 1418 8 is_stmt 0 view .LVU722
 2245 018a 0028     		cmp	r0, #0
 2246 018c 7FF460AF 		bne	.L141
1420:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2247              		.loc 1 1420 7 is_stmt 1 view .LVU723
 2248 0190 1C68     		ldr	r4, [r3]
 2249 0192 E06C     		ldr	r0, [r4, #76]
 2250 0194 20F0FB40 		bic	r0, r0, #2105540608
 2251 0198 20F4EF00 		bic	r0, r0, #7831552
 2252 019c 20F4BF40 		bic	r0, r0, #24448
 2253 01a0 20F07F00 		bic	r0, r0, #127
 2254 01a4 0243     		orrs	r2, r2, r0
 2255 01a6 E264     		str	r2, [r4, #76]
 2256 01a8 52E7     		b	.L141
 2257              	.L147:
1445:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 2258              		.loc 1 1445 7 view .LVU724
 2259 01aa D068     		ldr	r0, [r2, #12]
 2260 01ac 20F44010 		bic	r0, r0, #3145728
 2261 01b0 8C7F     		ldrb	r4, [r1, #30]	@ zero_extendqisi2
 2262 01b2 40EA4450 		orr	r0, r0, r4, lsl #21
 2263 01b6 D060     		str	r0, [r2, #12]
 2264 01b8 5DE7     		b	.L146
 2265              	.LVL192:
 2266              	.L222:
1473:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2267              		.loc 1 1473 9 view .LVU725
 2268 01ba E268     		ldr	r2, [r4, #12]
 2269 01bc 42F00072 		orr	r2, r2, #33554432
 2270 01c0 E260     		str	r2, [r4, #12]
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2271              		.loc 1 1246 21 is_stmt 0 view .LVU726
 2272 01c2 0020     		movs	r0, #0
 2273              	.LVL193:
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2274              		.loc 1 1246 21 view .LVU727
 2275 01c4 77E7     		b	.L154
 2276              	.LVL194:
 2277              	.L152:
1484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 2278              		.loc 1 1484 7 is_stmt 1 view .LVU728
1484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 2279              		.loc 1 1484 26 is_stmt 0 view .LVU729
 2280 01c6 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 2281              	.LVL195:
1484:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
 2282              		.loc 1 1484 10 view .LVU730
 2283 01c8 0128     		cmp	r0, #1
 2284 01ca 05D0     		beq	.L224
1493:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2285              		.loc 1 1493 9 is_stmt 1 view .LVU731
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 195


 2286 01cc E268     		ldr	r2, [r4, #12]
 2287 01ce 22F00072 		bic	r2, r2, #33554432
 2288 01d2 E260     		str	r2, [r4, #12]
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2289              		.loc 1 1246 21 is_stmt 0 view .LVU732
 2290 01d4 0020     		movs	r0, #0
 2291 01d6 6EE7     		b	.L154
 2292              	.L224:
1487:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2293              		.loc 1 1487 9 is_stmt 1 view .LVU733
 2294 01d8 5A6D     		ldr	r2, [r3, #84]
 2295 01da 42F02002 		orr	r2, r2, #32
 2296 01de 5A65     		str	r2, [r3, #84]
1489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2297              		.loc 1 1489 9 view .LVU734
 2298              	.LVL196:
1489:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2299              		.loc 1 1489 9 is_stmt 0 view .LVU735
 2300 01e0 69E7     		b	.L154
 2301              	.LVL197:
 2302              	.L223:
1499:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
 2303              		.loc 1 1499 7 is_stmt 1 view .LVU736
1500:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2304              		.loc 1 1500 7 view .LVU737
1503:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 2305              		.loc 1 1503 7 view .LVU738
1510:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
 2306              		.loc 1 1510 7 view .LVU739
 2307 01e2 1D68     		ldr	r5, [r3]
 2308 01e4 2A69     		ldr	r2, [r5, #16]
 2309 01e6 22F4FF72 		bic	r2, r2, #510
 2310 01ea CC6A     		ldr	r4, [r1, #44]
 2311 01ec 0E6B     		ldr	r6, [r1, #48]
 2312 01ee 3443     		orrs	r4, r4, r6
 2313 01f0 2243     		orrs	r2, r2, r4
 2314 01f2 42F00202 		orr	r2, r2, #2
 2315 01f6 2A61     		str	r2, [r5, #16]
 2316 01f8 67E7     		b	.L157
 2317              	.LVL198:
 2318              	.L158:
1538:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****                        tmpOffsetShifted);
1539:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1540:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1541:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     else
1542:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1543:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Scan each offset register to check if the selected channel is targeted. */
1544:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* If this is the case, the corresponding offset number is disabled.       */
1545:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)) =
 2319              		.loc 1 1545 7 view .LVU740
 2320              	.LBB390:
 2321              	.LBI390:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2322              		.loc 2 3261 26 view .LVU741
 2323              	.LBB391:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2324              		.loc 2 3263 3 view .LVU742
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 196


3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2325              		.loc 2 3265 3 view .LVU743
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2326              		.loc 2 3265 10 is_stmt 0 view .LVU744
 2327 01fa 226E     		ldr	r2, [r4, #96]
 2328              	.LVL199:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2329              		.loc 2 3265 10 view .LVU745
 2330              	.LBE391:
 2331              	.LBE390:
 2332              	.LBB392:
 2333              	.LBI392:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2334              		.loc 2 3261 26 is_stmt 1 view .LVU746
 2335              	.LBB393:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2336              		.loc 2 3263 3 view .LVU747
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2337              		.loc 2 3265 3 view .LVU748
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2338              		.loc 2 3265 10 is_stmt 0 view .LVU749
 2339 01fc 256E     		ldr	r5, [r4, #96]
 2340              	.LVL200:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2341              		.loc 2 3265 10 view .LVU750
 2342              	.LBE393:
 2343              	.LBE392:
 2344              		.loc 1 1545 10 view .LVU751
 2345 01fe C5F38465 		ubfx	r5, r5, #26, #5
 2346              		.loc 1 1545 102 view .LVU752
 2347 0202 0A68     		ldr	r2, [r1]
 2348 0204 C2F31206 		ubfx	r6, r2, #0, #19
 2349 0208 7EBB     		cbnz	r6, .L159
 2350              		.loc 1 1545 102 discriminator 5 view .LVU753
 2351 020a C2F38462 		ubfx	r2, r2, #26, #5
 2352              	.L160:
 2353              		.loc 1 1545 9 discriminator 8 view .LVU754
 2354 020e 9542     		cmp	r5, r2
 2355 0210 33D0     		beq	.L225
 2356              	.L162:
1546:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
1548:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1549:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)) =
 2357              		.loc 1 1549 7 is_stmt 1 view .LVU755
 2358              		.loc 1 1549 10 is_stmt 0 view .LVU756
 2359 0212 1D68     		ldr	r5, [r3]
 2360              	.LVL201:
 2361              	.LBB394:
 2362              	.LBI394:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2363              		.loc 2 3261 26 is_stmt 1 view .LVU757
 2364              	.LBB395:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2365              		.loc 2 3263 3 view .LVU758
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2366              		.loc 2 3265 3 view .LVU759
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 197


3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2367              		.loc 2 3265 10 is_stmt 0 view .LVU760
 2368 0214 6A6E     		ldr	r2, [r5, #100]
 2369              	.LVL202:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2370              		.loc 2 3265 10 view .LVU761
 2371              	.LBE395:
 2372              	.LBE394:
 2373              	.LBB396:
 2374              	.LBI396:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2375              		.loc 2 3261 26 is_stmt 1 view .LVU762
 2376              	.LBB397:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2377              		.loc 2 3263 3 view .LVU763
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2378              		.loc 2 3265 3 view .LVU764
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2379              		.loc 2 3265 10 is_stmt 0 view .LVU765
 2380 0216 6C6E     		ldr	r4, [r5, #100]
 2381              	.LVL203:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2382              		.loc 2 3265 10 view .LVU766
 2383              	.LBE397:
 2384              	.LBE396:
 2385              		.loc 1 1549 10 view .LVU767
 2386 0218 C4F38464 		ubfx	r4, r4, #26, #5
 2387              		.loc 1 1549 102 view .LVU768
 2388 021c 0A68     		ldr	r2, [r1]
 2389 021e C2F31206 		ubfx	r6, r2, #0, #19
 2390 0222 7EBB     		cbnz	r6, .L163
 2391              		.loc 1 1549 102 discriminator 5 view .LVU769
 2392 0224 C2F38462 		ubfx	r2, r2, #26, #5
 2393              	.L164:
 2394              		.loc 1 1549 9 discriminator 8 view .LVU770
 2395 0228 9442     		cmp	r4, r2
 2396 022a 33D0     		beq	.L226
 2397              	.L166:
1550:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
1552:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1553:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)) =
 2398              		.loc 1 1553 7 is_stmt 1 view .LVU771
 2399              		.loc 1 1553 10 is_stmt 0 view .LVU772
 2400 022c 1D68     		ldr	r5, [r3]
 2401              	.LVL204:
 2402              	.LBB398:
 2403              	.LBI398:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2404              		.loc 2 3261 26 is_stmt 1 view .LVU773
 2405              	.LBB399:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2406              		.loc 2 3263 3 view .LVU774
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2407              		.loc 2 3265 3 view .LVU775
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2408              		.loc 2 3265 10 is_stmt 0 view .LVU776
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 198


 2409 022e AA6E     		ldr	r2, [r5, #104]
 2410              	.LVL205:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2411              		.loc 2 3265 10 view .LVU777
 2412              	.LBE399:
 2413              	.LBE398:
 2414              	.LBB400:
 2415              	.LBI400:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2416              		.loc 2 3261 26 is_stmt 1 view .LVU778
 2417              	.LBB401:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2418              		.loc 2 3263 3 view .LVU779
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2419              		.loc 2 3265 3 view .LVU780
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2420              		.loc 2 3265 10 is_stmt 0 view .LVU781
 2421 0230 AC6E     		ldr	r4, [r5, #104]
 2422              	.LVL206:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2423              		.loc 2 3265 10 view .LVU782
 2424              	.LBE401:
 2425              	.LBE400:
 2426              		.loc 1 1553 10 view .LVU783
 2427 0232 C4F38464 		ubfx	r4, r4, #26, #5
 2428              		.loc 1 1553 102 view .LVU784
 2429 0236 0A68     		ldr	r2, [r1]
 2430 0238 C2F31206 		ubfx	r6, r2, #0, #19
 2431 023c 7EBB     		cbnz	r6, .L167
 2432              		.loc 1 1553 102 discriminator 5 view .LVU785
 2433 023e C2F38462 		ubfx	r2, r2, #26, #5
 2434              	.L168:
 2435              		.loc 1 1553 9 discriminator 8 view .LVU786
 2436 0242 9442     		cmp	r4, r2
 2437 0244 33D0     		beq	.L227
 2438              	.L170:
1554:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
1556:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1557:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)) =
 2439              		.loc 1 1557 7 is_stmt 1 view .LVU787
 2440              		.loc 1 1557 10 is_stmt 0 view .LVU788
 2441 0246 1D68     		ldr	r5, [r3]
 2442              	.LVL207:
 2443              	.LBB402:
 2444              	.LBI402:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2445              		.loc 2 3261 26 is_stmt 1 view .LVU789
 2446              	.LBB403:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2447              		.loc 2 3263 3 view .LVU790
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2448              		.loc 2 3265 3 view .LVU791
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2449              		.loc 2 3265 10 is_stmt 0 view .LVU792
 2450 0248 EA6E     		ldr	r2, [r5, #108]
 2451              	.LVL208:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 199


3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2452              		.loc 2 3265 10 view .LVU793
 2453              	.LBE403:
 2454              	.LBE402:
 2455              	.LBB404:
 2456              	.LBI404:
3261:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2457              		.loc 2 3261 26 is_stmt 1 view .LVU794
 2458              	.LBB405:
3263:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2459              		.loc 2 3263 3 view .LVU795
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2460              		.loc 2 3265 3 view .LVU796
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2461              		.loc 2 3265 10 is_stmt 0 view .LVU797
 2462 024a EC6E     		ldr	r4, [r5, #108]
 2463              	.LVL209:
3265:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2464              		.loc 2 3265 10 view .LVU798
 2465              	.LBE405:
 2466              	.LBE404:
 2467              		.loc 1 1557 10 view .LVU799
 2468 024c C4F38464 		ubfx	r4, r4, #26, #5
 2469              		.loc 1 1557 102 view .LVU800
 2470 0250 0A68     		ldr	r2, [r1]
 2471 0252 C2F31206 		ubfx	r6, r2, #0, #19
 2472 0256 7EBB     		cbnz	r6, .L171
 2473              		.loc 1 1557 102 discriminator 5 view .LVU801
 2474 0258 C2F38462 		ubfx	r2, r2, #26, #5
 2475              	.L172:
 2476              		.loc 1 1557 9 discriminator 8 view .LVU802
 2477 025c 9442     		cmp	r4, r2
 2478 025e 34D1     		bne	.L150
1558:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1559:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 2479              		.loc 1 1559 9 is_stmt 1 view .LVU803
 2480              	.LVL210:
 2481              	.LBB406:
 2482              	.LBI406:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2483              		.loc 2 3320 22 view .LVU804
 2484              	.LBB407:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2485              		.loc 2 3322 3 view .LVU805
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2486              		.loc 2 3324 3 view .LVU806
 2487 0260 EA6E     		ldr	r2, [r5, #108]
 2488 0262 22F00042 		bic	r2, r2, #-2147483648
 2489 0266 EA66     		str	r2, [r5, #108]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2490              		.loc 2 3327 1 is_stmt 0 view .LVU807
 2491 0268 2FE0     		b	.L150
 2492              	.LVL211:
 2493              	.L159:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2494              		.loc 2 3327 1 view .LVU808
 2495              	.LBE407:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 200


 2496              	.LBE406:
 2497              	.LBB408:
 2498              	.LBI408:
 2499              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 201


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 202


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 203


 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 204


 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 205


 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 206


 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 207


 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 208


 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 209


 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 210


 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 211


 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 212


 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 213


 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 214


 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 215


 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 216


 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 217


 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 218


1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2500              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU809
 2501              	.LBB409:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2502              		.loc 3 1050 3 discriminator 6 view .LVU810
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2503              		.loc 3 1055 4 discriminator 6 view .LVU811
 2504              		.syntax unified
 2505              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2506 026a 92FAA2F2 		rbit r2, r2
 2507              	@ 0 "" 2
 2508              	.LVL212:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2509              		.loc 3 1068 3 discriminator 6 view .LVU812
 2510              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU813
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 219


 2511              		.thumb
 2512              		.syntax unified
 2513              	.LBE409:
 2514              	.LBE408:
 2515              	.LBB410:
 2516              	.LBI410:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2517              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU814
 2518              	.LBB411:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2519              		.loc 3 1089 3 discriminator 6 view .LVU815
 2520              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU816
 2521 026e 12B1     		cbz	r2, .L209
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2522              		.loc 3 1093 3 is_stmt 1 view .LVU817
 2523              		.loc 3 1093 10 is_stmt 0 view .LVU818
 2524 0270 B2FA82F2 		clz	r2, r2
 2525              	.LVL213:
 2526              		.loc 3 1093 10 view .LVU819
 2527 0274 CBE7     		b	.L160
 2528              	.LVL214:
 2529              	.L209:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2530              		.loc 3 1091 12 view .LVU820
 2531 0276 2022     		movs	r2, #32
 2532              	.LVL215:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2533              		.loc 3 1091 12 view .LVU821
 2534 0278 C9E7     		b	.L160
 2535              	.L225:
 2536              	.LBE411:
 2537              	.LBE410:
1547:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2538              		.loc 1 1547 9 is_stmt 1 view .LVU822
 2539              	.LVL216:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 220


 2540              	.LBB412:
 2541              	.LBI412:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2542              		.loc 2 3320 22 view .LVU823
 2543              	.LBB413:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2544              		.loc 2 3322 3 view .LVU824
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2545              		.loc 2 3324 3 view .LVU825
 2546 027a 226E     		ldr	r2, [r4, #96]
 2547 027c 22F00042 		bic	r2, r2, #-2147483648
 2548 0280 2266     		str	r2, [r4, #96]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2549              		.loc 2 3327 1 is_stmt 0 view .LVU826
 2550 0282 C6E7     		b	.L162
 2551              	.LVL217:
 2552              	.L163:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2553              		.loc 2 3327 1 view .LVU827
 2554              	.LBE413:
 2555              	.LBE412:
 2556              	.LBB414:
 2557              	.LBI414:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2558              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU828
 2559              	.LBB415:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2560              		.loc 3 1050 3 discriminator 6 view .LVU829
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2561              		.loc 3 1055 4 discriminator 6 view .LVU830
 2562              		.syntax unified
 2563              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2564 0284 92FAA2F2 		rbit r2, r2
 2565              	@ 0 "" 2
 2566              	.LVL218:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2567              		.loc 3 1068 3 discriminator 6 view .LVU831
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2568              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU832
 2569              		.thumb
 2570              		.syntax unified
 2571              	.LBE415:
 2572              	.LBE414:
 2573              	.LBB416:
 2574              	.LBI416:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2575              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU833
 2576              	.LBB417:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2577              		.loc 3 1089 3 discriminator 6 view .LVU834
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2578              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU835
 2579 0288 12B1     		cbz	r2, .L210
 2580              		.loc 3 1093 3 is_stmt 1 view .LVU836
 2581              		.loc 3 1093 10 is_stmt 0 view .LVU837
 2582 028a B2FA82F2 		clz	r2, r2
 2583              	.LVL219:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 221


 2584              		.loc 3 1093 10 view .LVU838
 2585 028e CBE7     		b	.L164
 2586              	.LVL220:
 2587              	.L210:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2588              		.loc 3 1091 12 view .LVU839
 2589 0290 2022     		movs	r2, #32
 2590              	.LVL221:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2591              		.loc 3 1091 12 view .LVU840
 2592 0292 C9E7     		b	.L164
 2593              	.L226:
 2594              	.LBE417:
 2595              	.LBE416:
1551:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2596              		.loc 1 1551 9 is_stmt 1 view .LVU841
 2597              	.LVL222:
 2598              	.LBB418:
 2599              	.LBI418:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2600              		.loc 2 3320 22 view .LVU842
 2601              	.LBB419:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2602              		.loc 2 3322 3 view .LVU843
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2603              		.loc 2 3324 3 view .LVU844
 2604 0294 6A6E     		ldr	r2, [r5, #100]
 2605 0296 22F00042 		bic	r2, r2, #-2147483648
 2606 029a 6A66     		str	r2, [r5, #100]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2607              		.loc 2 3327 1 is_stmt 0 view .LVU845
 2608 029c C6E7     		b	.L166
 2609              	.LVL223:
 2610              	.L167:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2611              		.loc 2 3327 1 view .LVU846
 2612              	.LBE419:
 2613              	.LBE418:
 2614              	.LBB420:
 2615              	.LBI420:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2616              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU847
 2617              	.LBB421:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2618              		.loc 3 1050 3 discriminator 6 view .LVU848
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2619              		.loc 3 1055 4 discriminator 6 view .LVU849
 2620              		.syntax unified
 2621              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2622 029e 92FAA2F2 		rbit r2, r2
 2623              	@ 0 "" 2
 2624              	.LVL224:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2625              		.loc 3 1068 3 discriminator 6 view .LVU850
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2626              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU851
 2627              		.thumb
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 222


 2628              		.syntax unified
 2629              	.LBE421:
 2630              	.LBE420:
 2631              	.LBB422:
 2632              	.LBI422:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2633              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU852
 2634              	.LBB423:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2635              		.loc 3 1089 3 discriminator 6 view .LVU853
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2636              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU854
 2637 02a2 12B1     		cbz	r2, .L211
 2638              		.loc 3 1093 3 is_stmt 1 view .LVU855
 2639              		.loc 3 1093 10 is_stmt 0 view .LVU856
 2640 02a4 B2FA82F2 		clz	r2, r2
 2641              	.LVL225:
 2642              		.loc 3 1093 10 view .LVU857
 2643 02a8 CBE7     		b	.L168
 2644              	.LVL226:
 2645              	.L211:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2646              		.loc 3 1091 12 view .LVU858
 2647 02aa 2022     		movs	r2, #32
 2648              	.LVL227:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2649              		.loc 3 1091 12 view .LVU859
 2650 02ac C9E7     		b	.L168
 2651              	.L227:
 2652              	.LBE423:
 2653              	.LBE422:
1555:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
 2654              		.loc 1 1555 9 is_stmt 1 view .LVU860
 2655              	.LVL228:
 2656              	.LBB424:
 2657              	.LBI424:
3320:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2658              		.loc 2 3320 22 view .LVU861
 2659              	.LBB425:
3322:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2660              		.loc 2 3322 3 view .LVU862
3324:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2661              		.loc 2 3324 3 view .LVU863
 2662 02ae AA6E     		ldr	r2, [r5, #104]
 2663 02b0 22F00042 		bic	r2, r2, #-2147483648
 2664 02b4 AA66     		str	r2, [r5, #104]
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2665              		.loc 2 3327 1 is_stmt 0 view .LVU864
 2666 02b6 C6E7     		b	.L170
 2667              	.LVL229:
 2668              	.L171:
3327:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2669              		.loc 2 3327 1 view .LVU865
 2670              	.LBE425:
 2671              	.LBE424:
 2672              	.LBB426:
 2673              	.LBI426:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 223


1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2674              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU866
 2675              	.LBB427:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2676              		.loc 3 1050 3 discriminator 6 view .LVU867
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2677              		.loc 3 1055 4 discriminator 6 view .LVU868
 2678              		.syntax unified
 2679              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2680 02b8 92FAA2F2 		rbit r2, r2
 2681              	@ 0 "" 2
 2682              	.LVL230:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2683              		.loc 3 1068 3 discriminator 6 view .LVU869
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2684              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU870
 2685              		.thumb
 2686              		.syntax unified
 2687              	.LBE427:
 2688              	.LBE426:
 2689              	.LBB428:
 2690              	.LBI428:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2691              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU871
 2692              	.LBB429:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2693              		.loc 3 1089 3 discriminator 6 view .LVU872
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2694              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU873
 2695 02bc 12B1     		cbz	r2, .L212
 2696              		.loc 3 1093 3 is_stmt 1 view .LVU874
 2697              		.loc 3 1093 10 is_stmt 0 view .LVU875
 2698 02be B2FA82F2 		clz	r2, r2
 2699              	.LVL231:
 2700              		.loc 3 1093 10 view .LVU876
 2701 02c2 CBE7     		b	.L172
 2702              	.LVL232:
 2703              	.L212:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2704              		.loc 3 1091 12 view .LVU877
 2705 02c4 2022     		movs	r2, #32
 2706              	.LVL233:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2707              		.loc 3 1091 12 view .LVU878
 2708 02c6 C9E7     		b	.L172
 2709              	.LVL234:
 2710              	.L207:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2711              		.loc 3 1091 12 view .LVU879
 2712              	.LBE429:
 2713              	.LBE428:
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2714              		.loc 1 1246 21 view .LVU880
 2715 02c8 0020     		movs	r0, #0
 2716              	.LVL235:
 2717              	.L150:
1560:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 224


1561:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1562:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1563:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1564:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1565:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1566:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1567:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
1568:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
1569:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2718              		.loc 1 1569 3 is_stmt 1 view .LVU881
 2719              		.loc 1 1569 28 is_stmt 0 view .LVU882
 2720 02ca 1D68     		ldr	r5, [r3]
 2721              	.LVL236:
 2722              	.LBB430:
 2723              	.LBI430:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2724              		.loc 2 6706 26 is_stmt 1 view .LVU883
 2725              	.LBB431:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2726              		.loc 2 6708 3 view .LVU884
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2727              		.loc 2 6708 12 is_stmt 0 view .LVU885
 2728 02cc AA68     		ldr	r2, [r5, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2729              		.loc 2 6708 68 view .LVU886
 2730 02ce 12F0010F 		tst	r2, #1
 2731 02d2 40F02181 		bne	.L174
 2732              	.LVL237:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2733              		.loc 2 6708 68 view .LVU887
 2734              	.LBE431:
 2735              	.LBE430:
1570:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1571:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
1572:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected->
 2736              		.loc 1 1572 5 is_stmt 1 view .LVU888
 2737              		.loc 1 1572 64 is_stmt 0 view .LVU889
 2738 02d6 0A68     		ldr	r2, [r1]
 2739              		.loc 1 1572 98 view .LVU890
 2740 02d8 CE68     		ldr	r6, [r1, #12]
 2741              	.LVL238:
 2742              	.LBB432:
 2743              	.LBI432:
5692:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2744              		.loc 2 5692 22 is_stmt 1 view .LVU891
 2745              	.LBB433:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2746              		.loc 2 5697 3 view .LVU892
 2747 02da D5F8B040 		ldr	r4, [r5, #176]
 2748 02de C2F31207 		ubfx	r7, r2, #0, #19
 2749 02e2 24EA0704 		bic	r4, r4, r7
 2750 02e6 06F0180C 		and	ip, r6, #24
 2751 02ea 1F4E     		ldr	r6, .L231+4
 2752              	.LVL239:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2753              		.loc 2 5697 3 is_stmt 0 view .LVU893
 2754 02ec 26FA0CFC 		lsr	ip, r6, ip
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 225


 2755 02f0 02EA0C02 		and	r2, r2, ip
 2756              	.LVL240:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2757              		.loc 2 5697 3 view .LVU894
 2758 02f4 C2F31202 		ubfx	r2, r2, #0, #19
 2759 02f8 2243     		orrs	r2, r2, r4
 2760 02fa C5F8B020 		str	r2, [r5, #176]
 2761              	.LVL241:
5697:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2762              		.loc 2 5697 3 view .LVU895
 2763              	.LBE433:
 2764              	.LBE432:
1573:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1574:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Configuration of differential mode */
1575:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
1576:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 2765              		.loc 1 1576 5 is_stmt 1 view .LVU896
 2766              		.loc 1 1576 24 is_stmt 0 view .LVU897
 2767 02fe CC68     		ldr	r4, [r1, #12]
 2768              		.loc 1 1576 8 view .LVU898
 2769 0300 1A4A     		ldr	r2, .L231+8
 2770 0302 9442     		cmp	r4, r2
 2771 0304 40D0     		beq	.L228
 2772              	.L175:
1577:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1578:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL
1580:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1581:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1582:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
1583:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
1584:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
1585:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
1586:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* HAL_ADC_DeInit().                                                      */
1587:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1588:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfigInjected->InjectedChannel))
 2773              		.loc 1 1588 5 is_stmt 1 view .LVU899
 2774              		.loc 1 1588 8 is_stmt 0 view .LVU900
 2775 0306 0A68     		ldr	r2, [r1]
 2776              		.loc 1 1588 7 view .LVU901
 2777 0308 1949     		ldr	r1, .L231+12
 2778              	.LVL242:
 2779              		.loc 1 1588 7 view .LVU902
 2780 030a 0A42     		tst	r2, r1
 2781 030c 00F00481 		beq	.L174
1589:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     {
1590:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
1591:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
1592:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
1593:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 2782              		.loc 1 1593 7 is_stmt 1 view .LVU903
 2783              	.LVL243:
 2784              	.LBB434:
 2785              	.LBI434:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2786              		.loc 2 6706 26 view .LVU904
 2787              	.LBB435:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 226


6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2788              		.loc 2 6708 3 view .LVU905
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2789              		.loc 2 6708 12 is_stmt 0 view .LVU906
 2790 0310 1849     		ldr	r1, .L231+16
 2791 0312 8968     		ldr	r1, [r1, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2792              		.loc 2 6708 68 view .LVU907
 2793 0314 11F0010F 		tst	r1, #1
 2794 0318 40F0F980 		bne	.L199
 2795              	.LVL244:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2796              		.loc 2 6708 68 view .LVU908
 2797              	.LBE435:
 2798              	.LBE434:
1594:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1595:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
 2799              		.loc 1 1595 9 is_stmt 1 view .LVU909
 2800              	.LBB436:
 2801              	.LBI436:
2589:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2802              		.loc 2 2589 26 view .LVU910
 2803              	.LBB437:
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2804              		.loc 2 2591 3 view .LVU911
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2805              		.loc 2 2591 21 is_stmt 0 view .LVU912
 2806 031c 1649     		ldr	r1, .L231+20
 2807 031e 8968     		ldr	r1, [r1, #8]
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2808              		.loc 2 2591 10 view .LVU913
 2809 0320 01F0E075 		and	r5, r1, #29360128
 2810              	.LVL245:
2591:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2811              		.loc 2 2591 10 view .LVU914
 2812              	.LBE437:
 2813              	.LBE436:
1596:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1597:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* If the requested internal measurement path has already been enabled, */
1598:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* bypass the configuration processing.                                 */
1599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_c
 2814              		.loc 1 1599 9 is_stmt 1 view .LVU915
 2815              		.loc 1 1599 12 is_stmt 0 view .LVU916
 2816 0324 154C     		ldr	r4, .L231+24
 2817 0326 A242     		cmp	r2, r4
 2818 0328 00F0FC80 		beq	.L229
 2819              	.L201:
1600:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
1602:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
1603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
1604:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1605:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             /* Delay for temperature sensor stabilization time */
1606:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             /* Wait loop initialization and execution */
1607:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             /* Note: Variable divided by 2 to compensate partially              */
1608:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             /*       CPU processing cycles, scaling in us split to not          */
1609:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             /*       exceed 32 bits register capacity and handle low frequency. */
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 227


1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (SystemCoreClock / (10000
1611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             while(wait_loop_index != 0UL)
1612:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             {
1613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****               wait_loop_index--;
1614:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             }
1615:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           }
1616:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
1617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_ch
 2820              		.loc 1 1617 14 is_stmt 1 view .LVU917
 2821              		.loc 1 1617 17 is_stmt 0 view .LVU918
 2822 032c 144C     		ldr	r4, .L231+28
 2823 032e A242     		cmp	r2, r4
 2824 0330 00F01B81 		beq	.L230
 2825              	.L204:
1618:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
1620:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
1621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
1622:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           }
1623:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
1624:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal
 2826              		.loc 1 1624 14 is_stmt 1 view .LVU919
 2827              		.loc 1 1624 17 is_stmt 0 view .LVU920
 2828 0334 134C     		ldr	r4, .L231+32
 2829 0336 A242     		cmp	r2, r4
 2830 0338 40F0EE80 		bne	.L174
 2831              		.loc 1 1624 76 discriminator 1 view .LVU921
 2832 033c 11F4800F 		tst	r1, #4194304
 2833 0340 40F0EA80 		bne	.L174
1625:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
1626:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           if (ADC_VREFINT_INSTANCE(hadc))
 2834              		.loc 1 1626 11 is_stmt 1 view .LVU922
 2835              		.loc 1 1626 15 is_stmt 0 view .LVU923
 2836 0344 1968     		ldr	r1, [r3]
 2837              		.loc 1 1626 14 view .LVU924
 2838 0346 0B4A     		ldr	r2, .L231+16
 2839 0348 9142     		cmp	r1, r2
 2840 034a 40F0E580 		bne	.L174
1627:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
1628:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
 2841              		.loc 1 1628 13 is_stmt 1 view .LVU925
 2842 034e 45F48002 		orr	r2, r5, #4194304
 2843              	.LVL246:
 2844              	.LBB438:
 2845              	.LBI438:
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2846              		.loc 2 2496 22 view .LVU926
 2847              	.LBB439:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2848              		.loc 2 2498 3 view .LVU927
 2849 0352 094C     		ldr	r4, .L231+20
 2850 0354 A168     		ldr	r1, [r4, #8]
 2851 0356 21F0E071 		bic	r1, r1, #29360128
 2852 035a 0A43     		orrs	r2, r2, r1
 2853              	.LVL247:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 2854              		.loc 2 2498 3 is_stmt 0 view .LVU928
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 228


 2855 035c A260     		str	r2, [r4, #8]
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2856              		.loc 2 2499 1 view .LVU929
 2857 035e DBE0     		b	.L174
 2858              	.LVL248:
 2859              	.L208:
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2860              		.loc 2 2499 1 view .LVU930
 2861              	.LBE439:
 2862              	.LBE438:
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2863              		.loc 1 1246 21 view .LVU931
 2864 0360 0020     		movs	r0, #0
 2865              	.LVL249:
1246:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2866              		.loc 1 1246 21 view .LVU932
 2867 0362 B2E7     		b	.L150
 2868              	.L232:
 2869              		.align	2
 2870              	.L231:
 2871 0364 00F0FF03 		.word	67104768
 2872 0368 FFFF0700 		.word	524287
 2873 036c 00007F40 		.word	1082064896
 2874 0370 00000880 		.word	-2146959360
 2875 0374 00000450 		.word	1342439424
 2876 0378 00030450 		.word	1342440192
 2877 037c 000052C7 		.word	-950927360
 2878 0380 000084CB 		.word	-880541696
 2879 0384 01000080 		.word	-2147483647
 2880              	.LVL250:
 2881              	.L228:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2882              		.loc 1 1579 7 is_stmt 1 view .LVU933
 2883 0388 1D68     		ldr	r5, [r3]
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2884              		.loc 1 1579 64 is_stmt 0 view .LVU934
 2885 038a 0A68     		ldr	r2, [r1]
 2886 038c C2F31206 		ubfx	r6, r2, #0, #19
 2887 0390 002E     		cmp	r6, #0
 2888 0392 3AD1     		bne	.L176
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2889              		.loc 1 1579 64 discriminator 1 view .LVU935
 2890 0394 940E     		lsrs	r4, r2, #26
 2891 0396 0134     		adds	r4, r4, #1
 2892 0398 04F01F04 		and	r4, r4, #31
 2893 039c 092C     		cmp	r4, #9
 2894 039e 8CBF     		ite	hi
 2895 03a0 0024     		movhi	r4, #0
 2896 03a2 0124     		movls	r4, #1
 2897              	.L177:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2898              		.loc 1 1579 7 discriminator 4 view .LVU936
 2899 03a4 002C     		cmp	r4, #0
 2900 03a6 68D0     		beq	.L179
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2901              		.loc 1 1579 64 discriminator 5 view .LVU937
 2902 03a8 002E     		cmp	r6, #0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 229


 2903 03aa 3DD1     		bne	.L180
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2904              		.loc 1 1579 64 discriminator 7 view .LVU938
 2905 03ac 940E     		lsrs	r4, r2, #26
 2906 03ae 0134     		adds	r4, r4, #1
 2907 03b0 A406     		lsls	r4, r4, #26
 2908 03b2 04F0F844 		and	r4, r4, #2080374784
 2909              	.L181:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2910              		.loc 1 1579 64 discriminator 10 view .LVU939
 2911 03b6 002E     		cmp	r6, #0
 2912 03b8 42D1     		bne	.L183
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2913              		.loc 1 1579 64 discriminator 11 view .LVU940
 2914 03ba 4FEA926C 		lsr	ip, r2, #26
 2915 03be 0CF1010C 		add	ip, ip, #1
 2916 03c2 0CF01F0C 		and	ip, ip, #31
 2917 03c6 0127     		movs	r7, #1
 2918 03c8 07FA0CF7 		lsl	r7, r7, ip
 2919              	.L184:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2920              		.loc 1 1579 64 discriminator 14 view .LVU941
 2921 03cc 3C43     		orrs	r4, r4, r7
 2922 03ce 002E     		cmp	r6, #0
 2923 03d0 45D1     		bne	.L186
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2924              		.loc 1 1579 64 discriminator 15 view .LVU942
 2925 03d2 920E     		lsrs	r2, r2, #26
 2926 03d4 0132     		adds	r2, r2, #1
 2927 03d6 02F01F02 		and	r2, r2, #31
 2928 03da 02EB4202 		add	r2, r2, r2, lsl #1
 2929 03de 1205     		lsls	r2, r2, #20
 2930              	.L187:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2931              		.loc 1 1579 7 discriminator 18 view .LVU943
 2932 03e0 1443     		orrs	r4, r4, r2
 2933              	.L189:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 2934              		.loc 1 1579 205 discriminator 32 view .LVU944
 2935 03e2 8E68     		ldr	r6, [r1, #8]
 2936              	.LVL251:
 2937              	.LBB440:
 2938              	.LBI440:
5451:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 2939              		.loc 2 5451 22 is_stmt 1 discriminator 32 view .LVU945
 2940              	.LBB441:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2941              		.loc 2 5465 3 discriminator 32 view .LVU946
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2942              		.loc 2 5465 25 is_stmt 0 discriminator 32 view .LVU947
 2943 03e4 1435     		adds	r5, r5, #20
 2944              	.LVL252:
5465:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 2945              		.loc 2 5465 25 discriminator 32 view .LVU948
 2946 03e6 620E     		lsrs	r2, r4, #25
 2947 03e8 9200     		lsls	r2, r2, #2
 2948 03ea 02F00402 		and	r2, r2, #4
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 230


 2949              	.LVL253:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2950              		.loc 2 5467 3 is_stmt 1 discriminator 32 view .LVU949
 2951 03ee AF58     		ldr	r7, [r5, r2]
 2952 03f0 C4F30454 		ubfx	r4, r4, #20, #5
 2953              	.LVL254:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2954              		.loc 2 5467 3 is_stmt 0 discriminator 32 view .LVU950
 2955 03f4 4FF0070C 		mov	ip, #7
 2956 03f8 0CFA04FC 		lsl	ip, ip, r4
 2957 03fc 27EA0C0C 		bic	ip, r7, ip
 2958 0400 A640     		lsls	r6, r6, r4
 2959              	.LVL255:
5467:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2960              		.loc 2 5467 3 discriminator 32 view .LVU951
 2961 0402 4CEA0606 		orr	r6, ip, r6
 2962 0406 AE50     		str	r6, [r5, r2]
 2963              	.LVL256:
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 2964              		.loc 2 5471 1 discriminator 32 view .LVU952
 2965 0408 7DE7     		b	.L175
 2966              	.LVL257:
 2967              	.L176:
5471:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** #endif /* ADC_SUPPORT_2_5_MSPS */
 2968              		.loc 2 5471 1 discriminator 32 view .LVU953
 2969              	.LBE441:
 2970              	.LBE440:
 2971              	.LBB442:
 2972              	.LBI442:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2973              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU954
 2974              	.LBB443:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2975              		.loc 3 1050 3 discriminator 2 view .LVU955
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2976              		.loc 3 1055 4 discriminator 2 view .LVU956
 2977              		.syntax unified
 2978              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2979 040a 92FAA2F4 		rbit r4, r2
 2980              	@ 0 "" 2
 2981              	.LVL258:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2982              		.loc 3 1068 3 discriminator 2 view .LVU957
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2983              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU958
 2984              		.thumb
 2985              		.syntax unified
 2986              	.LBE443:
 2987              	.LBE442:
 2988              	.LBB444:
 2989              	.LBI444:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2990              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU959
 2991              	.LBB445:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2992              		.loc 3 1089 3 discriminator 2 view .LVU960
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 231


 2993              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU961
 2994 040e 4CB1     		cbz	r4, .L213
 2995              		.loc 3 1093 3 is_stmt 1 view .LVU962
 2996              		.loc 3 1093 10 is_stmt 0 view .LVU963
 2997 0410 B4FA84F4 		clz	r4, r4
 2998              	.LVL259:
 2999              	.L178:
 3000              		.loc 3 1093 10 view .LVU964
 3001              	.LBE445:
 3002              	.LBE444:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3003              		.loc 1 1579 64 view .LVU965
 3004 0414 0134     		adds	r4, r4, #1
 3005 0416 04F01F04 		and	r4, r4, #31
 3006 041a 092C     		cmp	r4, #9
 3007 041c 8CBF     		ite	hi
 3008 041e 0024     		movhi	r4, #0
 3009 0420 0124     		movls	r4, #1
 3010 0422 BFE7     		b	.L177
 3011              	.LVL260:
 3012              	.L213:
 3013              	.LBB447:
 3014              	.LBB446:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3015              		.loc 3 1091 12 view .LVU966
 3016 0424 2024     		movs	r4, #32
 3017              	.LVL261:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3018              		.loc 3 1091 12 view .LVU967
 3019 0426 F5E7     		b	.L178
 3020              	.L180:
 3021              	.LVL262:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3022              		.loc 3 1091 12 view .LVU968
 3023              	.LBE446:
 3024              	.LBE447:
 3025              	.LBB448:
 3026              	.LBI448:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3027              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU969
 3028              	.LBB449:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3029              		.loc 3 1050 3 discriminator 8 view .LVU970
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3030              		.loc 3 1055 4 discriminator 8 view .LVU971
 3031              		.syntax unified
 3032              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3033 0428 92FAA2F4 		rbit r4, r2
 3034              	@ 0 "" 2
 3035              	.LVL263:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3036              		.loc 3 1068 3 discriminator 8 view .LVU972
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3037              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU973
 3038              		.thumb
 3039              		.syntax unified
 3040              	.LBE449:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 232


 3041              	.LBE448:
 3042              	.LBB450:
 3043              	.LBI450:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3044              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU974
 3045              	.LBB451:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3046              		.loc 3 1089 3 discriminator 8 view .LVU975
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3047              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU976
 3048 042c 34B1     		cbz	r4, .L214
 3049              		.loc 3 1093 3 is_stmt 1 view .LVU977
 3050              		.loc 3 1093 10 is_stmt 0 view .LVU978
 3051 042e B4FA84F4 		clz	r4, r4
 3052              	.LVL264:
 3053              	.L182:
 3054              		.loc 3 1093 10 view .LVU979
 3055              	.LBE451:
 3056              	.LBE450:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3057              		.loc 1 1579 64 view .LVU980
 3058 0432 0134     		adds	r4, r4, #1
 3059 0434 A406     		lsls	r4, r4, #26
 3060 0436 04F0F844 		and	r4, r4, #2080374784
 3061 043a BCE7     		b	.L181
 3062              	.LVL265:
 3063              	.L214:
 3064              	.LBB453:
 3065              	.LBB452:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3066              		.loc 3 1091 12 view .LVU981
 3067 043c 2024     		movs	r4, #32
 3068              	.LVL266:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3069              		.loc 3 1091 12 view .LVU982
 3070 043e F8E7     		b	.L182
 3071              	.L183:
 3072              	.LVL267:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3073              		.loc 3 1091 12 view .LVU983
 3074              	.LBE452:
 3075              	.LBE453:
 3076              	.LBB454:
 3077              	.LBI454:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3078              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU984
 3079              	.LBB455:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3080              		.loc 3 1050 3 discriminator 12 view .LVU985
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3081              		.loc 3 1055 4 discriminator 12 view .LVU986
 3082              		.syntax unified
 3083              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3084 0440 92FAA2F7 		rbit r7, r2
 3085              	@ 0 "" 2
 3086              	.LVL268:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 233


 3087              		.loc 3 1068 3 discriminator 12 view .LVU987
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3088              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU988
 3089              		.thumb
 3090              		.syntax unified
 3091              	.LBE455:
 3092              	.LBE454:
 3093              	.LBB456:
 3094              	.LBI456:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3095              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU989
 3096              	.LBB457:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3097              		.loc 3 1089 3 discriminator 12 view .LVU990
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3098              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU991
 3099 0444 4FB1     		cbz	r7, .L215
 3100              		.loc 3 1093 3 is_stmt 1 view .LVU992
 3101              		.loc 3 1093 10 is_stmt 0 view .LVU993
 3102 0446 B7FA87F7 		clz	r7, r7
 3103              	.LVL269:
 3104              	.L185:
 3105              		.loc 3 1093 10 view .LVU994
 3106              	.LBE457:
 3107              	.LBE456:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3108              		.loc 1 1579 64 view .LVU995
 3109 044a 0137     		adds	r7, r7, #1
 3110 044c 07F01F07 		and	r7, r7, #31
 3111 0450 4FF0010C 		mov	ip, #1
 3112 0454 0CFA07F7 		lsl	r7, ip, r7
 3113 0458 B8E7     		b	.L184
 3114              	.LVL270:
 3115              	.L215:
 3116              	.LBB459:
 3117              	.LBB458:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3118              		.loc 3 1091 12 view .LVU996
 3119 045a 2027     		movs	r7, #32
 3120              	.LVL271:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3121              		.loc 3 1091 12 view .LVU997
 3122 045c F5E7     		b	.L185
 3123              	.L186:
 3124              	.LVL272:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3125              		.loc 3 1091 12 view .LVU998
 3126              	.LBE458:
 3127              	.LBE459:
 3128              	.LBB460:
 3129              	.LBI460:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3130              		.loc 3 1048 31 is_stmt 1 discriminator 16 view .LVU999
 3131              	.LBB461:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3132              		.loc 3 1050 3 discriminator 16 view .LVU1000
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 234


 3133              		.loc 3 1055 4 discriminator 16 view .LVU1001
 3134              		.syntax unified
 3135              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3136 045e 92FAA2F2 		rbit r2, r2
 3137              	@ 0 "" 2
 3138              	.LVL273:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3139              		.loc 3 1068 3 discriminator 16 view .LVU1002
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3140              		.loc 3 1068 3 is_stmt 0 discriminator 16 view .LVU1003
 3141              		.thumb
 3142              		.syntax unified
 3143              	.LBE461:
 3144              	.LBE460:
 3145              	.LBB462:
 3146              	.LBI462:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3147              		.loc 3 1078 30 is_stmt 1 discriminator 16 view .LVU1004
 3148              	.LBB463:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3149              		.loc 3 1089 3 discriminator 16 view .LVU1005
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3150              		.loc 3 1089 6 is_stmt 0 discriminator 16 view .LVU1006
 3151 0462 42B1     		cbz	r2, .L216
 3152              		.loc 3 1093 3 is_stmt 1 view .LVU1007
 3153              		.loc 3 1093 10 is_stmt 0 view .LVU1008
 3154 0464 B2FA82F2 		clz	r2, r2
 3155              	.LVL274:
 3156              	.L188:
 3157              		.loc 3 1093 10 view .LVU1009
 3158              	.LBE463:
 3159              	.LBE462:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3160              		.loc 1 1579 64 view .LVU1010
 3161 0468 0132     		adds	r2, r2, #1
 3162 046a 02F01F02 		and	r2, r2, #31
 3163 046e 02EB4202 		add	r2, r2, r2, lsl #1
 3164 0472 1205     		lsls	r2, r2, #20
 3165 0474 B4E7     		b	.L187
 3166              	.LVL275:
 3167              	.L216:
 3168              	.LBB465:
 3169              	.LBB464:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3170              		.loc 3 1091 12 view .LVU1011
 3171 0476 2022     		movs	r2, #32
 3172              	.LVL276:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3173              		.loc 3 1091 12 view .LVU1012
 3174 0478 F6E7     		b	.L188
 3175              	.L179:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3176              		.loc 3 1091 12 view .LVU1013
 3177              	.LBE464:
 3178              	.LBE465:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3179              		.loc 1 1579 64 discriminator 6 view .LVU1014
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 235


 3180 047a E6B9     		cbnz	r6, .L190
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3181              		.loc 1 1579 64 discriminator 20 view .LVU1015
 3182 047c 940E     		lsrs	r4, r2, #26
 3183 047e 0134     		adds	r4, r4, #1
 3184 0480 A406     		lsls	r4, r4, #26
 3185 0482 04F0F844 		and	r4, r4, #2080374784
 3186              	.L191:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3187              		.loc 1 1579 64 discriminator 23 view .LVU1016
 3188 0486 16BB     		cbnz	r6, .L193
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3189              		.loc 1 1579 64 discriminator 24 view .LVU1017
 3190 0488 4FEA926C 		lsr	ip, r2, #26
 3191 048c 0CF1010C 		add	ip, ip, #1
 3192 0490 0CF01F0C 		and	ip, ip, #31
 3193 0494 0127     		movs	r7, #1
 3194 0496 07FA0CF7 		lsl	r7, r7, ip
 3195              	.L194:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3196              		.loc 1 1579 64 discriminator 27 view .LVU1018
 3197 049a 3C43     		orrs	r4, r4, r7
 3198 049c 36BB     		cbnz	r6, .L196
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3199              		.loc 1 1579 64 discriminator 28 view .LVU1019
 3200 049e 920E     		lsrs	r2, r2, #26
 3201 04a0 0132     		adds	r2, r2, #1
 3202 04a2 02F01F02 		and	r2, r2, #31
 3203 04a6 02EB4202 		add	r2, r2, r2, lsl #1
 3204 04aa 1E3A     		subs	r2, r2, #30
 3205 04ac 1205     		lsls	r2, r2, #20
 3206 04ae 42F00072 		orr	r2, r2, #33554432
 3207              	.L197:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3208              		.loc 1 1579 7 discriminator 31 view .LVU1020
 3209 04b2 1443     		orrs	r4, r4, r2
 3210 04b4 95E7     		b	.L189
 3211              	.L190:
 3212              	.LVL277:
 3213              	.LBB466:
 3214              	.LBI466:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3215              		.loc 3 1048 31 is_stmt 1 discriminator 21 view .LVU1021
 3216              	.LBB467:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3217              		.loc 3 1050 3 discriminator 21 view .LVU1022
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3218              		.loc 3 1055 4 discriminator 21 view .LVU1023
 3219              		.syntax unified
 3220              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3221 04b6 92FAA2F4 		rbit r4, r2
 3222              	@ 0 "" 2
 3223              	.LVL278:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3224              		.loc 3 1068 3 discriminator 21 view .LVU1024
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3225              		.loc 3 1068 3 is_stmt 0 discriminator 21 view .LVU1025
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 236


 3226              		.thumb
 3227              		.syntax unified
 3228              	.LBE467:
 3229              	.LBE466:
 3230              	.LBB468:
 3231              	.LBI468:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3232              		.loc 3 1078 30 is_stmt 1 discriminator 21 view .LVU1026
 3233              	.LBB469:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3234              		.loc 3 1089 3 discriminator 21 view .LVU1027
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3235              		.loc 3 1089 6 is_stmt 0 discriminator 21 view .LVU1028
 3236 04ba 34B1     		cbz	r4, .L217
 3237              		.loc 3 1093 3 is_stmt 1 view .LVU1029
 3238              		.loc 3 1093 10 is_stmt 0 view .LVU1030
 3239 04bc B4FA84F4 		clz	r4, r4
 3240              	.LVL279:
 3241              	.L192:
 3242              		.loc 3 1093 10 view .LVU1031
 3243              	.LBE469:
 3244              	.LBE468:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3245              		.loc 1 1579 64 view .LVU1032
 3246 04c0 0134     		adds	r4, r4, #1
 3247 04c2 A406     		lsls	r4, r4, #26
 3248 04c4 04F0F844 		and	r4, r4, #2080374784
 3249 04c8 DDE7     		b	.L191
 3250              	.LVL280:
 3251              	.L217:
 3252              	.LBB471:
 3253              	.LBB470:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3254              		.loc 3 1091 12 view .LVU1033
 3255 04ca 2024     		movs	r4, #32
 3256              	.LVL281:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3257              		.loc 3 1091 12 view .LVU1034
 3258 04cc F8E7     		b	.L192
 3259              	.L193:
 3260              	.LVL282:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3261              		.loc 3 1091 12 view .LVU1035
 3262              	.LBE470:
 3263              	.LBE471:
 3264              	.LBB472:
 3265              	.LBI472:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3266              		.loc 3 1048 31 is_stmt 1 discriminator 25 view .LVU1036
 3267              	.LBB473:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3268              		.loc 3 1050 3 discriminator 25 view .LVU1037
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3269              		.loc 3 1055 4 discriminator 25 view .LVU1038
 3270              		.syntax unified
 3271              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3272 04ce 92FAA2F7 		rbit r7, r2
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 237


 3273              	@ 0 "" 2
 3274              	.LVL283:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3275              		.loc 3 1068 3 discriminator 25 view .LVU1039
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3276              		.loc 3 1068 3 is_stmt 0 discriminator 25 view .LVU1040
 3277              		.thumb
 3278              		.syntax unified
 3279              	.LBE473:
 3280              	.LBE472:
 3281              	.LBB474:
 3282              	.LBI474:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3283              		.loc 3 1078 30 is_stmt 1 discriminator 25 view .LVU1041
 3284              	.LBB475:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3285              		.loc 3 1089 3 discriminator 25 view .LVU1042
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3286              		.loc 3 1089 6 is_stmt 0 discriminator 25 view .LVU1043
 3287 04d2 4FB1     		cbz	r7, .L218
 3288              		.loc 3 1093 3 is_stmt 1 view .LVU1044
 3289              		.loc 3 1093 10 is_stmt 0 view .LVU1045
 3290 04d4 B7FA87F7 		clz	r7, r7
 3291              	.LVL284:
 3292              	.L195:
 3293              		.loc 3 1093 10 view .LVU1046
 3294              	.LBE475:
 3295              	.LBE474:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3296              		.loc 1 1579 64 view .LVU1047
 3297 04d8 0137     		adds	r7, r7, #1
 3298 04da 07F01F07 		and	r7, r7, #31
 3299 04de 4FF0010C 		mov	ip, #1
 3300 04e2 0CFA07F7 		lsl	r7, ip, r7
 3301 04e6 D8E7     		b	.L194
 3302              	.LVL285:
 3303              	.L218:
 3304              	.LBB477:
 3305              	.LBB476:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3306              		.loc 3 1091 12 view .LVU1048
 3307 04e8 2027     		movs	r7, #32
 3308              	.LVL286:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3309              		.loc 3 1091 12 view .LVU1049
 3310 04ea F5E7     		b	.L195
 3311              	.L196:
 3312              	.LVL287:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3313              		.loc 3 1091 12 view .LVU1050
 3314              	.LBE476:
 3315              	.LBE477:
 3316              	.LBB478:
 3317              	.LBI478:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3318              		.loc 3 1048 31 is_stmt 1 discriminator 29 view .LVU1051
 3319              	.LBB479:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 238


1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3320              		.loc 3 1050 3 discriminator 29 view .LVU1052
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3321              		.loc 3 1055 4 discriminator 29 view .LVU1053
 3322              		.syntax unified
 3323              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3324 04ec 92FAA2F2 		rbit r2, r2
 3325              	@ 0 "" 2
 3326              	.LVL288:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3327              		.loc 3 1068 3 discriminator 29 view .LVU1054
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3328              		.loc 3 1068 3 is_stmt 0 discriminator 29 view .LVU1055
 3329              		.thumb
 3330              		.syntax unified
 3331              	.LBE479:
 3332              	.LBE478:
 3333              	.LBB480:
 3334              	.LBI480:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3335              		.loc 3 1078 30 is_stmt 1 discriminator 29 view .LVU1056
 3336              	.LBB481:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3337              		.loc 3 1089 3 discriminator 29 view .LVU1057
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3338              		.loc 3 1089 6 is_stmt 0 discriminator 29 view .LVU1058
 3339 04f0 5AB1     		cbz	r2, .L219
 3340              		.loc 3 1093 3 is_stmt 1 view .LVU1059
 3341              		.loc 3 1093 10 is_stmt 0 view .LVU1060
 3342 04f2 B2FA82F2 		clz	r2, r2
 3343              	.LVL289:
 3344              	.L198:
 3345              		.loc 3 1093 10 view .LVU1061
 3346              	.LBE481:
 3347              	.LBE480:
1579:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
 3348              		.loc 1 1579 64 view .LVU1062
 3349 04f6 0132     		adds	r2, r2, #1
 3350 04f8 02F01F02 		and	r2, r2, #31
 3351 04fc 02EB4202 		add	r2, r2, r2, lsl #1
 3352 0500 1E3A     		subs	r2, r2, #30
 3353 0502 1205     		lsls	r2, r2, #20
 3354 0504 42F00072 		orr	r2, r2, #33554432
 3355 0508 D3E7     		b	.L197
 3356              	.LVL290:
 3357              	.L219:
 3358              	.LBB483:
 3359              	.LBB482:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3360              		.loc 3 1091 12 view .LVU1063
 3361 050a 2022     		movs	r2, #32
 3362              	.LVL291:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3363              		.loc 3 1091 12 view .LVU1064
 3364 050c F3E7     		b	.L198
 3365              	.LVL292:
 3366              	.L199:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 239


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3367              		.loc 3 1091 12 view .LVU1065
 3368              	.LBE482:
 3369              	.LBE483:
1629:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           }
1630:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
1631:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         else
1632:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
1633:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           /* nothing to do */
1634:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         }
1635:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1636:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
1637:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
1638:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
1639:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       else
1640:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       {
1641:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1642:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3370              		.loc 1 1642 9 is_stmt 1 view .LVU1066
 3371 050e 5A6D     		ldr	r2, [r3, #84]
 3372 0510 42F02002 		orr	r2, r2, #32
 3373 0514 5A65     		str	r2, [r3, #84]
1643:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1644:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 3374              		.loc 1 1644 9 view .LVU1067
 3375              	.LVL293:
 3376              		.loc 1 1644 24 is_stmt 0 view .LVU1068
 3377 0516 0120     		movs	r0, #1
 3378              	.LVL294:
 3379              	.L174:
1645:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       }
1646:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     }
1647:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1648:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1649:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1650:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Process unlocked */
1651:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3380              		.loc 1 1651 3 is_stmt 1 view .LVU1069
 3381              		.loc 1 1651 3 view .LVU1070
 3382 0518 0022     		movs	r2, #0
 3383 051a 83F85020 		strb	r2, [r3, #80]
 3384              		.loc 1 1651 3 view .LVU1071
1652:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1653:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Return function status */
1654:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 3385              		.loc 1 1654 3 view .LVU1072
 3386              	.LVL295:
 3387              	.L138:
1655:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 3388              		.loc 1 1655 1 is_stmt 0 view .LVU1073
 3389 051e 02B0     		add	sp, sp, #8
 3390              		.cfi_remember_state
 3391              		.cfi_def_cfa_offset 16
 3392              		@ sp needed
 3393 0520 F0BC     		pop	{r4, r5, r6, r7}
 3394              		.cfi_restore 7
 3395              		.cfi_restore 6
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 240


 3396              		.cfi_restore 5
 3397              		.cfi_restore 4
 3398              		.cfi_def_cfa_offset 0
 3399 0522 7047     		bx	lr
 3400              	.LVL296:
 3401              	.L229:
 3402              		.cfi_restore_state
1599:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
 3403              		.loc 1 1599 74 discriminator 1 view .LVU1074
 3404 0524 11F4000F 		tst	r1, #8388608
 3405 0528 7FF400AF 		bne	.L201
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
 3406              		.loc 1 1601 11 is_stmt 1 view .LVU1075
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
 3407              		.loc 1 1601 15 is_stmt 0 view .LVU1076
 3408 052c 1968     		ldr	r1, [r3]
1601:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
 3409              		.loc 1 1601 14 view .LVU1077
 3410 052e 184A     		ldr	r2, .L233
 3411 0530 9142     		cmp	r1, r2
 3412 0532 F1D1     		bne	.L174
1603:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 3413              		.loc 1 1603 13 is_stmt 1 view .LVU1078
 3414 0534 45F40002 		orr	r2, r5, #8388608
 3415              	.LVL297:
 3416              	.LBB484:
 3417              	.LBI484:
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3418              		.loc 2 2496 22 view .LVU1079
 3419              	.LBB485:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3420              		.loc 2 2498 3 view .LVU1080
 3421 0538 164C     		ldr	r4, .L233+4
 3422 053a A168     		ldr	r1, [r4, #8]
 3423 053c 21F0E071 		bic	r1, r1, #29360128
 3424 0540 0A43     		orrs	r2, r2, r1
 3425              	.LVL298:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3426              		.loc 2 2498 3 is_stmt 0 view .LVU1081
 3427 0542 A260     		str	r2, [r4, #8]
 3428              	.LVL299:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3429              		.loc 2 2498 3 view .LVU1082
 3430              	.LBE485:
 3431              	.LBE484:
1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             while(wait_loop_index != 0UL)
 3432              		.loc 1 1610 13 is_stmt 1 view .LVU1083
1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             while(wait_loop_index != 0UL)
 3433              		.loc 1 1610 92 is_stmt 0 view .LVU1084
 3434 0544 144A     		ldr	r2, .L233+8
 3435 0546 1268     		ldr	r2, [r2]
 3436 0548 9209     		lsrs	r2, r2, #6
 3437 054a 1449     		ldr	r1, .L233+12
 3438 054c A1FB0212 		umull	r1, r2, r1, r2
 3439 0550 9209     		lsrs	r2, r2, #6
1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             while(wait_loop_index != 0UL)
 3440              		.loc 1 1610 73 view .LVU1085
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 241


 3441 0552 02EB4202 		add	r2, r2, r2, lsl #1
 3442 0556 9200     		lsls	r2, r2, #2
1610:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             while(wait_loop_index != 0UL)
 3443              		.loc 1 1610 29 view .LVU1086
 3444 0558 0192     		str	r2, [sp, #4]
1611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             {
 3445              		.loc 1 1611 13 is_stmt 1 view .LVU1087
1611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             {
 3446              		.loc 1 1611 18 is_stmt 0 view .LVU1088
 3447 055a 02E0     		b	.L202
 3448              	.L203:
1613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             }
 3449              		.loc 1 1613 15 is_stmt 1 view .LVU1089
1613:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             }
 3450              		.loc 1 1613 30 is_stmt 0 view .LVU1090
 3451 055c 019A     		ldr	r2, [sp, #4]
 3452 055e 013A     		subs	r2, r2, #1
 3453 0560 0192     		str	r2, [sp, #4]
 3454              	.L202:
1611:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****             {
 3455              		.loc 1 1611 35 is_stmt 1 view .LVU1091
 3456 0562 019A     		ldr	r2, [sp, #4]
 3457 0564 002A     		cmp	r2, #0
 3458 0566 F9D1     		bne	.L203
 3459 0568 D6E7     		b	.L174
 3460              	.L230:
1617:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****         {
 3461              		.loc 1 1617 73 is_stmt 0 discriminator 1 view .LVU1092
 3462 056a 11F0807F 		tst	r1, #16777216
 3463 056e 7FF4E1AE 		bne	.L204
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
 3464              		.loc 1 1619 11 is_stmt 1 view .LVU1093
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
 3465              		.loc 1 1619 15 is_stmt 0 view .LVU1094
 3466 0572 1968     		ldr	r1, [r3]
1619:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           {
 3467              		.loc 1 1619 14 view .LVU1095
 3468 0574 064A     		ldr	r2, .L233
 3469 0576 9142     		cmp	r1, r2
 3470 0578 CED1     		bne	.L174
1621:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****           }
 3471              		.loc 1 1621 13 is_stmt 1 view .LVU1096
 3472 057a 45F08072 		orr	r2, r5, #16777216
 3473              	.LVL300:
 3474              	.LBB486:
 3475              	.LBI486:
2496:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3476              		.loc 2 2496 22 view .LVU1097
 3477              	.LBB487:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3478              		.loc 2 2498 3 view .LVU1098
 3479 057e 054C     		ldr	r4, .L233+4
 3480 0580 A168     		ldr	r1, [r4, #8]
 3481 0582 21F0E071 		bic	r1, r1, #29360128
 3482 0586 0A43     		orrs	r2, r2, r1
 3483              	.LVL301:
2498:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 242


 3484              		.loc 2 2498 3 is_stmt 0 view .LVU1099
 3485 0588 A260     		str	r2, [r4, #8]
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3486              		.loc 2 2499 1 view .LVU1100
 3487 058a C5E7     		b	.L174
 3488              	.LVL302:
 3489              	.L205:
2499:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** 
 3490              		.loc 2 2499 1 view .LVU1101
 3491              	.LBE487:
 3492              	.LBE486:
1296:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
 3493              		.loc 1 1296 3 view .LVU1102
 3494 058c 0220     		movs	r0, #2
 3495 058e C6E7     		b	.L138
 3496              	.L234:
 3497              		.align	2
 3498              	.L233:
 3499 0590 00000450 		.word	1342439424
 3500 0594 00030450 		.word	1342440192
 3501 0598 00000000 		.word	SystemCoreClock
 3502 059c 632D3E05 		.word	87960931
 3503              		.cfi_endproc
 3504              	.LFE1121:
 3506              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 3507              		.align	1
 3508              		.global	HAL_ADCEx_EnableInjectedQueue
 3509              		.syntax unified
 3510              		.thumb
 3511              		.thumb_func
 3513              	HAL_ADCEx_EnableInjectedQueue:
 3514              	.LVL303:
 3515              	.LFB1122:
1656:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1657:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1658:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if  defined(ADC_SUPPORT_2_5_MSPS)
1659:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature "ADC group injected" not available on ADC peripheral of this STM32WB device */
1660:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
1661:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1662:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
1663:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
1664:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
1665:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
1666:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         conversion is ongoing.
1667:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1668:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
1669:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1670:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
1671:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 3516              		.loc 1 1671 1 is_stmt 1 view -0
 3517              		.cfi_startproc
 3518              		@ args = 0, pretend = 0, frame = 0
 3519              		@ frame_needed = 0, uses_anonymous_args = 0
 3520              		@ link register save eliminated.
1672:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3521              		.loc 1 1672 3 view .LVU1104
1673:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 243


 3522              		.loc 1 1673 3 view .LVU1105
1674:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3523              		.loc 1 1674 3 view .LVU1106
1675:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1676:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1677:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3524              		.loc 1 1677 3 view .LVU1107
1678:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1679:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3525              		.loc 1 1679 3 view .LVU1108
 3526              		.loc 1 1679 79 is_stmt 0 view .LVU1109
 3527 0000 0168     		ldr	r1, [r0]
 3528              	.LVL304:
 3529              	.LBB488:
 3530              	.LBI488:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3531              		.loc 2 6863 26 is_stmt 1 view .LVU1110
 3532              	.LBB489:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3533              		.loc 2 6865 3 view .LVU1111
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3534              		.loc 2 6865 12 is_stmt 0 view .LVU1112
 3535 0002 8B68     		ldr	r3, [r1, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3536              		.loc 2 6865 74 view .LVU1113
 3537 0004 13F00403 		ands	r3, r3, #4
 3538 0008 00D0     		beq	.L236
 3539 000a 0123     		movs	r3, #1
 3540              	.L236:
 3541              	.LVL305:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3542              		.loc 2 6865 74 view .LVU1114
 3543              	.LBE489:
 3544              	.LBE488:
1680:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3545              		.loc 1 1680 3 is_stmt 1 view .LVU1115
 3546              	.LBB490:
 3547              	.LBI490:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3548              		.loc 2 7018 26 view .LVU1116
 3549              	.LBB491:
 3550              		.loc 2 7020 3 view .LVU1117
 3551              		.loc 2 7020 12 is_stmt 0 view .LVU1118
 3552 000c 8A68     		ldr	r2, [r1, #8]
 3553              		.loc 2 7020 76 view .LVU1119
 3554 000e 12F00802 		ands	r2, r2, #8
 3555 0012 00D0     		beq	.L237
 3556 0014 0122     		movs	r2, #1
 3557              	.L237:
 3558              	.LVL306:
 3559              		.loc 2 7020 76 view .LVU1120
 3560              	.LBE491:
 3561              	.LBE490:
1681:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1682:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
1683:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3562              		.loc 1 1683 3 is_stmt 1 view .LVU1121
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 244


 3563              		.loc 1 1683 6 is_stmt 0 view .LVU1122
 3564 0016 53B9     		cbnz	r3, .L239
1684:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3565              		.loc 1 1684 7 view .LVU1123
 3566 0018 5AB9     		cbnz	r2, .L240
1685:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      )
1686:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1687:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 3567              		.loc 1 1687 5 is_stmt 1 view .LVU1124
 3568 001a CB68     		ldr	r3, [r1, #12]
 3569              	.LVL307:
 3570              		.loc 1 1687 5 is_stmt 0 view .LVU1125
 3571 001c 23F00043 		bic	r3, r3, #-2147483648
 3572 0020 CB60     		str	r3, [r1, #12]
1688:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1689:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
1690:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 3573              		.loc 1 1690 5 is_stmt 1 view .LVU1126
 3574 0022 436D     		ldr	r3, [r0, #84]
 3575 0024 23F48043 		bic	r3, r3, #16384
 3576 0028 4365     		str	r3, [r0, #84]
1691:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1692:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3577              		.loc 1 1692 5 view .LVU1127
 3578              	.LVL308:
 3579              		.loc 1 1692 20 is_stmt 0 view .LVU1128
 3580 002a 0020     		movs	r0, #0
 3581              	.LVL309:
 3582              		.loc 1 1692 20 view .LVU1129
 3583 002c 7047     		bx	lr
 3584              	.LVL310:
 3585              	.L239:
1693:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1694:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
1695:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1696:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3586              		.loc 1 1696 20 view .LVU1130
 3587 002e 0120     		movs	r0, #1
 3588              	.LVL311:
 3589              		.loc 1 1696 20 view .LVU1131
 3590 0030 7047     		bx	lr
 3591              	.LVL312:
 3592              	.L240:
 3593              		.loc 1 1696 20 view .LVU1132
 3594 0032 0120     		movs	r0, #1
 3595              	.LVL313:
1697:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1698:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1699:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 3596              		.loc 1 1699 3 is_stmt 1 view .LVU1133
1700:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 3597              		.loc 1 1700 1 is_stmt 0 view .LVU1134
 3598 0034 7047     		bx	lr
 3599              		.cfi_endproc
 3600              	.LFE1122:
 3602              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 3603              		.align	1
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 245


 3604              		.global	HAL_ADCEx_DisableInjectedQueue
 3605              		.syntax unified
 3606              		.thumb
 3607              		.thumb_func
 3609              	HAL_ADCEx_DisableInjectedQueue:
 3610              	.LVL314:
 3611              	.LFB1123:
1701:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1702:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1703:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
1704:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
1705:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
1706:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
1707:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         conversion is ongoing.
1708:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1709:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
1710:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1711:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
1712:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 3612              		.loc 1 1712 1 is_stmt 1 view -0
 3613              		.cfi_startproc
 3614              		@ args = 0, pretend = 0, frame = 0
 3615              		@ frame_needed = 0, uses_anonymous_args = 0
 3616              		@ link register save eliminated.
1713:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3617              		.loc 1 1713 3 view .LVU1136
1714:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3618              		.loc 1 1714 3 view .LVU1137
1715:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3619              		.loc 1 1715 3 view .LVU1138
1716:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1717:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1718:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3620              		.loc 1 1718 3 view .LVU1139
1719:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1720:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3621              		.loc 1 1720 3 view .LVU1140
 3622              		.loc 1 1720 79 is_stmt 0 view .LVU1141
 3623 0000 0168     		ldr	r1, [r0]
 3624              	.LVL315:
 3625              	.LBB492:
 3626              	.LBI492:
6863:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3627              		.loc 2 6863 26 is_stmt 1 view .LVU1142
 3628              	.LBB493:
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3629              		.loc 2 6865 3 view .LVU1143
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3630              		.loc 2 6865 12 is_stmt 0 view .LVU1144
 3631 0002 8B68     		ldr	r3, [r1, #8]
6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3632              		.loc 2 6865 74 view .LVU1145
 3633 0004 13F00403 		ands	r3, r3, #4
 3634 0008 00D0     		beq	.L242
 3635 000a 0123     		movs	r3, #1
 3636              	.L242:
 3637              	.LVL316:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 246


6865:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3638              		.loc 2 6865 74 view .LVU1146
 3639              	.LBE493:
 3640              	.LBE492:
1721:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3641              		.loc 1 1721 3 is_stmt 1 view .LVU1147
 3642              	.LBB494:
 3643              	.LBI494:
7018:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3644              		.loc 2 7018 26 view .LVU1148
 3645              	.LBB495:
 3646              		.loc 2 7020 3 view .LVU1149
 3647              		.loc 2 7020 12 is_stmt 0 view .LVU1150
 3648 000c 8A68     		ldr	r2, [r1, #8]
 3649              		.loc 2 7020 76 view .LVU1151
 3650 000e 12F00802 		ands	r2, r2, #8
 3651 0012 00D0     		beq	.L243
 3652 0014 0122     		movs	r2, #1
 3653              	.L243:
 3654              	.LVL317:
 3655              		.loc 2 7020 76 view .LVU1152
 3656              	.LBE495:
 3657              	.LBE494:
1722:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1723:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
1724:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3658              		.loc 1 1724 3 is_stmt 1 view .LVU1153
 3659              		.loc 1 1724 6 is_stmt 0 view .LVU1154
 3660 0016 53B9     		cbnz	r3, .L245
1725:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3661              		.loc 1 1725 7 view .LVU1155
 3662 0018 5AB9     		cbnz	r2, .L246
1726:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****      )
1727:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1728:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
 3663              		.loc 1 1728 5 is_stmt 1 view .LVU1156
 3664              	.LVL318:
 3665              	.LBB496:
 3666              	.LBI496:
5056:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3667              		.loc 2 5056 22 view .LVU1157
 3668              	.LBB497:
5058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3669              		.loc 2 5058 3 view .LVU1158
 3670 001a CB68     		ldr	r3, [r1, #12]
 3671              	.LVL319:
5058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3672              		.loc 2 5058 3 is_stmt 0 view .LVU1159
 3673 001c 23F00043 		bic	r3, r3, #-2147483648
 3674 0020 23F40013 		bic	r3, r3, #2097152
 3675 0024 43F00043 		orr	r3, r3, #-2147483648
 3676 0028 CB60     		str	r3, [r1, #12]
 3677              	.LVL320:
5058:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3678              		.loc 2 5058 3 view .LVU1160
 3679              	.LBE497:
 3680              	.LBE496:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 247


1729:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3681              		.loc 1 1729 5 is_stmt 1 view .LVU1161
 3682              		.loc 1 1729 20 is_stmt 0 view .LVU1162
 3683 002a 0020     		movs	r0, #0
 3684              	.LVL321:
 3685              		.loc 1 1729 20 view .LVU1163
 3686 002c 7047     		bx	lr
 3687              	.LVL322:
 3688              	.L245:
1730:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1731:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
1732:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1733:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3689              		.loc 1 1733 20 view .LVU1164
 3690 002e 0120     		movs	r0, #1
 3691              	.LVL323:
 3692              		.loc 1 1733 20 view .LVU1165
 3693 0030 7047     		bx	lr
 3694              	.LVL324:
 3695              	.L246:
 3696              		.loc 1 1733 20 view .LVU1166
 3697 0032 0120     		movs	r0, #1
 3698              	.LVL325:
1734:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1735:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1736:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 3699              		.loc 1 1736 3 is_stmt 1 view .LVU1167
1737:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 3700              		.loc 1 1737 1 is_stmt 0 view .LVU1168
 3701 0034 7047     		bx	lr
 3702              		.cfi_endproc
 3703              	.LFE1123:
 3705              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 3706              		.align	1
 3707              		.global	HAL_ADCEx_DisableVoltageRegulator
 3708              		.syntax unified
 3709              		.thumb
 3710              		.thumb_func
 3712              	HAL_ADCEx_DisableVoltageRegulator:
 3713              	.LVL326:
 3714              	.LFB1124:
1738:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #endif /* ADC_SUPPORT_2_5_MSPS */
1739:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1740:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1741:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
1742:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
1743:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
1744:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
1745:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
1746:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1747:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
1748:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1749:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
1750:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 3715              		.loc 1 1750 1 is_stmt 1 view -0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 248


 3718              		@ frame_needed = 0, uses_anonymous_args = 0
 3719              		@ link register save eliminated.
1751:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3720              		.loc 1 1751 3 view .LVU1170
1752:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1753:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1754:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3721              		.loc 1 1754 3 view .LVU1171
1755:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1756:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
1757:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3722              		.loc 1 1757 3 view .LVU1172
 3723              		.loc 1 1757 28 is_stmt 0 view .LVU1173
 3724 0000 0368     		ldr	r3, [r0]
 3725              	.LVL327:
 3726              	.LBB498:
 3727              	.LBI498:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3728              		.loc 2 6706 26 is_stmt 1 view .LVU1174
 3729              	.LBB499:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3730              		.loc 2 6708 3 view .LVU1175
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3731              		.loc 2 6708 12 is_stmt 0 view .LVU1176
 3732 0002 9A68     		ldr	r2, [r3, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3733              		.loc 2 6708 68 view .LVU1177
 3734 0004 12F0010F 		tst	r2, #1
 3735 0008 07D1     		bne	.L249
 3736              	.LVL328:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3737              		.loc 2 6708 68 view .LVU1178
 3738              	.LBE499:
 3739              	.LBE498:
1758:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1759:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 3740              		.loc 1 1759 5 is_stmt 1 view .LVU1179
 3741              	.LBB500:
 3742              	.LBI500:
6635:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3743              		.loc 2 6635 22 view .LVU1180
 3744              	.LBB501:
6637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3745              		.loc 2 6637 3 view .LVU1181
 3746 000a 9A68     		ldr	r2, [r3, #8]
 3747 000c 22F01042 		bic	r2, r2, #-1879048192
 3748 0010 22F03F02 		bic	r2, r2, #63
 3749 0014 9A60     		str	r2, [r3, #8]
 3750              	.LVL329:
6637:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3751              		.loc 2 6637 3 is_stmt 0 view .LVU1182
 3752              	.LBE501:
 3753              	.LBE500:
1760:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3754              		.loc 1 1760 5 is_stmt 1 view .LVU1183
 3755              		.loc 1 1760 20 is_stmt 0 view .LVU1184
 3756 0016 0020     		movs	r0, #0
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 249


 3757              	.LVL330:
 3758              		.loc 1 1760 20 view .LVU1185
 3759 0018 7047     		bx	lr
 3760              	.LVL331:
 3761              	.L249:
1761:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1762:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
1763:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1764:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3762              		.loc 1 1764 20 view .LVU1186
 3763 001a 0120     		movs	r0, #1
 3764              	.LVL332:
1765:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1766:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1767:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 3765              		.loc 1 1767 3 is_stmt 1 view .LVU1187
1768:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 3766              		.loc 1 1768 1 is_stmt 0 view .LVU1188
 3767 001c 7047     		bx	lr
 3768              		.cfi_endproc
 3769              	.LFE1124:
 3771              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 3772              		.align	1
 3773              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 3774              		.syntax unified
 3775              		.thumb
 3776              		.thumb_func
 3778              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 3779              	.LVL333:
 3780              	.LFB1125:
1769:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1770:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #if defined(ADC_SUPPORT_2_5_MSPS)
1771:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /* Feature " ADC deep power-down" not available on ADC peripheral of this STM32WB device */
1772:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** #else
1773:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** /**
1774:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @brief  Enter ADC deep power-down mode
1775:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
1776:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
1777:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         entering stop modes.
1778:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
1779:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
1780:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
1781:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         calibration is lost.
1782:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
1783:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
1784:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
1785:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   *         saved calibration factor.
1786:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @param hadc ADC handle
1787:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   * @retval HAL status
1788:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   */
1789:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
1790:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** {
 3781              		.loc 1 1790 1 is_stmt 1 view -0
 3782              		.cfi_startproc
 3783              		@ args = 0, pretend = 0, frame = 0
 3784              		@ frame_needed = 0, uses_anonymous_args = 0
 3785              		@ link register save eliminated.
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 250


1791:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3786              		.loc 1 1791 3 view .LVU1190
1792:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1793:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Check the parameters */
1794:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3787              		.loc 1 1794 3 view .LVU1191
1795:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1796:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
1797:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3788              		.loc 1 1797 3 view .LVU1192
 3789              		.loc 1 1797 28 is_stmt 0 view .LVU1193
 3790 0000 0268     		ldr	r2, [r0]
 3791              	.LVL334:
 3792              	.LBB502:
 3793              	.LBI502:
6706:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3794              		.loc 2 6706 26 is_stmt 1 view .LVU1194
 3795              	.LBB503:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3796              		.loc 2 6708 3 view .LVU1195
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3797              		.loc 2 6708 12 is_stmt 0 view .LVU1196
 3798 0002 9368     		ldr	r3, [r2, #8]
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3799              		.loc 2 6708 68 view .LVU1197
 3800 0004 13F0010F 		tst	r3, #1
 3801 0008 09D1     		bne	.L252
 3802              	.LVL335:
6708:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** }
 3803              		.loc 2 6708 68 view .LVU1198
 3804              	.LBE503:
 3805              	.LBE502:
1798:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1799:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
 3806              		.loc 1 1799 5 is_stmt 1 view .LVU1199
 3807              	.LBB504:
 3808              	.LBI504:
6559:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h **** {
 3809              		.loc 2 6559 22 view .LVU1200
 3810              	.LBB505:
6564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3811              		.loc 2 6564 3 view .LVU1201
 3812 000a 9368     		ldr	r3, [r2, #8]
 3813 000c 23F02043 		bic	r3, r3, #-1610612736
 3814 0010 23F03F03 		bic	r3, r3, #63
 3815 0014 43F00053 		orr	r3, r3, #536870912
 3816 0018 9360     		str	r3, [r2, #8]
 3817              	.LVL336:
6564:Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3818              		.loc 2 6564 3 is_stmt 0 view .LVU1202
 3819              	.LBE505:
 3820              	.LBE504:
1800:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3821              		.loc 1 1800 5 is_stmt 1 view .LVU1203
 3822              		.loc 1 1800 20 is_stmt 0 view .LVU1204
 3823 001a 0020     		movs	r0, #0
 3824              	.LVL337:
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 251


 3825              		.loc 1 1800 20 view .LVU1205
 3826 001c 7047     		bx	lr
 3827              	.LVL338:
 3828              	.L252:
1801:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1802:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   else
1803:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   {
1804:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3829              		.loc 1 1804 20 view .LVU1206
 3830 001e 0120     		movs	r0, #1
 3831              	.LVL339:
1805:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   }
1806:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** 
1807:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c ****   return tmp_hal_status;
 3832              		.loc 1 1807 3 is_stmt 1 view .LVU1207
1808:Drivers/STM32WBxx_HAL_Driver/Src/stm32wbxx_hal_adc_ex.c **** }
 3833              		.loc 1 1808 1 is_stmt 0 view .LVU1208
 3834 0020 7047     		bx	lr
 3835              		.cfi_endproc
 3836              	.LFE1125:
 3838              		.text
 3839              	.Letext0:
 3840              		.file 4 "/Users/aeheigl/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 3841              		.file 5 "/Users/aeheigl/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@
 3842              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
 3843              		.file 7 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wbxx.h"
 3844              		.file 8 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 3845              		.file 9 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_dma.h"
 3846              		.file 10 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_adc.h"
 3847              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_adc_ex.h"
 3848              		.file 12 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 3849              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 252


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wbxx_hal_adc_ex.c
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:20     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:26     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:184    .text.HAL_ADCEx_Calibration_Start:0000000000000098 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:189    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:195    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:236    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:242    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:416    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:422    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:602    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:608    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:706    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:712    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:951    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:957    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1182   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1188   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1291   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1297   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1360   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1366   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1381   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1387   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1402   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1408   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1423   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1429   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1444   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1450   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 HAL_ADCEx_EndOfSamplingCallback
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1465   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1471   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1572   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1578   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1684   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1690   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1838   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:1844   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:2871   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000364 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:2883   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000388 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3499   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000590 $d
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3507   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3513   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 HAL_ADCEx_EnableInjectedQueue
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3603   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3609   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 HAL_ADCEx_DisableInjectedQueue
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3706   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3712   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 HAL_ADCEx_DisableVoltageRegulator
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3772   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 $t
/var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s:3778   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 HAL_ADCEx_EnterADCDeepPowerDownMode

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Abort
ARM GAS  /var/folders/r0/ydptfcq11zg26w5yg1gx1gdc0000gn/T//ccUjwVUW.s 			page 253


SystemCoreClock
